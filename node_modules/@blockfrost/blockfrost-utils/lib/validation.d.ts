declare type BlockfrostNetwork = 'mainnet' | 'testnet' | 'preview' | 'preprod';
export declare const validateHex: (input: string) => boolean;
export declare const validateStakeAddress: (input: string, network: BlockfrostNetwork) => boolean;
export declare const convertStakeAddress: (input: string, network: BlockfrostNetwork) => string | undefined;
export declare const validateAndConvertPool: (input: string) => string | undefined;
export declare const paymentCredFromBech32Address: (input: string) => string | undefined;
export declare const paymentCredToBech32Address: (input: string) => string | undefined;
export declare const detectAndValidateAddressType: (input: string, network: BlockfrostNetwork) => 'byron' | 'shelley' | undefined;
export declare const getAddressTypeAndPaymentCred: (address: string, network: BlockfrostNetwork) => {
    addressType: "byron" | "shelley" | undefined;
    paymentCred: string | undefined;
};
export declare const scriptHashFromBech32Address: (input: string) => string | undefined;
export declare const validatePositiveInRangeSignedInt: (possiblePositiveInt: string | number | undefined) => boolean;
export declare const validatePositiveInRangeSignedBigInt: (possiblePositiveBigInt: string | undefined) => boolean;
export declare const validateInRangeUnsignedInt: (input: string | number | undefined) => boolean;
export declare const validateDerivationXpub: (input: string) => boolean;
export declare const validateBlockHash: (input: string) => boolean;
export declare const isNumber: (value: string | number | undefined) => boolean;
export declare const validatePolicy: (input: string) => boolean;
export declare const validateAsset: (input: string) => boolean;
export {};
