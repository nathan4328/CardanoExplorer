/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/token/[policy]"],{

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLmVudikgJiYgdHlwZW9mICgocmVmMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fnathan%2FDesktop%2Fexplorer%2Fsrc%2Fpages%2Ftoken%2F%5Bpolicy%5D.js&page=%2Ftoken%2F%5Bpolicy%5D!":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fnathan%2FDesktop%2Fexplorer%2Fsrc%2Fpages%2Ftoken%2F%5Bpolicy%5D.js&page=%2Ftoken%2F%5Bpolicy%5D! ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/token/[policy]\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/token/[policy].js */ \"./src/pages/token/[policy].js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/token/[policy]\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRm5hdGhhbiUyRkRlc2t0b3AlMkZleHBsb3JlciUyRnNyYyUyRnBhZ2VzJTJGdG9rZW4lMkYlNUJwb2xpY3klNUQuanMmcGFnZT0lMkZ0b2tlbiUyRiU1QnBvbGljeSU1RCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBK0I7QUFDdEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzE1YTciXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi90b2tlbi9bcG9saWN5XVwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vc3JjL3BhZ2VzL3Rva2VuL1twb2xpY3ldLmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi90b2tlbi9bcG9saWN5XVwiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fnathan%2FDesktop%2Fexplorer%2Fsrc%2Fpages%2Ftoken%2F%5Bpolicy%5D.js&page=%2Ftoken%2F%5Bpolicy%5D!\n"));

/***/ }),

/***/ "./next.config.js":
/*!************************!*\
  !*** ./next.config.js ***!
  \************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @type {import('next').NextConfig} */ \nconst nextConfig = {\n    reactStrictMode: true,\n    images: {\n        domains: [\n            \"dweb.link\"\n        ]\n    },\n    webpack: function(config, options) {\n        config.experiments = {\n            asyncWebAssembly: true,\n            topLevelAwait: true,\n            layers: true\n        };\n        return config;\n    }\n};\nmodule.exports = nextConfig;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9uZXh0LmNvbmZpZy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFDdEMsTUFBTUEsYUFBYTtJQUNqQkMsaUJBQWlCLElBQUk7SUFDckJDLFFBQVE7UUFDTkMsU0FBUztZQUFDO1NBQVk7SUFDeEI7SUFDQUMsU0FBUyxTQUFVQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUNsQ0QsT0FBT0UsV0FBVyxHQUFHO1lBQ25CQyxrQkFBa0IsSUFBSTtZQUN0QkMsZUFBZSxJQUFJO1lBQ25CQyxRQUFRLElBQUk7UUFDZDtRQUNBLE9BQU9MO0lBQ1Q7QUFDRjtBQUNBTSxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25leHQuY29uZmlnLmpzPzAxYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEB0eXBlIHtpbXBvcnQoJ25leHQnKS5OZXh0Q29uZmlnfSAqL1xuY29uc3QgbmV4dENvbmZpZyA9IHtcbiAgcmVhY3RTdHJpY3RNb2RlOiB0cnVlLFxuICBpbWFnZXM6IHtcbiAgICBkb21haW5zOiBbJ2R3ZWIubGluayddLFxuICB9LFxuICB3ZWJwYWNrOiBmdW5jdGlvbiAoY29uZmlnLCBvcHRpb25zKSB7XG4gICAgY29uZmlnLmV4cGVyaW1lbnRzID0ge1xuICAgICAgYXN5bmNXZWJBc3NlbWJseTogdHJ1ZSxcbiAgICAgIHRvcExldmVsQXdhaXQ6IHRydWUsXG4gICAgICBsYXllcnM6IHRydWVcbiAgICB9O1xuICAgIHJldHVybiBjb25maWc7XG4gIH0sXG59O1xubW9kdWxlLmV4cG9ydHMgPSBuZXh0Q29uZmlnOyJdLCJuYW1lcyI6WyJuZXh0Q29uZmlnIiwicmVhY3RTdHJpY3RNb2RlIiwiaW1hZ2VzIiwiZG9tYWlucyIsIndlYnBhY2siLCJjb25maWciLCJvcHRpb25zIiwiZXhwZXJpbWVudHMiLCJhc3luY1dlYkFzc2VtYmx5IiwidG9wTGV2ZWxBd2FpdCIsImxheWVycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./next.config.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCx1QkFBdUIsR0FBR0U7QUFDMUIsTUFBTUMsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTRixnQkFBZ0JLLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRTtJQUMzRCxJQUFJTixLQUErQixFQUFFLEVBV3BDLE1BQU07UUFDSCxPQUFPLEtBQUs7SUFDaEIsQ0FBQztBQUNMO0FBRUEsSUFBSSxDQUFDLE9BQU9KLFFBQVF1QixPQUFPLEtBQUssY0FBZSxPQUFPdkIsUUFBUXVCLE9BQU8sS0FBSyxZQUFZdkIsUUFBUXVCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT3ZCLFFBQVF1QixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLMUIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRdUIsT0FBTyxFQUFFLGNBQWM7UUFBRXRCLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPMkIsTUFBTSxDQUFDekIsUUFBUXVCLE9BQU8sRUFBRXZCO0lBQy9CMEIsT0FBTzFCLE9BQU8sR0FBR0EsUUFBUXVCLE9BQU87QUFDbEMsQ0FBQyxDQUVELDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXREb21haW5Mb2NhbGUgPSBnZXREb21haW5Mb2NhbGU7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBnZXREb21haW5Mb2NhbGUocGF0aCwgbG9jYWxlLCBsb2NhbGVzLCBkb21haW5Mb2NhbGVzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoJy4vbm9ybWFsaXplLWxvY2FsZS1wYXRoJykubm9ybWFsaXplTG9jYWxlUGF0aDtcbiAgICAgICAgY29uc3QgZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZSgnLi9kZXRlY3QtZG9tYWluLWxvY2FsZScpLmRldGVjdERvbWFpbkxvY2FsZTtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gbG9jYWxlIHx8IG5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aCwgbG9jYWxlcykuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgIGNvbnN0IGRvbWFpbiA9IGRldGVjdERvbWFpbkxvY2FsZShkb21haW5Mb2NhbGVzLCB1bmRlZmluZWQsIHRhcmdldCk7XG4gICAgICAgIGlmIChkb21haW4pIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3RvID0gYGh0dHAke2RvbWFpbi5odHRwID8gJycgOiAncyd9Oi8vYDtcbiAgICAgICAgICAgIGNvbnN0IGZpbmFsTG9jYWxlID0gdGFyZ2V0ID09PSBkb21haW4uZGVmYXVsdExvY2FsZSA/ICcnIDogYC8ke3RhcmdldH1gO1xuICAgICAgICAgICAgcmV0dXJuIGAke3Byb3RvfSR7ZG9tYWluLmRvbWFpbn0ke2Jhc2VQYXRofSR7ZmluYWxMb2NhbGV9JHtwYXRofWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldERvbWFpbkxvY2FsZSIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwibG9jYWxlIiwibG9jYWxlcyIsImRvbWFpbkxvY2FsZXMiLCJfX05FWFRfSTE4Tl9TVVBQT1JUIiwibm9ybWFsaXplTG9jYWxlUGF0aCIsInJlcXVpcmUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJ0YXJnZXQiLCJkZXRlY3RlZExvY2FsZSIsImRvbWFpbiIsInVuZGVmaW5lZCIsInByb3RvIiwiaHR0cCIsImZpbmFsTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/image.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/client/image.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\"));\nvar _imageBlurSvg = __webpack_require__(/*! ../shared/lib/image-blur-svg */ \"./node_modules/next/dist/shared/lib/image-blur-svg.js\");\nvar _imageConfig = __webpack_require__(/*! ../shared/lib/image-config */ \"./node_modules/next/dist/shared/lib/image-config.js\");\nvar _imageConfigContext = __webpack_require__(/*! ../shared/lib/image-config-context */ \"./node_modules/next/dist/shared/lib/image-config-context.js\");\nvar _warnOnce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nvar _imageLoader = _interop_require_default(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"./node_modules/next/dist/shared/lib/image-loader.js\"));\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[\"dweb.link\"],\"remotePatterns\":[]};\nconst allImgs = new Map();\nlet perfObserver;\nif (false) {}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes , allSizes  } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config , src , unoptimized , width , quality , sizes , loader  } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>\"\".concat(loader({\n                config,\n                src,\n                quality,\n                width: w\n            }), \" \").concat(kind === \"w\" ? w : i + 1).concat(kind)).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentNode) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes'));\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" and parent element with invalid \"position\". Provided \"').concat(position, '\" should be one of ').concat(valid.map(String).join(\",\"), \".\"));\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.'));\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.'));\n            }\n        }\n    });\n}\nconst ImageElement = /*#__PURE__*/ (0, _react).forwardRef(_s((_param, forwardedRef)=>{\n    _s();\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        style: _extends({}, imgStyle, blurStyle),\n        ref: (0, _react).useCallback((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!srcString) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n}, \"epj4qY15NHsef74wNqHIp5fdZmg=\"));\n_c = ImageElement;\nconst Image = _s1(/*#__PURE__*/ (0, _react).forwardRef(_c1 = _s1((_param, forwardedRef)=>{\n    _s1();\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL , layout , objectFit , objectPosition , lazyBoundary , lazyRoot  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\",\n        \"layout\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"lazyBoundary\",\n        \"lazyRoot\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"'.concat(src, '\" is missing \"loader\" prop.') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = _extends({}, style, layoutStyle);\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \".concat(JSON.stringify(staticImageData)));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \".concat(JSON.stringify(staticImageData)));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"width\" and \"fill\" properties. Only one should be used.'));\n                }\n                if (height) {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"height\" and \"fill\" properties. Only one should be used.'));\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.'));\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.'));\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.'));\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"'.concat(src, '\" is missing required \"width\" property.'));\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"'.concat(src, '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"').concat(width, '\".'));\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"'.concat(src, '\" is missing required \"height\" property.'));\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"'.concat(src, '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"').concat(height, '\".'));\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"'.concat(src, '\" has invalid \"loading\" property. Provided \"').concat(loading, '\" should be one of ').concat(VALID_LOADING_VALUES.map(String).join(\",\"), \".\"));\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"'.concat(src, '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.'));\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" is smaller than 40x40. Consider removing the \"placeholder=\\'blur\\'\" property to improve performance.'));\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error('Image with src \"'.concat(src, '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n          Possible solutions:\\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n            - Change the \"src\" property to a static import with one of the supported file types: ').concat(VALID_BLUR_EXT.join(\",\"), '\\n            - Remove the \"placeholder\" property, effectively no blur effect\\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url'));\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.'));\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has legacy prop \"').concat(legacyKey, '\". Did you forget to run the codemod?') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if ( true && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var ref;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (ref = entry.element) == null ? void 0 : ref.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== \"blur\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(lcpImage.src, '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.') + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: 'url(\"data:image/svg+xml;charset=utf-8,'.concat((0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL\n        }), '\")')\n    } : {};\n    if (true) {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = 'url(\"'.concat(blurDataURL, '\")');\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (true) {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const linkProps = {\n        // @ts-expect-error upgrade react types to react 18\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    };\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n        ref: forwardedRef\n    })), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n}, \"MNWBZtgATWANvDNCrE8t4SwDfUU=\")), \"MNWBZtgATWANvDNCrE8t4SwDfUU=\");\n_c2 = Image;\nvar _default = Image;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ImageElement\");\n$RefreshReg$(_c1, \"Image$(0, _react).forwardRef\");\n$RefreshReg$(_c2, \"Image\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFDYTs7QUFEYjtBQUVBQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsV0FBV0MsbUhBQStDO0FBQzlELElBQUlDLDJCQUEyQkQsbUpBQStEO0FBQzlGLElBQUlFLDRCQUE0QkYscUpBQWdFO0FBQ2hHLElBQUlHLG1DQUFtQ0gsbUtBQXVFO0FBQzlHLElBQUlJLFNBQVNGLDBCQUEwQkYsbUJBQU9BLENBQUMsNENBQU87QUFDdEQsSUFBSUssUUFBUUoseUJBQXlCRCxtQkFBT0EsQ0FBQyx1RUFBb0I7QUFDakUsSUFBSU0sZ0JBQWdCTixtQkFBT0EsQ0FBQywyRkFBOEI7QUFDMUQsSUFBSU8sZUFBZVAsbUJBQU9BLENBQUMsdUZBQTRCO0FBQ3ZELElBQUlRLHNCQUFzQlIsbUJBQU9BLENBQUMsdUdBQW9DO0FBQ3RFLElBQUlTLFlBQVlULG1CQUFPQSxDQUFDLDZGQUErQjtBQUN2RCxJQUFJVSxlQUFlVCx5QkFBeUJELG1CQUFPQSxDQUFDLDhGQUFtQztBQUV2RixNQUFNVyxZQUFZQyxxT0FBNkI7QUFDL0MsTUFBTUcsVUFBVSxJQUFJQztBQUNwQixJQUFJQztBQUNKLElBQUksS0FBa0IsRUFBYSxFQUVsQztBQUNELE1BQU1HLHVCQUF1QjtJQUN6QjtJQUNBO0lBQ0FDO0NBQ0g7QUFDRCxTQUFTQyxnQkFBZ0JDLEdBQUcsRUFBRTtJQUMxQixPQUFPQSxJQUFJekIsT0FBTyxLQUFLdUI7QUFDM0I7QUFDQSxTQUFTRyxrQkFBa0JELEdBQUcsRUFBRTtJQUM1QixPQUFPQSxJQUFJQSxHQUFHLEtBQUtGO0FBQ3ZCO0FBQ0EsU0FBU0ksZUFBZUYsR0FBRyxFQUFFO0lBQ3pCLE9BQU8sT0FBT0EsUUFBUSxZQUFhRCxDQUFBQSxnQkFBZ0JDLFFBQVFDLGtCQUFrQkQsSUFBRztBQUNwRjtBQUNBLFNBQVNHLFVBQVUsS0FBMkIsRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUU7UUFBM0MsRUFBRUMsWUFBVyxFQUFHQyxTQUFRLEVBQUcsR0FBM0I7SUFDZixJQUFJRixPQUFPO1FBQ1AseURBQXlEO1FBQ3pELE1BQU1HLGtCQUFrQjtRQUN4QixNQUFNQyxlQUFlLEVBQUU7UUFDdkIsSUFBSSxJQUFJQyxPQUFPQSxRQUFRRixnQkFBZ0JHLElBQUksQ0FBQ04sUUFBUUssTUFBTTtZQUN0REQsYUFBYUcsSUFBSSxDQUFDQyxTQUFTSCxLQUFLLENBQUMsRUFBRTtRQUN2QztRQUNBLElBQUlELGFBQWFLLE1BQU0sRUFBRTtZQUNyQixNQUFNQyxnQkFBZ0JDLEtBQUtDLEdBQUcsSUFBSVIsZ0JBQWdCO1lBQ2xELE9BQU87Z0JBQ0hTLFFBQVFYLFNBQVNZLE1BQU0sQ0FBQyxDQUFDQyxJQUFJQSxLQUFLZCxXQUFXLENBQUMsRUFBRSxHQUFHUztnQkFDbkRNLE1BQU07WUFDVjtRQUNKLENBQUM7UUFDRCxPQUFPO1lBQ0hILFFBQVFYO1lBQ1JjLE1BQU07UUFDVjtJQUNKLENBQUM7SUFDRCxJQUFJLE9BQU9qQixVQUFVLFVBQVU7UUFDM0IsT0FBTztZQUNIYyxRQUFRWjtZQUNSZSxNQUFNO1FBQ1Y7SUFDSixDQUFDO0lBQ0QsTUFBTUgsU0FBUztXQUNSLElBQUlJLElBQ1AscUVBQXFFO1FBQ3JFLGtFQUFrRTtRQUNsRSxvRUFBb0U7UUFDcEUsdUVBQXVFO1FBQ3ZFLHNFQUFzRTtRQUN0RSx1Q0FBdUM7UUFDdkMscUlBQXFJO1FBQ3JJO1lBQ0lsQjtZQUNBQSxRQUFRLEVBQUUsYUFBYTtTQUMxQixDQUFDbUIsR0FBRyxDQUFDLENBQUNDLElBQUlqQixTQUFTa0IsSUFBSSxDQUFDLENBQUNDLElBQUlBLEtBQUtGLE1BQU1qQixRQUFRLENBQUNBLFNBQVNPLE1BQU0sR0FBRyxFQUFFO0tBQ3pFO0lBQ0QsT0FBTztRQUNISTtRQUNBRyxNQUFNO0lBQ1Y7QUFDSjtBQUNBLFNBQVNNLGlCQUFpQixLQUFrRSxFQUFFO1FBQXBFLEVBQUVDLE9BQU0sRUFBRzVCLElBQUcsRUFBRzZCLFlBQVcsRUFBR3pCLE1BQUssRUFBRzBCLFFBQU8sRUFBR3pCLE1BQUssRUFBRzBCLE9BQU0sRUFBRyxHQUFsRTtJQUN0QixJQUFJRixhQUFhO1FBQ2IsT0FBTztZQUNIN0I7WUFDQWdDLFFBQVFsQztZQUNSTyxPQUFPUDtRQUNYO0lBQ0osQ0FBQztJQUNELE1BQU0sRUFBRW9CLE9BQU0sRUFBR0csS0FBSSxFQUFHLEdBQUdsQixVQUFVeUIsUUFBUXhCLE9BQU9DO0lBQ3BELE1BQU00QixPQUFPZixPQUFPSixNQUFNLEdBQUc7SUFDN0IsT0FBTztRQUNIVCxPQUFPLENBQUNBLFNBQVNnQixTQUFTLE1BQU0sVUFBVWhCLEtBQUs7UUFDL0MyQixRQUFRZCxPQUFPSyxHQUFHLENBQUMsQ0FBQ0MsR0FBR1UsSUFBSSxHQUtqQmIsT0FMb0JVLE9BQU87Z0JBQzdCSDtnQkFDQTVCO2dCQUNBOEI7Z0JBQ0ExQixPQUFPb0I7WUFDWCxJQUFHLEtBQThCSCxPQUEzQkEsU0FBUyxNQUFNRyxJQUFJVSxJQUFJLENBQUMsRUFBUSxPQUFMYixPQUFRYyxJQUFJLENBQUM7UUFDbEQsdUVBQXVFO1FBQ3ZFLG1FQUFtRTtRQUNuRSx5RUFBeUU7UUFDekUsMEVBQTBFO1FBQzFFLDJCQUEyQjtRQUMzQixzREFBc0Q7UUFDdERuQyxLQUFLK0IsT0FBTztZQUNSSDtZQUNBNUI7WUFDQThCO1lBQ0ExQixPQUFPYyxNQUFNLENBQUNlLEtBQUs7UUFDdkI7SUFDSjtBQUNKO0FBQ0EsU0FBU0csT0FBT0MsQ0FBQyxFQUFFO0lBQ2YsSUFBSSxPQUFPQSxNQUFNLFlBQVksT0FBT0EsTUFBTSxhQUFhO1FBQ25ELE9BQU9BO0lBQ1gsQ0FBQztJQUNELElBQUksT0FBT0EsTUFBTSxZQUFZLFdBQVdDLElBQUksQ0FBQ0QsSUFBSTtRQUM3QyxPQUFPeEIsU0FBU3dCLEdBQUc7SUFDdkIsQ0FBQztJQUNELE9BQU9FO0FBQ1g7QUFDQSwwRUFBMEU7QUFDMUUsaURBQWlEO0FBQ2pELFNBQVNDLGNBQWNDLEdBQUcsRUFBRXpDLEdBQUcsRUFBRTBDLFdBQVcsRUFBRUMsU0FBUyxFQUFFQyxvQkFBb0IsRUFBRUMsZUFBZSxFQUFFaEIsV0FBVyxFQUFFO0lBQ3pHLElBQUksQ0FBQ1ksT0FBT0EsR0FBRyxDQUFDLGtCQUFrQixLQUFLekMsS0FBSztRQUN4QztJQUNKLENBQUM7SUFDRHlDLEdBQUcsQ0FBQyxrQkFBa0IsR0FBR3pDO0lBQ3pCLE1BQU0wQixJQUFJLFlBQVllLE1BQU1BLElBQUlLLE1BQU0sS0FBS0MsUUFBUUMsT0FBTyxFQUFFO0lBQzVEdEIsRUFBRXVCLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBR0MsSUFBSSxDQUFDLElBQUk7UUFDckIsSUFBSSxDQUFDVCxJQUFJVSxVQUFVLEVBQUU7WUFDakIsd0NBQXdDO1lBQ3hDLHVCQUF1QjtZQUN2QixzQ0FBc0M7WUFDdEMsc0JBQXNCO1lBQ3RCLHVCQUF1QjtZQUN2QjtRQUNKLENBQUM7UUFDRCxJQUFJVCxnQkFBZ0IsUUFBUTtZQUN4QkcsZ0JBQWdCLElBQUk7UUFDeEIsQ0FBQztRQUNELElBQUlGLGFBQWEsSUFBSSxHQUFHLEtBQUssSUFBSUEsVUFBVVMsT0FBTyxFQUFFO1lBQ2hELCtDQUErQztZQUMvQywwQ0FBMEM7WUFDMUMsMkNBQTJDO1lBQzNDLE1BQU1DLFFBQVEsSUFBSUMsTUFBTTtZQUN4Qm5GLE9BQU9DLGNBQWMsQ0FBQ2lGLE9BQU8sVUFBVTtnQkFDbkNFLFVBQVUsS0FBSztnQkFDZmpGLE9BQU9tRTtZQUNYO1lBQ0EsSUFBSWUsWUFBWSxLQUFLO1lBQ3JCLElBQUlDLFVBQVUsS0FBSztZQUNuQmQsVUFBVVMsT0FBTyxDQUFDNUUsU0FBUyxDQUFDLEdBQUc2RSxPQUFPO2dCQUNsQ0ssYUFBYUw7Z0JBQ2JNLGVBQWVsQjtnQkFDZm1CLFFBQVFuQjtnQkFDUm9CLG9CQUFvQixJQUFJTDtnQkFDeEJNLHNCQUFzQixJQUFJTDtnQkFDMUJNLFNBQVMsSUFBSSxDQUFDO2dCQUNkQyxnQkFBZ0IsSUFBSTtvQkFDaEJSLFlBQVksSUFBSTtvQkFDaEJILE1BQU1XLGNBQWM7Z0JBQ3hCO2dCQUNBQyxpQkFBaUIsSUFBSTtvQkFDakJSLFVBQVUsSUFBSTtvQkFDZEosTUFBTVksZUFBZTtnQkFDekI7WUFDSjtRQUNKLENBQUM7UUFDRCxJQUFJckIsd0JBQXdCLElBQUksR0FBRyxLQUFLLElBQUlBLHFCQUFxQlEsT0FBTyxFQUFFO1lBQ3RFUixxQkFBcUJRLE9BQU8sQ0FBQ1g7UUFDakMsQ0FBQztRQUNELElBQUlwRCxJQUF5QixFQUFjO1lBQ3ZDLElBQUlvRCxJQUFJeUIsWUFBWSxDQUFDLGlCQUFpQixRQUFRO2dCQUMxQyxJQUFJLENBQUNyQyxlQUFnQixFQUFDWSxJQUFJeUIsWUFBWSxDQUFDLFlBQVl6QixJQUFJeUIsWUFBWSxDQUFDLGFBQWEsT0FBTSxHQUFJO29CQUN2RixJQUFJQyxxQkFBcUIxQixJQUFJMkIscUJBQXFCLEdBQUdoRSxLQUFLLEdBQUdpRSxPQUFPQyxVQUFVO29CQUM5RSxJQUFJSCxxQkFBcUIsS0FBSzt3QkFDekIsSUFBR2pGLFNBQVMsRUFBRXFGLFFBQVEsQ0FBQyxtQkFBdUIsT0FBSnZFLEtBQUk7b0JBQ25ELENBQUM7Z0JBQ0wsQ0FBQztnQkFDRCxJQUFJeUMsSUFBSStCLGFBQWEsRUFBRTtvQkFDbkIsTUFBTSxFQUFFQyxTQUFRLEVBQUcsR0FBR0osT0FBT0ssZ0JBQWdCLENBQUNqQyxJQUFJK0IsYUFBYTtvQkFDL0QsTUFBTUcsUUFBUTt3QkFDVjt3QkFDQTt3QkFDQTtxQkFDSDtvQkFDRCxJQUFJLENBQUNBLE1BQU1DLFFBQVEsQ0FBQ0gsV0FBVzt3QkFDMUIsSUFBR3ZGLFNBQVMsRUFBRXFGLFFBQVEsQ0FBQyxtQkFBNEZFLE9BQXpFekUsS0FBSSx1RUFBbUcyRSxPQUE5QkYsVUFBUyx1QkFBaUQsT0FBNUJFLE1BQU1wRCxHQUFHLENBQUNzRCxRQUFRMUMsSUFBSSxDQUFDLE1BQUs7b0JBQ2xMLENBQUM7Z0JBQ0wsQ0FBQztnQkFDRCxJQUFJTSxJQUFJcUMsTUFBTSxLQUFLLEdBQUc7b0JBQ2pCLElBQUc1RixTQUFTLEVBQUVxRixRQUFRLENBQUMsbUJBQXVCLE9BQUp2RSxLQUFJO2dCQUNuRCxDQUFDO1lBQ0wsQ0FBQztZQUNELE1BQU0rRSxpQkFBaUJ0QyxJQUFJcUMsTUFBTSxDQUFDRSxRQUFRLE9BQU92QyxJQUFJeUIsWUFBWSxDQUFDO1lBQ2xFLE1BQU1lLGdCQUFnQnhDLElBQUlyQyxLQUFLLENBQUM0RSxRQUFRLE9BQU92QyxJQUFJeUIsWUFBWSxDQUFDO1lBQ2hFLElBQUlhLGtCQUFrQixDQUFDRSxpQkFBaUIsQ0FBQ0Ysa0JBQWtCRSxlQUFlO2dCQUNyRSxJQUFHL0YsU0FBUyxFQUFFcUYsUUFBUSxDQUFDLG1CQUF1QixPQUFKdkUsS0FBSTtZQUNuRCxDQUFDO1FBQ0wsQ0FBQztJQUNMO0FBQ0o7QUFDQSxNQUFNa0YsZUFBNkIsV0FBSCxHQUFJLElBQUdyRyxNQUFNLEVBQUVzRyxVQUFVLElBQUMsQ0FBQ0MsUUFBUUMsZUFBZTs7SUFDOUUsSUFBSSxFQUFFQyxjQUFhLEVBQUdDLFVBQVMsRUFBR0MsU0FBUSxFQUFHQyxXQUFVLEVBQUdDLFVBQVMsRUFBR0MsU0FBUSxFQUFHQyxVQUFTLEVBQUdDLE9BQU0sRUFBR0MsS0FBSSxFQUFHcEQsWUFBVyxFQUFHcUQsUUFBTyxFQUFHQyxVQUFTLEVBQUdwRSxPQUFNLEVBQUdDLFlBQVcsRUFBR0UsT0FBTSxFQUFHWSxVQUFTLEVBQUdDLHFCQUFvQixFQUFHQyxnQkFBZSxFQUFHb0QsZUFBYyxFQUFHQyxPQUFNLEVBQUdDLFFBQU8sRUFBRyxHQUFHZixRQUFRZ0IsT0FBT3hILGlDQUFpQ3dHLFFBQVE7UUFDalU7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0g7SUFDRFcsVUFBVUYsU0FBUyxTQUFTRSxPQUFPO0lBQ25DLE9BQU8sV0FBVyxHQUFHbEgsT0FBT04sT0FBTyxDQUFDOEgsYUFBYSxDQUFDeEgsT0FBT04sT0FBTyxDQUFDK0gsUUFBUSxFQUFFLElBQUksRUFBRSxXQUFXLEdBQUd6SCxPQUFPTixPQUFPLENBQUM4SCxhQUFhLENBQUMsT0FBT2xJLE9BQU9vSSxNQUFNLENBQUMsQ0FBQyxHQUFHSCxNQUFNZCxlQUFlO1FBQ3RLbEYsT0FBT29GO1FBQ1BWLFFBQVFTO1FBQ1JpQixVQUFVO1FBQ1YsYUFBYVYsT0FBTyxTQUFTLEdBQUc7UUFDaENKLFdBQVdBO1FBQ1gsa0RBQWtEO1FBQ2xESyxTQUFTQTtRQUNUVSxPQUFPakksU0FBUyxDQUFDLEdBQUdtSCxVQUFVQztRQUM5QmMsS0FBSyxDQUFDLEdBQUc3SCxNQUFNLEVBQUU4SCxXQUFXLENBQUMsQ0FBQ2xFLE1BQU07WUFDaEMsSUFBSTRDLGNBQWM7Z0JBQ2QsSUFBSSxPQUFPQSxpQkFBaUIsWUFBWUEsYUFBYTVDO3FCQUNoRCxJQUFJLE9BQU80QyxpQkFBaUIsVUFBVTtvQkFDdkMsK0VBQStFO29CQUMvRUEsYUFBYWpDLE9BQU8sR0FBR1g7Z0JBQzNCLENBQUM7WUFDTCxDQUFDO1lBQ0QsSUFBSSxDQUFDQSxLQUFLO2dCQUNOO1lBQ0osQ0FBQztZQUNELElBQUkwRCxTQUFTO2dCQUNULDJFQUEyRTtnQkFDM0UsaUZBQWlGO2dCQUNqRixrRkFBa0Y7Z0JBQ2xGLDBDQUEwQztnQkFDMUMxRCxJQUFJekMsR0FBRyxHQUFHeUMsSUFBSXpDLEdBQUc7WUFDckIsQ0FBQztZQUNELElBQUlYLElBQXlCLEVBQWM7Z0JBQ3ZDLElBQUksQ0FBQzJHLFdBQVc7b0JBQ1pZLFFBQVFDLEtBQUssQ0FBRSw2Q0FBNENwRTtnQkFDL0QsQ0FBQztnQkFDRCxJQUFJQSxJQUFJeUIsWUFBWSxDQUFDLFdBQVcsSUFBSSxFQUFFO29CQUNsQzBDLFFBQVFDLEtBQUssQ0FBRTtnQkFDbkIsQ0FBQztZQUNMLENBQUM7WUFDRCxJQUFJcEUsSUFBSXFFLFFBQVEsRUFBRTtnQkFDZHRFLGNBQWNDLEtBQUt1RCxXQUFXdEQsYUFBYUMsV0FBV0Msc0JBQXNCQyxpQkFBaUJoQjtZQUNqRyxDQUFDO1FBQ0wsR0FBRztZQUNDbUU7WUFDQXREO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FzRDtZQUNBdEU7WUFDQXdEO1NBQ0g7UUFDRGEsUUFBUSxDQUFDN0MsUUFBUTtZQUNiLE1BQU1aLE1BQU1ZLE1BQU1NLGFBQWE7WUFDL0JuQixjQUFjQyxLQUFLdUQsV0FBV3RELGFBQWFDLFdBQVdDLHNCQUFzQkMsaUJBQWlCaEI7UUFDakc7UUFDQXNFLFNBQVMsQ0FBQzlDLFFBQVE7WUFDZCxxRUFBcUU7WUFDckU0QyxlQUFlLElBQUk7WUFDbkIsSUFBSXZELGdCQUFnQixRQUFRO2dCQUN4QiwyRUFBMkU7Z0JBQzNFRyxnQkFBZ0IsSUFBSTtZQUN4QixDQUFDO1lBQ0QsSUFBSXNELFNBQVM7Z0JBQ1RBLFFBQVE5QztZQUNaLENBQUM7UUFDTDtJQUNKO0FBQ0o7S0F6Rk02QjtBQTBGTixNQUFNNkIsUUFBc0IsZUFBSCxHQUFJLElBQUdsSSxNQUFNLEVBQUVzRyxVQUFVLFdBQUMsQ0FBQ0MsUUFBUUMsZUFBZTs7SUFDdkUsSUFBSSxFQUFFckYsSUFBRyxFQUFHSyxNQUFLLEVBQUd3QixhQUFhLEtBQUssR0FBR21GLFVBQVUsS0FBSyxHQUFHakIsUUFBTyxFQUFHTCxVQUFTLEVBQUc1RCxRQUFPLEVBQUcxQixNQUFLLEVBQUcwRSxPQUFNLEVBQUdnQixLQUFJLEVBQUdXLE1BQUssRUFBR1AsT0FBTSxFQUFHZSxrQkFBaUIsRUFBR3ZFLGFBQWEsUUFBTyxFQUFHd0UsWUFBVyxFQUFHQyxPQUFNLEVBQUdDLFVBQVMsRUFBR0MsZUFBYyxFQUFHQyxhQUFZLEVBQUdDLFNBQVEsRUFBRyxHQUFHbkMsUUFBUW9DLE1BQU01SSxpQ0FBaUN3RyxRQUFRO1FBQ25UO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDSDtJQUNELE1BQU1xQyxnQkFBZ0IsQ0FBQyxHQUFHNUksTUFBTSxFQUFFNkksVUFBVSxDQUFDekksb0JBQW9CMEksa0JBQWtCO0lBQ25GLE1BQU0vRixTQUFTLENBQUMsR0FBRy9DLE1BQU0sRUFBRStJLE9BQU8sQ0FBQyxJQUFJO1FBQ25DLE1BQU1DLElBQUl6SSxhQUFhcUksaUJBQWlCekksYUFBYThJLGtCQUFrQjtRQUN2RSxNQUFNdkgsV0FBVztlQUNWc0gsRUFBRXZILFdBQVc7ZUFDYnVILEVBQUVFLFVBQVU7U0FDbEIsQ0FBQ0MsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQUlELElBQUlDO1FBQ25CLE1BQU01SCxjQUFjdUgsRUFBRXZILFdBQVcsQ0FBQzBILElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFJRCxJQUFJQztRQUNuRCxPQUFPMUosU0FBUyxDQUFDLEdBQUdxSixHQUFHO1lBQ25CdEg7WUFDQUQ7UUFDSjtJQUNKLEdBQUc7UUFDQ21IO0tBQ0g7SUFDRCxJQUFJckIsT0FBT29CO0lBQ1gsSUFBSXpGLFNBQVNxRSxLQUFLckUsTUFBTSxJQUFJNUMsYUFBYVosT0FBTztJQUNoRCxzREFBc0Q7SUFDdEQsT0FBTzZILEtBQUtyRSxNQUFNO0lBQ2xCLDZDQUE2QztJQUM3QyxvREFBb0Q7SUFDcEQsTUFBTW9HLGtCQUFrQix3QkFBd0JwRztJQUNoRCxJQUFJb0csaUJBQWlCO1FBQ2pCLElBQUl2RyxPQUFPRyxNQUFNLEtBQUssVUFBVTtZQUM1QixNQUFNLElBQUlxRyxNQUFNLG1CQUF1QixPQUFKcEksS0FBSSxpQ0FBZ0MsMkVBQTBFO1FBQ3JKLENBQUM7SUFDTCxPQUFPO1FBQ0gsOENBQThDO1FBQzlDLCtDQUErQztRQUMvQyxpREFBaUQ7UUFDakQsTUFBTXFJLG9CQUFvQnRHO1FBQzFCLElBQUl1RztRQUNKQSxPQUFPLENBQUNDLE1BQU07WUFDVixNQUFNLEVBQUUzRyxRQUFRNEcsRUFBQyxFQUFHLEdBQUdELEtBQUtFLE9BQU83SixpQ0FBaUMySixLQUFLO2dCQUNyRTthQUNIO1lBQ0QsT0FBT0Ysa0JBQWtCSTtRQUM3QixHQUFHMUcsU0FBU3VHLE1BQU1BLElBQUk7SUFDMUIsQ0FBQztJQUNELElBQUluQixRQUFRO1FBQ1IsSUFBSUEsV0FBVyxRQUFRO1lBQ25CckIsT0FBTyxJQUFJO1FBQ2YsQ0FBQztRQUNELE1BQU00QyxnQkFBZ0I7WUFDbEJDLFdBQVc7Z0JBQ1BDLFVBQVU7Z0JBQ1Y5RCxRQUFRO1lBQ1o7WUFDQStELFlBQVk7Z0JBQ1J6SSxPQUFPO2dCQUNQMEUsUUFBUTtZQUNaO1FBQ0o7UUFDQSxNQUFNZ0UsZ0JBQWdCO1lBQ2xCRCxZQUFZO1lBQ1ovQyxNQUFNO1FBQ1Y7UUFDQSxNQUFNaUQsY0FBY0wsYUFBYSxDQUFDdkIsT0FBTztRQUN6QyxJQUFJNEIsYUFBYTtZQUNidEMsUUFBUWpJLFNBQVMsQ0FBQyxHQUFHaUksT0FBT3NDO1FBQ2hDLENBQUM7UUFDRCxNQUFNQyxjQUFjRixhQUFhLENBQUMzQixPQUFPO1FBQ3pDLElBQUk2QixlQUFlLENBQUMzSSxPQUFPO1lBQ3ZCQSxRQUFRMkk7UUFDWixDQUFDO0lBQ0wsQ0FBQztJQUNELElBQUlDLFlBQVk7SUFDaEIsSUFBSXpELFdBQVdwRCxPQUFPaEM7SUFDdEIsSUFBSW1GLFlBQVluRCxPQUFPMEM7SUFDdkIsSUFBSW9FO0lBQ0osSUFBSUM7SUFDSixJQUFJakosZUFBZUYsTUFBTTtRQUNyQixNQUFNb0osa0JBQWtCckosZ0JBQWdCQyxPQUFPQSxJQUFJekIsT0FBTyxHQUFHeUIsR0FBRztRQUNoRSxJQUFJLENBQUNvSixnQkFBZ0JwSixHQUFHLEVBQUU7WUFDdEIsTUFBTSxJQUFJb0ksTUFBTSw4SUFBOEssT0FBaENpQixLQUFLQyxTQUFTLENBQUNGLG1CQUFvQjtRQUNyTSxDQUFDO1FBQ0QsSUFBSSxDQUFDQSxnQkFBZ0J0RSxNQUFNLElBQUksQ0FBQ3NFLGdCQUFnQmhKLEtBQUssRUFBRTtZQUNuRCxNQUFNLElBQUlnSSxNQUFNLDJKQUEyTCxPQUFoQ2lCLEtBQUtDLFNBQVMsQ0FBQ0YsbUJBQW9CO1FBQ2xOLENBQUM7UUFDREYsWUFBWUUsZ0JBQWdCRixTQUFTO1FBQ3JDQyxhQUFhQyxnQkFBZ0JELFVBQVU7UUFDdkNqQyxjQUFjQSxlQUFla0MsZ0JBQWdCbEMsV0FBVztRQUN4RCtCLFlBQVlHLGdCQUFnQnBKLEdBQUc7UUFDL0IsSUFBSSxDQUFDOEYsTUFBTTtZQUNQLElBQUksQ0FBQ04sWUFBWSxDQUFDRCxXQUFXO2dCQUN6QkMsV0FBVzRELGdCQUFnQmhKLEtBQUs7Z0JBQ2hDbUYsWUFBWTZELGdCQUFnQnRFLE1BQU07WUFDdEMsT0FBTyxJQUFJVSxZQUFZLENBQUNELFdBQVc7Z0JBQy9CLE1BQU1nRSxRQUFRL0QsV0FBVzRELGdCQUFnQmhKLEtBQUs7Z0JBQzlDbUYsWUFBWXZFLEtBQUt3SSxLQUFLLENBQUNKLGdCQUFnQnRFLE1BQU0sR0FBR3lFO1lBQ3BELE9BQU8sSUFBSSxDQUFDL0QsWUFBWUQsV0FBVztnQkFDL0IsTUFBTWdFLFFBQVFoRSxZQUFZNkQsZ0JBQWdCdEUsTUFBTTtnQkFDaERVLFdBQVd4RSxLQUFLd0ksS0FBSyxDQUFDSixnQkFBZ0JoSixLQUFLLEdBQUdtSjtZQUNsRCxDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7SUFDRHZKLE1BQU0sT0FBT0EsUUFBUSxXQUFXQSxNQUFNaUosU0FBUztJQUMvQyxJQUFJcEQsU0FBUyxDQUFDbUIsWUFBYWpCLENBQUFBLFlBQVksVUFBVSxPQUFPQSxZQUFZLFdBQVU7SUFDOUUsSUFBSS9GLElBQUl5SixVQUFVLENBQUMsWUFBWXpKLElBQUl5SixVQUFVLENBQUMsVUFBVTtRQUNwRCw2RUFBNkU7UUFDN0U1SCxjQUFjLElBQUk7UUFDbEJnRSxTQUFTLEtBQUs7SUFDbEIsQ0FBQztJQUNELElBQUlqRSxPQUFPQyxXQUFXLEVBQUU7UUFDcEJBLGNBQWMsSUFBSTtJQUN0QixDQUFDO0lBQ0QsSUFBSXNHLG1CQUFtQm5JLElBQUkwSixRQUFRLENBQUMsV0FBVyxDQUFDOUgsT0FBTytILG1CQUFtQixFQUFFO1FBQ3hFLHlEQUF5RDtRQUN6RCwrQ0FBK0M7UUFDL0M5SCxjQUFjLElBQUk7SUFDdEIsQ0FBQztJQUNELE1BQU0sQ0FBQytILGNBQWMvRyxnQkFBZ0IsR0FBRyxDQUFDLEdBQUdoRSxNQUFNLEVBQUVnTCxRQUFRLENBQUMsS0FBSztJQUNsRSxNQUFNLENBQUNDLGFBQWE3RCxlQUFlLEdBQUcsQ0FBQyxHQUFHcEgsTUFBTSxFQUFFZ0wsUUFBUSxDQUFDLEtBQUs7SUFDaEUsTUFBTXBFLGFBQWFyRCxPQUFPTjtJQUMxQixJQUFJekMsSUFBeUIsRUFBYztRQUN2QyxJQUFJLENBQUNXLEtBQUs7WUFDTixpREFBaUQ7WUFDakQsK0NBQStDO1lBQy9DLDJDQUEyQztZQUMzQzZCLGNBQWMsSUFBSTtRQUN0QixPQUFPO1lBQ0gsSUFBSWlFLE1BQU07Z0JBQ04sSUFBSTFGLE9BQU87b0JBQ1AsTUFBTSxJQUFJZ0ksTUFBTSxtQkFBdUIsT0FBSnBJLEtBQUksdUVBQXFFO2dCQUNoSCxDQUFDO2dCQUNELElBQUk4RSxRQUFRO29CQUNSLE1BQU0sSUFBSXNELE1BQU0sbUJBQXVCLE9BQUpwSSxLQUFJLHdFQUFzRTtnQkFDakgsQ0FBQztnQkFDRCxJQUFJLENBQUN5RyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUlBLE1BQU1oQyxRQUFRLEtBQUtnQyxNQUFNaEMsUUFBUSxLQUFLLFlBQVk7b0JBQzVFLE1BQU0sSUFBSTJELE1BQU0sbUJBQXVCLE9BQUpwSSxLQUFJLGdJQUE4SDtnQkFDekssQ0FBQztnQkFDRCxJQUFJLENBQUN5RyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUlBLE1BQU1yRyxLQUFLLEtBQUtxRyxNQUFNckcsS0FBSyxLQUFLLFFBQVE7b0JBQ2xFLE1BQU0sSUFBSWdJLE1BQU0sbUJBQXVCLE9BQUpwSSxLQUFJLHNIQUFvSDtnQkFDL0osQ0FBQztnQkFDRCxJQUFJLENBQUN5RyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUlBLE1BQU0zQixNQUFNLEtBQUsyQixNQUFNM0IsTUFBTSxLQUFLLFFBQVE7b0JBQ3BFLE1BQU0sSUFBSXNELE1BQU0sbUJBQXVCLE9BQUpwSSxLQUFJLHdIQUFzSDtnQkFDakssQ0FBQztZQUNMLE9BQU87Z0JBQ0gsSUFBSSxPQUFPd0YsYUFBYSxhQUFhO29CQUNqQyxNQUFNLElBQUk0QyxNQUFNLG1CQUF1QixPQUFKcEksS0FBSSw0Q0FBMEM7Z0JBQ3JGLE9BQU8sSUFBSStKLE1BQU12RSxXQUFXO29CQUN4QixNQUFNLElBQUk0QyxNQUFNLG1CQUEwR2hJLE9BQXZGSixLQUFJLHFGQUF5RixPQUFOSSxPQUFNLE9BQUs7Z0JBQ3pJLENBQUM7Z0JBQ0QsSUFBSSxPQUFPbUYsY0FBYyxhQUFhO29CQUNsQyxNQUFNLElBQUk2QyxNQUFNLG1CQUF1QixPQUFKcEksS0FBSSw2Q0FBMkM7Z0JBQ3RGLE9BQU8sSUFBSStKLE1BQU14RSxZQUFZO29CQUN6QixNQUFNLElBQUk2QyxNQUFNLG1CQUEyR3RELE9BQXhGOUUsS0FBSSxzRkFBMkYsT0FBUDhFLFFBQU8sT0FBSztnQkFDM0ksQ0FBQztZQUNMLENBQUM7UUFDTCxDQUFDO1FBQ0QsSUFBSSxDQUFDakYscUJBQXFCK0UsUUFBUSxDQUFDbUIsVUFBVTtZQUN6QyxNQUFNLElBQUlxQyxNQUFNLG1CQUFxRXJDLE9BQWxEL0YsS0FBSSxnREFBMkVILE9BQTdCa0csU0FBUSx1QkFBZ0UsT0FBM0NsRyxxQkFBcUIwQixHQUFHLENBQUNzRCxRQUFRMUMsSUFBSSxDQUFDLE1BQUssTUFBSTtRQUNySyxDQUFDO1FBQ0QsSUFBSTZFLFlBQVlqQixZQUFZLFFBQVE7WUFDaEMsTUFBTSxJQUFJcUMsTUFBTSxtQkFBdUIsT0FBSnBJLEtBQUksc0ZBQWtGO1FBQzdILENBQUM7UUFDRCxJQUFJMEMsZ0JBQWdCLFFBQVE7WUFDeEIsSUFBSThDLFlBQVlELGFBQWFDLFdBQVdELFlBQVksTUFBTTtnQkFDckQsSUFBR3JHLFNBQVMsRUFBRXFGLFFBQVEsQ0FBQyxtQkFBdUIsT0FBSnZFLEtBQUk7WUFDbkQsQ0FBQztZQUNELElBQUksQ0FBQ2tILGFBQWE7Z0JBQ2QsTUFBTThDLGlCQUFpQjtvQkFDbkI7b0JBQ0E7b0JBQ0E7b0JBQ0E7aUJBQ0gsQ0FBQyxpQ0FBaUM7O2dCQUVuQyxNQUFNLElBQUk1QixNQUFNLG1CQUdtRTRCLE9BSGhEaEssS0FBSSxrVUFHcUUsT0FBekJnSyxlQUFlN0gsSUFBSSxDQUFDLE1BQUssbUtBRTFDO1lBQ3RFLENBQUM7UUFDTCxDQUFDO1FBQ0QsSUFBSSxTQUFTaUUsTUFBTTtZQUNkLElBQUdsSCxTQUFTLEVBQUVxRixRQUFRLENBQUMsbUJBQXVCLE9BQUp2RSxLQUFJO1FBQ25ELENBQUM7UUFDRCxJQUFJLENBQUM2QixlQUFlRSxXQUFXNUMsYUFBYVosT0FBTyxFQUFFO1lBQ2pELE1BQU0wTCxTQUFTbEksT0FBTztnQkFDbEJIO2dCQUNBNUI7Z0JBQ0FJLE9BQU9vRixZQUFZO2dCQUNuQjFELFNBQVMyRCxjQUFjO1lBQzNCO1lBQ0EsSUFBSXlFO1lBQ0osSUFBSTtnQkFDQUEsTUFBTSxJQUFJQyxJQUFJRjtZQUNsQixFQUFFLE9BQU9HLEtBQUssQ0FBQztZQUNmLElBQUlILFdBQVdqSyxPQUFPa0ssT0FBT0EsSUFBSUcsUUFBUSxLQUFLckssT0FBTyxDQUFDa0ssSUFBSUksTUFBTSxFQUFFO2dCQUM3RCxJQUFHcEwsU0FBUyxFQUFFcUYsUUFBUSxDQUFDLG1CQUF1QixPQUFKdkUsS0FBSSw2SEFBNEg7WUFDL0ssQ0FBQztRQUNMLENBQUM7UUFDRCxLQUFLLE1BQU0sQ0FBQ3VLLFdBQVdDLFlBQVksSUFBSXJNLE9BQU9zTSxPQUFPLENBQUM7WUFDbER0RDtZQUNBQztZQUNBQztZQUNBQztZQUNBQztRQUNKLEdBQUc7WUFDQyxJQUFJaUQsYUFBYTtnQkFDWixJQUFHdEwsU0FBUyxFQUFFcUYsUUFBUSxDQUFDLG1CQUE0Q2dHLE9BQXpCdkssS0FBSSx1QkFBK0IsT0FBVnVLLFdBQVUsMkNBQTBDO1lBQzVILENBQUM7UUFDTDtRQUNBLElBQUksS0FBa0IsSUFBZSxDQUFDN0ssZ0JBQWdCMkUsT0FBT3FHLG1CQUFtQixFQUFFO1lBQzlFaEwsZUFBZSxJQUFJZ0wsb0JBQW9CLENBQUNDLFlBQVk7Z0JBQ2hELEtBQUssTUFBTUMsU0FBU0QsVUFBVUUsVUFBVSxHQUFHO29CQUN2QyxJQUFJbkU7b0JBQ0osMEVBQTBFO29CQUMxRSxNQUFNb0UsU0FBUyxDQUFDRixTQUFTLElBQUksR0FBRyxLQUFLLElBQUksQ0FBQ2xFLE1BQU1rRSxNQUFNRyxPQUFPLEtBQUssSUFBSSxHQUFHLEtBQUssSUFBSXJFLElBQUkxRyxHQUFHLEtBQUs7b0JBQzlGLE1BQU1nTCxXQUFXeEwsUUFBUXlMLEdBQUcsQ0FBQ0g7b0JBQzdCLElBQUlFLFlBQVksQ0FBQ0EsU0FBU2hFLFFBQVEsSUFBSWdFLFNBQVN0SSxXQUFXLEtBQUssVUFBVSxDQUFDc0ksU0FBU2hMLEdBQUcsQ0FBQ3lKLFVBQVUsQ0FBQyxZQUFZLENBQUN1QixTQUFTaEwsR0FBRyxDQUFDeUosVUFBVSxDQUFDLFVBQVU7d0JBQzdJLGlEQUFpRDt3QkFDaEQsSUFBR3ZLLFNBQVMsRUFBRXFGLFFBQVEsQ0FBQyxtQkFBZ0MsT0FBYnlHLFNBQVNoTCxHQUFHLEVBQUMsK0hBQThIO29CQUMxTCxDQUFDO2dCQUNMO1lBQ0o7WUFDQSxJQUFJO2dCQUNBTixhQUFhd0wsT0FBTyxDQUFDO29CQUNqQkMsTUFBTTtvQkFDTkMsVUFBVSxJQUFJO2dCQUNsQjtZQUNKLEVBQUUsT0FBT2hCLEtBQUs7Z0JBQ1Ysb0NBQW9DO2dCQUNwQ3hELFFBQVFDLEtBQUssQ0FBQ3VEO1lBQ2xCO1FBQ0osQ0FBQztJQUNMLENBQUM7SUFDRCxNQUFNekUsV0FBV3hILE9BQU9vSSxNQUFNLENBQUNULE9BQU87UUFDbENyQixVQUFVO1FBQ1ZLLFFBQVE7UUFDUjFFLE9BQU87UUFDUGlMLE1BQU07UUFDTkMsS0FBSztRQUNMQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUnBFO1FBQ0FDO0lBQ0osSUFBSSxDQUFDLENBQUMsRUFBRXlDLGNBQWMsQ0FBQyxJQUFJO1FBQ3ZCMkIsT0FBTztJQUNYLENBQUMsRUFBRWhGO0lBQ0gsTUFBTWIsWUFBWWxELGdCQUFnQixVQUFVd0UsZUFBZSxDQUFDMEMsZUFBZTtRQUN2RThCLGdCQUFnQi9GLFNBQVN5QixTQUFTLElBQUk7UUFDdEN1RSxvQkFBb0JoRyxTQUFTMEIsY0FBYyxJQUFJO1FBQy9DdUUsa0JBQWtCO1FBQ2xCQyxpQkFBaUIseUNBTWQsT0FOdUQsQ0FBQyxHQUFHOU0sYUFBYSxFQUFFK00sZUFBZSxDQUFDO1lBQ3pGdEc7WUFDQUQ7WUFDQTJEO1lBQ0FDO1lBQ0FqQztRQUNKLElBQUc7SUFDUCxJQUFJLENBQUMsQ0FBQztJQUNOLElBQUk3SCxJQUF5QixFQUFlO1FBQ3hDLElBQUl1RyxVQUFVaUcsZUFBZSxJQUFLM0UsQ0FBQUEsZUFBZSxJQUFJLEdBQUcsS0FBSyxJQUFJQSxZQUFZdUMsVUFBVSxDQUFDLElBQUksR0FBRztZQUMzRiw4RUFBOEU7WUFDOUUsZ0ZBQWdGO1lBQ2hGLHFGQUFxRjtZQUNyRjdELFVBQVVpRyxlQUFlLEdBQUcsUUFBb0IsT0FBWjNFLGFBQVk7UUFDcEQsQ0FBQztJQUNMLENBQUM7SUFDRCxNQUFNNUIsZ0JBQWdCM0QsaUJBQWlCO1FBQ25DQztRQUNBNUI7UUFDQTZCO1FBQ0F6QixPQUFPb0Y7UUFDUDFELFNBQVMyRDtRQUNUcEY7UUFDQTBCO0lBQ0o7SUFDQSxJQUFJaUUsWUFBWWhHO0lBQ2hCLElBQUlYLElBQXlCLEVBQWM7UUFDdkMsSUFBSSxJQUFrQixFQUFhO1lBQy9CLElBQUkwTTtZQUNKLElBQUk7Z0JBQ0FBLFVBQVUsSUFBSTVCLElBQUk3RSxjQUFjdEYsR0FBRztZQUN2QyxFQUFFLE9BQU9nTSxHQUFHO2dCQUNSRCxVQUFVLElBQUk1QixJQUFJN0UsY0FBY3RGLEdBQUcsRUFBRXFFLE9BQU80SCxRQUFRLENBQUNDLElBQUk7WUFDN0Q7WUFDQTFNLFFBQVEyTSxHQUFHLENBQUNKLFFBQVFHLElBQUksRUFBRTtnQkFDdEJsTTtnQkFDQWdIO2dCQUNBdEU7WUFDSjtRQUNKLENBQUM7SUFDTCxDQUFDO0lBQ0QsTUFBTTBKLFlBQVk7UUFDZCxtREFBbUQ7UUFDbkRDLGFBQWEvRyxjQUFjdEQsTUFBTTtRQUNqQytGLFlBQVl6QyxjQUFjakYsS0FBSztRQUMvQmlNLGFBQWFsRyxLQUFLa0csV0FBVztJQUNqQztJQUNBLE1BQU0zSixZQUFZLENBQUMsR0FBRzlELE1BQU0sRUFBRTBOLE1BQU0sQ0FBQ3JHO0lBQ3BDLElBQUdySCxNQUFNLEVBQUUyTixTQUFTLENBQUMsSUFBSTtRQUN0QjdKLFVBQVVTLE9BQU8sR0FBRzhDO0lBQ3hCLEdBQUc7UUFDQ0E7S0FDSDtJQUNELE1BQU10RCx1QkFBdUIsQ0FBQyxHQUFHL0QsTUFBTSxFQUFFME4sTUFBTSxDQUFDdEY7SUFDL0MsSUFBR3BJLE1BQU0sRUFBRTJOLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCNUoscUJBQXFCUSxPQUFPLEdBQUc2RDtJQUNuQyxHQUFHO1FBQ0NBO0tBQ0g7SUFDRCxNQUFNd0YsaUJBQWlCak8sU0FBUztRQUM1QnFIO1FBQ0FQO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FHO1FBQ0FuRTtRQUNBa0U7UUFDQWpFO1FBQ0FhO1FBQ0FYO1FBQ0FpRTtRQUNBckQ7UUFDQUM7UUFDQUM7UUFDQW9EO0lBQ0osR0FBR0c7SUFDSCxPQUFPLFdBQVcsR0FBR3ZILE9BQU9OLE9BQU8sQ0FBQzhILGFBQWEsQ0FBQ3hILE9BQU9OLE9BQU8sQ0FBQytILFFBQVEsRUFBRSxJQUFJLEVBQUUsV0FBVyxHQUFHekgsT0FBT04sT0FBTyxDQUFDOEgsYUFBYSxDQUFDbkIsY0FBYy9HLE9BQU9vSSxNQUFNLENBQUMsQ0FBQyxHQUFHa0csZ0JBQWdCO1FBQ3hLL0YsS0FBS3JCO0lBQ1QsS0FBSzJCLFdBQ0wscUVBQXFFO0lBQ3JFLDZEQUE2RDtJQUM3RCxFQUFFO0lBQ0YsOEVBQThFO0lBQzlFLFdBQVcsR0FBR25JLE9BQU9OLE9BQU8sQ0FBQzhILGFBQWEsQ0FBQ3ZILE1BQU1QLE9BQU8sRUFBRSxJQUFJLEVBQUUsV0FBVyxHQUFHTSxPQUFPTixPQUFPLENBQUM4SCxhQUFhLENBQUMsUUFBUWxJLE9BQU9vSSxNQUFNLENBQUM7UUFDN0htRyxLQUFLLFlBQVlwSCxjQUFjdEYsR0FBRyxHQUFHc0YsY0FBY3RELE1BQU0sR0FBR3NELGNBQWNqRixLQUFLO1FBQy9Fc00sS0FBSztRQUNMQyxJQUFJO1FBQ0pWLE1BQU01RyxjQUFjdEQsTUFBTSxHQUFHbEMsWUFBWXdGLGNBQWN0RixHQUFHO0lBQzlELEdBQUdvTSxlQUFlLElBQUk7QUFDMUI7O0FBQ0EsSUFBSVMsV0FBVzlGO0FBQ2YxSSxrQkFBZSxHQUFHd087QUFFbEIsSUFBSSxDQUFDLE9BQU94TyxRQUFRRSxPQUFPLEtBQUssY0FBZSxPQUFPRixRQUFRRSxPQUFPLEtBQUssWUFBWUYsUUFBUUUsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPRixRQUFRRSxPQUFPLENBQUN1TyxVQUFVLEtBQUssYUFBYTtJQUNySzNPLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUUUsT0FBTyxFQUFFLGNBQWM7UUFBRUQsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9vSSxNQUFNLENBQUNsSSxRQUFRRSxPQUFPLEVBQUVGO0lBQy9CME8sT0FBTzFPLE9BQU8sR0FBR0EsUUFBUUUsT0FBTztBQUNsQyxDQUFDLENBRUQsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2ltYWdlLmpzPzgyZjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfZXh0ZW5kcyA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19leHRlbmRzLmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0ID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanNcIikuZGVmYXVsdDtcbnZhciBfb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZSA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlLmpzXCIpLmRlZmF1bHQ7XG52YXIgX3JlYWN0ID0gX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIF9oZWFkID0gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2hlYWRcIikpO1xudmFyIF9pbWFnZUJsdXJTdmcgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Z1wiKTtcbnZhciBfaW1hZ2VDb25maWcgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pbWFnZS1jb25maWdcIik7XG52YXIgX2ltYWdlQ29uZmlnQ29udGV4dCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZy1jb250ZXh0XCIpO1xudmFyIF93YXJuT25jZSA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3V0aWxzL3dhcm4tb25jZVwiKTtcbnZhciBfaW1hZ2VMb2FkZXIgPSBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQocmVxdWlyZShcIm5leHQvZGlzdC9zaGFyZWQvbGliL2ltYWdlLWxvYWRlclwiKSk7XG5cbmNvbnN0IGNvbmZpZ0VudiA9IHByb2Nlc3MuZW52Ll9fTkVYVF9JTUFHRV9PUFRTO1xuY29uc3QgYWxsSW1ncyA9IG5ldyBNYXAoKTtcbmxldCBwZXJmT2JzZXJ2ZXI7XG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnbG9iYWxUaGlzLl9fTkVYVF9JTUFHRV9JTVBPUlRFRCA9IHRydWU7XG59XG5jb25zdCBWQUxJRF9MT0FESU5HX1ZBTFVFUyA9IFtcbiAgICAnbGF6eScsXG4gICAgJ2VhZ2VyJyxcbiAgICB1bmRlZmluZWRcbl07XG5mdW5jdGlvbiBpc1N0YXRpY1JlcXVpcmUoc3JjKSB7XG4gICAgcmV0dXJuIHNyYy5kZWZhdWx0ICE9PSB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBpc1N0YXRpY0ltYWdlRGF0YShzcmMpIHtcbiAgICByZXR1cm4gc3JjLnNyYyAhPT0gdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gaXNTdGF0aWNJbXBvcnQoc3JjKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzcmMgPT09ICdvYmplY3QnICYmIChpc1N0YXRpY1JlcXVpcmUoc3JjKSB8fCBpc1N0YXRpY0ltYWdlRGF0YShzcmMpKTtcbn1cbmZ1bmN0aW9uIGdldFdpZHRocyh7IGRldmljZVNpemVzICwgYWxsU2l6ZXMgIH0sIHdpZHRoLCBzaXplcykge1xuICAgIGlmIChzaXplcykge1xuICAgICAgICAvLyBGaW5kIGFsbCB0aGUgXCJ2d1wiIHBlcmNlbnQgc2l6ZXMgdXNlZCBpbiB0aGUgc2l6ZXMgcHJvcFxuICAgICAgICBjb25zdCB2aWV3cG9ydFdpZHRoUmUgPSAvKF58XFxzKSgxP1xcZD9cXGQpdncvZztcbiAgICAgICAgY29uc3QgcGVyY2VudFNpemVzID0gW107XG4gICAgICAgIGZvcihsZXQgbWF0Y2g7IG1hdGNoID0gdmlld3BvcnRXaWR0aFJlLmV4ZWMoc2l6ZXMpOyBtYXRjaCl7XG4gICAgICAgICAgICBwZXJjZW50U2l6ZXMucHVzaChwYXJzZUludChtYXRjaFsyXSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwZXJjZW50U2l6ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBzbWFsbGVzdFJhdGlvID0gTWF0aC5taW4oLi4ucGVyY2VudFNpemVzKSAqIDAuMDE7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHdpZHRoczogYWxsU2l6ZXMuZmlsdGVyKChzKT0+cyA+PSBkZXZpY2VTaXplc1swXSAqIHNtYWxsZXN0UmF0aW8pLFxuICAgICAgICAgICAgICAgIGtpbmQ6ICd3J1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGhzOiBhbGxTaXplcyxcbiAgICAgICAgICAgIGtpbmQ6ICd3J1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpZHRoICE9PSAnbnVtYmVyJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGhzOiBkZXZpY2VTaXplcyxcbiAgICAgICAgICAgIGtpbmQ6ICd3J1xuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB3aWR0aHMgPSBbXG4gICAgICAgIC4uLm5ldyBTZXQoLy8gPiBUaGlzIG1lYW5zIHRoYXQgbW9zdCBPTEVEIHNjcmVlbnMgdGhhdCBzYXkgdGhleSBhcmUgM3ggcmVzb2x1dGlvbixcbiAgICAgICAgLy8gPiBhcmUgYWN0dWFsbHkgM3ggaW4gdGhlIGdyZWVuIGNvbG9yLCBidXQgb25seSAxLjV4IGluIHRoZSByZWQgYW5kXG4gICAgICAgIC8vID4gYmx1ZSBjb2xvcnMuIFNob3dpbmcgYSAzeCByZXNvbHV0aW9uIGltYWdlIGluIHRoZSBhcHAgdnMgYSAyeFxuICAgICAgICAvLyA+IHJlc29sdXRpb24gaW1hZ2Ugd2lsbCBiZSB2aXN1YWxseSB0aGUgc2FtZSwgdGhvdWdoIHRoZSAzeCBpbWFnZVxuICAgICAgICAvLyA+IHRha2VzIHNpZ25pZmljYW50bHkgbW9yZSBkYXRhLiBFdmVuIHRydWUgM3ggcmVzb2x1dGlvbiBzY3JlZW5zIGFyZVxuICAgICAgICAvLyA+IHdhc3RlZnVsIGFzIHRoZSBodW1hbiBleWUgY2Fubm90IHNlZSB0aGF0IGxldmVsIG9mIGRldGFpbCB3aXRob3V0XG4gICAgICAgIC8vID4gc29tZXRoaW5nIGxpa2UgYSBtYWduaWZ5aW5nIGdsYXNzLlxuICAgICAgICAvLyBodHRwczovL2Jsb2cudHdpdHRlci5jb20vZW5naW5lZXJpbmcvZW5fdXMvdG9waWNzL2luZnJhc3RydWN0dXJlLzIwMTkvY2FwcGluZy1pbWFnZS1maWRlbGl0eS1vbi11bHRyYS1oaWdoLXJlc29sdXRpb24tZGV2aWNlcy5odG1sXG4gICAgICAgIFtcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgd2lkdGggKiAyIC8qLCB3aWR0aCAqIDMqLyBcbiAgICAgICAgXS5tYXAoKHcpPT5hbGxTaXplcy5maW5kKChwKT0+cCA+PSB3KSB8fCBhbGxTaXplc1thbGxTaXplcy5sZW5ndGggLSAxXSkpLCBcbiAgICBdO1xuICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRocyxcbiAgICAgICAga2luZDogJ3gnXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlSW1nQXR0cnMoeyBjb25maWcgLCBzcmMgLCB1bm9wdGltaXplZCAsIHdpZHRoICwgcXVhbGl0eSAsIHNpemVzICwgbG9hZGVyICB9KSB7XG4gICAgaWYgKHVub3B0aW1pemVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzcmMsXG4gICAgICAgICAgICBzcmNTZXQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNpemVzOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgeyB3aWR0aHMgLCBraW5kICB9ID0gZ2V0V2lkdGhzKGNvbmZpZywgd2lkdGgsIHNpemVzKTtcbiAgICBjb25zdCBsYXN0ID0gd2lkdGhzLmxlbmd0aCAtIDE7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2l6ZXM6ICFzaXplcyAmJiBraW5kID09PSAndycgPyAnMTAwdncnIDogc2l6ZXMsXG4gICAgICAgIHNyY1NldDogd2lkdGhzLm1hcCgodywgaSk9PmAke2xvYWRlcih7XG4gICAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICBxdWFsaXR5LFxuICAgICAgICAgICAgICAgIHdpZHRoOiB3XG4gICAgICAgICAgICB9KX0gJHtraW5kID09PSAndycgPyB3IDogaSArIDF9JHtraW5kfWApLmpvaW4oJywgJyksXG4gICAgICAgIC8vIEl0J3MgaW50ZW5kZWQgdG8ga2VlcCBgc3JjYCB0aGUgbGFzdCBhdHRyaWJ1dGUgYmVjYXVzZSBSZWFjdCB1cGRhdGVzXG4gICAgICAgIC8vIGF0dHJpYnV0ZXMgaW4gb3JkZXIuIElmIHdlIGtlZXAgYHNyY2AgdGhlIGZpcnN0IG9uZSwgU2FmYXJpIHdpbGxcbiAgICAgICAgLy8gaW1tZWRpYXRlbHkgc3RhcnQgdG8gZmV0Y2ggYHNyY2AsIGJlZm9yZSBgc2l6ZXNgIGFuZCBgc3JjU2V0YCBhcmUgZXZlblxuICAgICAgICAvLyB1cGRhdGVkIGJ5IFJlYWN0LiBUaGF0IGNhdXNlcyBtdWx0aXBsZSB1bm5lY2Vzc2FyeSByZXF1ZXN0cyBpZiBgc3JjU2V0YFxuICAgICAgICAvLyBhbmQgYHNpemVzYCBhcmUgZGVmaW5lZC5cbiAgICAgICAgLy8gVGhpcyBidWcgY2Fubm90IGJlIHJlcHJvZHVjZWQgaW4gQ2hyb21lIG9yIEZpcmVmb3guXG4gICAgICAgIHNyYzogbG9hZGVyKHtcbiAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgIHF1YWxpdHksXG4gICAgICAgICAgICB3aWR0aDogd2lkdGhzW2xhc3RdXG4gICAgICAgIH0pXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGdldEludCh4KSB7XG4gICAgaWYgKHR5cGVvZiB4ID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgeCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeCA9PT0gJ3N0cmluZycgJiYgL15bMC05XSskLy50ZXN0KHgpKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUludCh4LCAxMCk7XG4gICAgfVxuICAgIHJldHVybiBOYU47XG59XG4vLyBTZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xLzM5Nzc3ODMzLzI2NjUzNSBmb3Igd2h5IHdlIHVzZSB0aGlzIHJlZlxuLy8gaGFuZGxlciBpbnN0ZWFkIG9mIHRoZSBpbWcncyBvbkxvYWQgYXR0cmlidXRlLlxuZnVuY3Rpb24gaGFuZGxlTG9hZGluZyhpbWcsIHNyYywgcGxhY2Vob2xkZXIsIG9uTG9hZFJlZiwgb25Mb2FkaW5nQ29tcGxldGVSZWYsIHNldEJsdXJDb21wbGV0ZSwgdW5vcHRpbWl6ZWQpIHtcbiAgICBpZiAoIWltZyB8fCBpbWdbJ2RhdGEtbG9hZGVkLXNyYyddID09PSBzcmMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbWdbJ2RhdGEtbG9hZGVkLXNyYyddID0gc3JjO1xuICAgIGNvbnN0IHAgPSAnZGVjb2RlJyBpbiBpbWcgPyBpbWcuZGVjb2RlKCkgOiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICBwLmNhdGNoKCgpPT57fSkudGhlbigoKT0+e1xuICAgICAgICBpZiAoIWltZy5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAvLyBFeGl0IGVhcmx5IGluIGNhc2Ugb2YgcmFjZSBjb25kaXRpb246XG4gICAgICAgICAgICAvLyAtIG9ubG9hZCgpIGlzIGNhbGxlZFxuICAgICAgICAgICAgLy8gLSBkZWNvZGUoKSBpcyBjYWxsZWQgYnV0IGluY29tcGxldGVcbiAgICAgICAgICAgIC8vIC0gdW5tb3VudCBpcyBjYWxsZWRcbiAgICAgICAgICAgIC8vIC0gZGVjb2RlKCkgY29tcGxldGVzXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBsYWNlaG9sZGVyID09PSAnYmx1cicpIHtcbiAgICAgICAgICAgIHNldEJsdXJDb21wbGV0ZSh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob25Mb2FkUmVmID09IG51bGwgPyB2b2lkIDAgOiBvbkxvYWRSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgLy8gU2luY2Ugd2UgZG9uJ3QgaGF2ZSB0aGUgU3ludGhldGljRXZlbnQgaGVyZSxcbiAgICAgICAgICAgIC8vIHdlIG11c3QgY3JlYXRlIG9uZSB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICAgICAgICAgICAgLy8gU2VlIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9ldmVudHMuaHRtbFxuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgRXZlbnQoJ2xvYWQnKTtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldmVudCwgJ3RhcmdldCcsIHtcbiAgICAgICAgICAgICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGltZ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgcHJldmVudGVkID0gZmFsc2U7XG4gICAgICAgICAgICBsZXQgc3RvcHBlZCA9IGZhbHNlO1xuICAgICAgICAgICAgb25Mb2FkUmVmLmN1cnJlbnQoX2V4dGVuZHMoe30sIGV2ZW50LCB7XG4gICAgICAgICAgICAgICAgbmF0aXZlRXZlbnQ6IGV2ZW50LFxuICAgICAgICAgICAgICAgIGN1cnJlbnRUYXJnZXQ6IGltZyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IGltZyxcbiAgICAgICAgICAgICAgICBpc0RlZmF1bHRQcmV2ZW50ZWQ6ICgpPT5wcmV2ZW50ZWQsXG4gICAgICAgICAgICAgICAgaXNQcm9wYWdhdGlvblN0b3BwZWQ6ICgpPT5zdG9wcGVkLFxuICAgICAgICAgICAgICAgIHBlcnNpc3Q6ICgpPT57fSxcbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdDogKCk9PntcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHN0b3BQcm9wYWdhdGlvbjogKCk9PntcbiAgICAgICAgICAgICAgICAgICAgc3RvcHBlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob25Mb2FkaW5nQ29tcGxldGVSZWYgPT0gbnVsbCA/IHZvaWQgMCA6IG9uTG9hZGluZ0NvbXBsZXRlUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIG9uTG9hZGluZ0NvbXBsZXRlUmVmLmN1cnJlbnQoaW1nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgaWYgKGltZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmltZycpID09PSAnZmlsbCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXVub3B0aW1pemVkICYmICghaW1nLmdldEF0dHJpYnV0ZSgnc2l6ZXMnKSB8fCBpbWcuZ2V0QXR0cmlidXRlKCdzaXplcycpID09PSAnMTAwdncnKSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2lkdGhWaWV3cG9ydFJhdGlvID0gaW1nLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIGlmICh3aWR0aFZpZXdwb3J0UmF0aW8gPCAwLjYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfd2Fybk9uY2UpLndhcm5PbmNlKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBcImZpbGxcIiBidXQgaXMgbWlzc2luZyBcInNpemVzXCIgcHJvcC4gUGxlYXNlIGFkZCBpdCB0byBpbXByb3ZlIHBhZ2UgcGVyZm9ybWFuY2UuIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9uZXh0L2ltYWdlI3NpemVzYCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGltZy5wYXJlbnRFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcG9zaXRpb24gIH0gPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShpbWcucGFyZW50RWxlbWVudCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdmaXhlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAncmVsYXRpdmUnXG4gICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgIGlmICghdmFsaWQuaW5jbHVkZXMocG9zaXRpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAoMCwgX3dhcm5PbmNlKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgXCJmaWxsXCIgYW5kIHBhcmVudCBlbGVtZW50IHdpdGggaW52YWxpZCBcInBvc2l0aW9uXCIuIFByb3ZpZGVkIFwiJHtwb3NpdGlvbn1cIiBzaG91bGQgYmUgb25lIG9mICR7dmFsaWQubWFwKFN0cmluZykuam9pbignLCcpfS5gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW1nLmhlaWdodCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAoMCwgX3dhcm5PbmNlKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgXCJmaWxsXCIgYW5kIGEgaGVpZ2h0IHZhbHVlIG9mIDAuIFRoaXMgaXMgbGlrZWx5IGJlY2F1c2UgdGhlIHBhcmVudCBlbGVtZW50IG9mIHRoZSBpbWFnZSBoYXMgbm90IGJlZW4gc3R5bGVkIHRvIGhhdmUgYSBzZXQgaGVpZ2h0LmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGhlaWdodE1vZGlmaWVkID0gaW1nLmhlaWdodC50b1N0cmluZygpICE9PSBpbWcuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKTtcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoTW9kaWZpZWQgPSBpbWcud2lkdGgudG9TdHJpbmcoKSAhPT0gaW1nLmdldEF0dHJpYnV0ZSgnd2lkdGgnKTtcbiAgICAgICAgICAgIGlmIChoZWlnaHRNb2RpZmllZCAmJiAhd2lkdGhNb2RpZmllZCB8fCAhaGVpZ2h0TW9kaWZpZWQgJiYgd2lkdGhNb2RpZmllZCkge1xuICAgICAgICAgICAgICAgICgwLCBfd2Fybk9uY2UpLndhcm5PbmNlKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBlaXRoZXIgd2lkdGggb3IgaGVpZ2h0IG1vZGlmaWVkLCBidXQgbm90IHRoZSBvdGhlci4gSWYgeW91IHVzZSBDU1MgdG8gY2hhbmdlIHRoZSBzaXplIG9mIHlvdXIgaW1hZ2UsIGFsc28gaW5jbHVkZSB0aGUgc3R5bGVzICd3aWR0aDogXCJhdXRvXCInIG9yICdoZWlnaHQ6IFwiYXV0b1wiJyB0byBtYWludGFpbiB0aGUgYXNwZWN0IHJhdGlvLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG5jb25zdCBJbWFnZUVsZW1lbnQgPSAvKiNfX1BVUkVfXyovICgwLCBfcmVhY3QpLmZvcndhcmRSZWYoKF9wYXJhbSwgZm9yd2FyZGVkUmVmKT0+e1xuICAgIHZhciB7IGltZ0F0dHJpYnV0ZXMgLCBoZWlnaHRJbnQgLCB3aWR0aEludCAsIHF1YWxpdHlJbnQgLCBjbGFzc05hbWUgLCBpbWdTdHlsZSAsIGJsdXJTdHlsZSAsIGlzTGF6eSAsIGZpbGwgLCBwbGFjZWhvbGRlciAsIGxvYWRpbmcgLCBzcmNTdHJpbmcgLCBjb25maWcgLCB1bm9wdGltaXplZCAsIGxvYWRlciAsIG9uTG9hZFJlZiAsIG9uTG9hZGluZ0NvbXBsZXRlUmVmICwgc2V0Qmx1ckNvbXBsZXRlICwgc2V0U2hvd0FsdFRleHQgLCBvbkxvYWQgLCBvbkVycm9yICB9ID0gX3BhcmFtLCByZXN0ID0gX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UoX3BhcmFtLCBbXG4gICAgICAgIFwiaW1nQXR0cmlidXRlc1wiLFxuICAgICAgICBcImhlaWdodEludFwiLFxuICAgICAgICBcIndpZHRoSW50XCIsXG4gICAgICAgIFwicXVhbGl0eUludFwiLFxuICAgICAgICBcImNsYXNzTmFtZVwiLFxuICAgICAgICBcImltZ1N0eWxlXCIsXG4gICAgICAgIFwiYmx1clN0eWxlXCIsXG4gICAgICAgIFwiaXNMYXp5XCIsXG4gICAgICAgIFwiZmlsbFwiLFxuICAgICAgICBcInBsYWNlaG9sZGVyXCIsXG4gICAgICAgIFwibG9hZGluZ1wiLFxuICAgICAgICBcInNyY1N0cmluZ1wiLFxuICAgICAgICBcImNvbmZpZ1wiLFxuICAgICAgICBcInVub3B0aW1pemVkXCIsXG4gICAgICAgIFwibG9hZGVyXCIsXG4gICAgICAgIFwib25Mb2FkUmVmXCIsXG4gICAgICAgIFwib25Mb2FkaW5nQ29tcGxldGVSZWZcIixcbiAgICAgICAgXCJzZXRCbHVyQ29tcGxldGVcIixcbiAgICAgICAgXCJzZXRTaG93QWx0VGV4dFwiLFxuICAgICAgICBcIm9uTG9hZFwiLFxuICAgICAgICBcIm9uRXJyb3JcIlxuICAgIF0pO1xuICAgIGxvYWRpbmcgPSBpc0xhenkgPyAnbGF6eScgOiBsb2FkaW5nO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImltZ1wiLCBPYmplY3QuYXNzaWduKHt9LCByZXN0LCBpbWdBdHRyaWJ1dGVzLCB7XG4gICAgICAgIHdpZHRoOiB3aWR0aEludCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRJbnQsXG4gICAgICAgIGRlY29kaW5nOiBcImFzeW5jXCIsXG4gICAgICAgIFwiZGF0YS1uaW1nXCI6IGZpbGwgPyAnZmlsbCcgOiAnMScsXG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICAvLyBAdHMtaWdub3JlIC0gVE9ETzogdXBncmFkZSB0byBgQHR5cGVzL3JlYWN0QDE3YFxuICAgICAgICBsb2FkaW5nOiBsb2FkaW5nLFxuICAgICAgICBzdHlsZTogX2V4dGVuZHMoe30sIGltZ1N0eWxlLCBibHVyU3R5bGUpLFxuICAgICAgICByZWY6ICgwLCBfcmVhY3QpLnVzZUNhbGxiYWNrKChpbWcpPT57XG4gICAgICAgICAgICBpZiAoZm9yd2FyZGVkUmVmKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmb3J3YXJkZWRSZWYgPT09ICdmdW5jdGlvbicpIGZvcndhcmRlZFJlZihpbWcpO1xuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBmb3J3YXJkZWRSZWYgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgLSAuY3VycmVudCBpcyByZWFkIG9ubHkgaXQncyB1c3VhbGx5IGFzc2lnbmVkIGJ5IHJlYWN0IGludGVybmFsbHlcbiAgICAgICAgICAgICAgICAgICAgZm9yd2FyZGVkUmVmLmN1cnJlbnQgPSBpbWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpbWcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob25FcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBpbWFnZSBoYXMgYW4gZXJyb3IgYmVmb3JlIHJlYWN0IGh5ZHJhdGVzLCB0aGVuIHRoZSBlcnJvciBpcyBsb3N0LlxuICAgICAgICAgICAgICAgIC8vIFRoZSB3b3JrYXJvdW5kIGlzIHRvIHdhaXQgdW50aWwgdGhlIGltYWdlIGlzIG1vdW50ZWQgd2hpY2ggaXMgYWZ0ZXIgaHlkcmF0aW9uLFxuICAgICAgICAgICAgICAgIC8vIHRoZW4gd2Ugc2V0IHRoZSBzcmMgYWdhaW4gdG8gdHJpZ2dlciB0aGUgZXJyb3IgaGFuZGxlciAoaWYgdGhlcmUgd2FzIGFuIGVycm9yKS5cbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1hc3NpZ25cbiAgICAgICAgICAgICAgICBpbWcuc3JjID0gaW1nLnNyYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzcmNTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgSW1hZ2UgaXMgbWlzc2luZyByZXF1aXJlZCBcInNyY1wiIHByb3BlcnR5OmAsIGltZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbWcuZ2V0QXR0cmlidXRlKCdhbHQnKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBJbWFnZSBpcyBtaXNzaW5nIHJlcXVpcmVkIFwiYWx0XCIgcHJvcGVydHkuIFBsZWFzZSBhZGQgQWx0ZXJuYXRpdmUgVGV4dCB0byBkZXNjcmliZSB0aGUgaW1hZ2UgZm9yIHNjcmVlbiByZWFkZXJzIGFuZCBzZWFyY2ggZW5naW5lcy5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW1nLmNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlTG9hZGluZyhpbWcsIHNyY1N0cmluZywgcGxhY2Vob2xkZXIsIG9uTG9hZFJlZiwgb25Mb2FkaW5nQ29tcGxldGVSZWYsIHNldEJsdXJDb21wbGV0ZSwgdW5vcHRpbWl6ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCBbXG4gICAgICAgICAgICBzcmNTdHJpbmcsXG4gICAgICAgICAgICBwbGFjZWhvbGRlcixcbiAgICAgICAgICAgIG9uTG9hZFJlZixcbiAgICAgICAgICAgIG9uTG9hZGluZ0NvbXBsZXRlUmVmLFxuICAgICAgICAgICAgc2V0Qmx1ckNvbXBsZXRlLFxuICAgICAgICAgICAgb25FcnJvcixcbiAgICAgICAgICAgIHVub3B0aW1pemVkLFxuICAgICAgICAgICAgZm9yd2FyZGVkUmVmLCBcbiAgICAgICAgXSksXG4gICAgICAgIG9uTG9hZDogKGV2ZW50KT0+e1xuICAgICAgICAgICAgY29uc3QgaW1nID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICAgICAgICAgIGhhbmRsZUxvYWRpbmcoaW1nLCBzcmNTdHJpbmcsIHBsYWNlaG9sZGVyLCBvbkxvYWRSZWYsIG9uTG9hZGluZ0NvbXBsZXRlUmVmLCBzZXRCbHVyQ29tcGxldGUsIHVub3B0aW1pemVkKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25FcnJvcjogKGV2ZW50KT0+e1xuICAgICAgICAgICAgLy8gaWYgdGhlIHJlYWwgaW1hZ2UgZmFpbHMgdG8gbG9hZCwgdGhpcyB3aWxsIGVuc3VyZSBcImFsdFwiIGlzIHZpc2libGVcbiAgICAgICAgICAgIHNldFNob3dBbHRUZXh0KHRydWUpO1xuICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVyID09PSAnYmx1cicpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgcmVhbCBpbWFnZSBmYWlscyB0byBsb2FkLCB0aGlzIHdpbGwgc3RpbGwgcmVtb3ZlIHRoZSBwbGFjZWhvbGRlci5cbiAgICAgICAgICAgICAgICBzZXRCbHVyQ29tcGxldGUodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob25FcnJvcikge1xuICAgICAgICAgICAgICAgIG9uRXJyb3IoZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSkpKTtcbn0pO1xuY29uc3QgSW1hZ2UgPSAvKiNfX1BVUkVfXyovICgwLCBfcmVhY3QpLmZvcndhcmRSZWYoKF9wYXJhbSwgZm9yd2FyZGVkUmVmKT0+e1xuICAgIHZhciB7IHNyYyAsIHNpemVzICwgdW5vcHRpbWl6ZWQgPWZhbHNlICwgcHJpb3JpdHkgPWZhbHNlICwgbG9hZGluZyAsIGNsYXNzTmFtZSAsIHF1YWxpdHkgLCB3aWR0aCAsIGhlaWdodCAsIGZpbGwgLCBzdHlsZSAsIG9uTG9hZCAsIG9uTG9hZGluZ0NvbXBsZXRlICwgcGxhY2Vob2xkZXIgPSdlbXB0eScgLCBibHVyRGF0YVVSTCAsIGxheW91dCAsIG9iamVjdEZpdCAsIG9iamVjdFBvc2l0aW9uICwgbGF6eUJvdW5kYXJ5ICwgbGF6eVJvb3QgIH0gPSBfcGFyYW0sIGFsbCA9IF9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlKF9wYXJhbSwgW1xuICAgICAgICBcInNyY1wiLFxuICAgICAgICBcInNpemVzXCIsXG4gICAgICAgIFwidW5vcHRpbWl6ZWRcIixcbiAgICAgICAgXCJwcmlvcml0eVwiLFxuICAgICAgICBcImxvYWRpbmdcIixcbiAgICAgICAgXCJjbGFzc05hbWVcIixcbiAgICAgICAgXCJxdWFsaXR5XCIsXG4gICAgICAgIFwid2lkdGhcIixcbiAgICAgICAgXCJoZWlnaHRcIixcbiAgICAgICAgXCJmaWxsXCIsXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgXCJvbkxvYWRcIixcbiAgICAgICAgXCJvbkxvYWRpbmdDb21wbGV0ZVwiLFxuICAgICAgICBcInBsYWNlaG9sZGVyXCIsXG4gICAgICAgIFwiYmx1ckRhdGFVUkxcIixcbiAgICAgICAgXCJsYXlvdXRcIixcbiAgICAgICAgXCJvYmplY3RGaXRcIixcbiAgICAgICAgXCJvYmplY3RQb3NpdGlvblwiLFxuICAgICAgICBcImxhenlCb3VuZGFyeVwiLFxuICAgICAgICBcImxhenlSb290XCJcbiAgICBdKTtcbiAgICBjb25zdCBjb25maWdDb250ZXh0ID0gKDAsIF9yZWFjdCkudXNlQ29udGV4dChfaW1hZ2VDb25maWdDb250ZXh0LkltYWdlQ29uZmlnQ29udGV4dCk7XG4gICAgY29uc3QgY29uZmlnID0gKDAsIF9yZWFjdCkudXNlTWVtbygoKT0+e1xuICAgICAgICBjb25zdCBjID0gY29uZmlnRW52IHx8IGNvbmZpZ0NvbnRleHQgfHwgX2ltYWdlQ29uZmlnLmltYWdlQ29uZmlnRGVmYXVsdDtcbiAgICAgICAgY29uc3QgYWxsU2l6ZXMgPSBbXG4gICAgICAgICAgICAuLi5jLmRldmljZVNpemVzLFxuICAgICAgICAgICAgLi4uYy5pbWFnZVNpemVzXG4gICAgICAgIF0uc29ydCgoYSwgYik9PmEgLSBiKTtcbiAgICAgICAgY29uc3QgZGV2aWNlU2l6ZXMgPSBjLmRldmljZVNpemVzLnNvcnQoKGEsIGIpPT5hIC0gYik7XG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgYywge1xuICAgICAgICAgICAgYWxsU2l6ZXMsXG4gICAgICAgICAgICBkZXZpY2VTaXplc1xuICAgICAgICB9KTtcbiAgICB9LCBbXG4gICAgICAgIGNvbmZpZ0NvbnRleHRcbiAgICBdKTtcbiAgICBsZXQgcmVzdCA9IGFsbDtcbiAgICBsZXQgbG9hZGVyID0gcmVzdC5sb2FkZXIgfHwgX2ltYWdlTG9hZGVyLmRlZmF1bHQ7XG4gICAgLy8gUmVtb3ZlIHByb3BlcnR5IHNvIGl0J3Mgbm90IHNwcmVhZCBvbiA8aW1nPiBlbGVtZW50XG4gICAgZGVsZXRlIHJlc3QubG9hZGVyO1xuICAgIC8vIFRoaXMgc3BlY2lhbCB2YWx1ZSBpbmRpY2F0ZXMgdGhhdCB0aGUgdXNlclxuICAgIC8vIGRpZG4ndCBkZWZpbmUgYSBcImxvYWRlclwiIHByb3Agb3IgXCJsb2FkZXJcIiBjb25maWcuXG4gICAgY29uc3QgaXNEZWZhdWx0TG9hZGVyID0gJ19fbmV4dF9pbWdfZGVmYXVsdCcgaW4gbG9hZGVyO1xuICAgIGlmIChpc0RlZmF1bHRMb2FkZXIpIHtcbiAgICAgICAgaWYgKGNvbmZpZy5sb2FkZXIgPT09ICdjdXN0b20nKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaXMgbWlzc2luZyBcImxvYWRlclwiIHByb3AuYCArIGBcXG5SZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL25leHQtaW1hZ2UtbWlzc2luZy1sb2FkZXJgKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFRoZSB1c2VyIGRlZmluZWQgYSBcImxvYWRlclwiIHByb3Agb3IgY29uZmlnLlxuICAgICAgICAvLyBTaW5jZSB0aGUgY29uZmlnIG9iamVjdCBpcyBpbnRlcm5hbCBvbmx5LCB3ZVxuICAgICAgICAvLyBtdXN0IG5vdCBwYXNzIGl0IHRvIHRoZSB1c2VyLWRlZmluZWQgXCJsb2FkZXJcIi5cbiAgICAgICAgY29uc3QgY3VzdG9tSW1hZ2VMb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHZhciBfdG1wO1xuICAgICAgICBfdG1wID0gKG9iaik9PntcbiAgICAgICAgICAgIGNvbnN0IHsgY29uZmlnOiBfICB9ID0gb2JqLCBvcHRzID0gX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2Uob2JqLCBbXG4gICAgICAgICAgICAgICAgXCJjb25maWdcIlxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICByZXR1cm4gY3VzdG9tSW1hZ2VMb2FkZXIob3B0cyk7XG4gICAgICAgIH0sIGxvYWRlciA9IF90bXAsIF90bXA7XG4gICAgfVxuICAgIGlmIChsYXlvdXQpIHtcbiAgICAgICAgaWYgKGxheW91dCA9PT0gJ2ZpbGwnKSB7XG4gICAgICAgICAgICBmaWxsID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsYXlvdXRUb1N0eWxlID0ge1xuICAgICAgICAgICAgaW50cmluc2ljOiB7XG4gICAgICAgICAgICAgICAgbWF4V2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6ICdhdXRvJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgICAgIGhlaWdodDogJ2F1dG8nXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGxheW91dFRvU2l6ZXMgPSB7XG4gICAgICAgICAgICByZXNwb25zaXZlOiAnMTAwdncnLFxuICAgICAgICAgICAgZmlsbDogJzEwMHZ3J1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBsYXlvdXRTdHlsZSA9IGxheW91dFRvU3R5bGVbbGF5b3V0XTtcbiAgICAgICAgaWYgKGxheW91dFN0eWxlKSB7XG4gICAgICAgICAgICBzdHlsZSA9IF9leHRlbmRzKHt9LCBzdHlsZSwgbGF5b3V0U3R5bGUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxheW91dFNpemVzID0gbGF5b3V0VG9TaXplc1tsYXlvdXRdO1xuICAgICAgICBpZiAobGF5b3V0U2l6ZXMgJiYgIXNpemVzKSB7XG4gICAgICAgICAgICBzaXplcyA9IGxheW91dFNpemVzO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBzdGF0aWNTcmMgPSAnJztcbiAgICBsZXQgd2lkdGhJbnQgPSBnZXRJbnQod2lkdGgpO1xuICAgIGxldCBoZWlnaHRJbnQgPSBnZXRJbnQoaGVpZ2h0KTtcbiAgICBsZXQgYmx1cldpZHRoO1xuICAgIGxldCBibHVySGVpZ2h0O1xuICAgIGlmIChpc1N0YXRpY0ltcG9ydChzcmMpKSB7XG4gICAgICAgIGNvbnN0IHN0YXRpY0ltYWdlRGF0YSA9IGlzU3RhdGljUmVxdWlyZShzcmMpID8gc3JjLmRlZmF1bHQgOiBzcmM7XG4gICAgICAgIGlmICghc3RhdGljSW1hZ2VEYXRhLnNyYykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBbiBvYmplY3Qgc2hvdWxkIG9ubHkgYmUgcGFzc2VkIHRvIHRoZSBpbWFnZSBjb21wb25lbnQgc3JjIHBhcmFtZXRlciBpZiBpdCBjb21lcyBmcm9tIGEgc3RhdGljIGltYWdlIGltcG9ydC4gSXQgbXVzdCBpbmNsdWRlIHNyYy4gUmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeShzdGF0aWNJbWFnZURhdGEpfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3RhdGljSW1hZ2VEYXRhLmhlaWdodCB8fCAhc3RhdGljSW1hZ2VEYXRhLndpZHRoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFuIG9iamVjdCBzaG91bGQgb25seSBiZSBwYXNzZWQgdG8gdGhlIGltYWdlIGNvbXBvbmVudCBzcmMgcGFyYW1ldGVyIGlmIGl0IGNvbWVzIGZyb20gYSBzdGF0aWMgaW1hZ2UgaW1wb3J0LiBJdCBtdXN0IGluY2x1ZGUgaGVpZ2h0IGFuZCB3aWR0aC4gUmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeShzdGF0aWNJbWFnZURhdGEpfWApO1xuICAgICAgICB9XG4gICAgICAgIGJsdXJXaWR0aCA9IHN0YXRpY0ltYWdlRGF0YS5ibHVyV2lkdGg7XG4gICAgICAgIGJsdXJIZWlnaHQgPSBzdGF0aWNJbWFnZURhdGEuYmx1ckhlaWdodDtcbiAgICAgICAgYmx1ckRhdGFVUkwgPSBibHVyRGF0YVVSTCB8fCBzdGF0aWNJbWFnZURhdGEuYmx1ckRhdGFVUkw7XG4gICAgICAgIHN0YXRpY1NyYyA9IHN0YXRpY0ltYWdlRGF0YS5zcmM7XG4gICAgICAgIGlmICghZmlsbCkge1xuICAgICAgICAgICAgaWYgKCF3aWR0aEludCAmJiAhaGVpZ2h0SW50KSB7XG4gICAgICAgICAgICAgICAgd2lkdGhJbnQgPSBzdGF0aWNJbWFnZURhdGEud2lkdGg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0SW50ID0gc3RhdGljSW1hZ2VEYXRhLmhlaWdodDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAod2lkdGhJbnQgJiYgIWhlaWdodEludCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhdGlvID0gd2lkdGhJbnQgLyBzdGF0aWNJbWFnZURhdGEud2lkdGg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0SW50ID0gTWF0aC5yb3VuZChzdGF0aWNJbWFnZURhdGEuaGVpZ2h0ICogcmF0aW8pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICghd2lkdGhJbnQgJiYgaGVpZ2h0SW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmF0aW8gPSBoZWlnaHRJbnQgLyBzdGF0aWNJbWFnZURhdGEuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIHdpZHRoSW50ID0gTWF0aC5yb3VuZChzdGF0aWNJbWFnZURhdGEud2lkdGggKiByYXRpbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3JjID0gdHlwZW9mIHNyYyA9PT0gJ3N0cmluZycgPyBzcmMgOiBzdGF0aWNTcmM7XG4gICAgbGV0IGlzTGF6eSA9ICFwcmlvcml0eSAmJiAobG9hZGluZyA9PT0gJ2xhenknIHx8IHR5cGVvZiBsb2FkaW5nID09PSAndW5kZWZpbmVkJyk7XG4gICAgaWYgKHNyYy5zdGFydHNXaXRoKCdkYXRhOicpIHx8IHNyYy5zdGFydHNXaXRoKCdibG9iOicpKSB7XG4gICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvQmFzaWNzX29mX0hUVFAvRGF0YV9VUklzXG4gICAgICAgIHVub3B0aW1pemVkID0gdHJ1ZTtcbiAgICAgICAgaXNMYXp5ID0gZmFsc2U7XG4gICAgfVxuICAgIGlmIChjb25maWcudW5vcHRpbWl6ZWQpIHtcbiAgICAgICAgdW5vcHRpbWl6ZWQgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAoaXNEZWZhdWx0TG9hZGVyICYmIHNyYy5lbmRzV2l0aCgnLnN2ZycpICYmICFjb25maWcuZGFuZ2Vyb3VzbHlBbGxvd1NWRykge1xuICAgICAgICAvLyBTcGVjaWFsIGNhc2UgdG8gbWFrZSBzdmcgc2VydmUgYXMtaXMgdG8gYXZvaWQgcHJveHlpbmdcbiAgICAgICAgLy8gdGhyb3VnaCB0aGUgYnVpbHQtaW4gSW1hZ2UgT3B0aW1pemF0aW9uIEFQSS5cbiAgICAgICAgdW5vcHRpbWl6ZWQgPSB0cnVlO1xuICAgIH1cbiAgICBjb25zdCBbYmx1ckNvbXBsZXRlLCBzZXRCbHVyQ29tcGxldGVdID0gKDAsIF9yZWFjdCkudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtzaG93QWx0VGV4dCwgc2V0U2hvd0FsdFRleHRdID0gKDAsIF9yZWFjdCkudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IHF1YWxpdHlJbnQgPSBnZXRJbnQocXVhbGl0eSk7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKCFzcmMpIHtcbiAgICAgICAgICAgIC8vIFJlYWN0IGRvZXNuJ3Qgc2hvdyB0aGUgc3RhY2sgdHJhY2UgYW5kIHRoZXJlJ3NcbiAgICAgICAgICAgIC8vIG5vIGBzcmNgIHRvIGhlbHAgaWRlbnRpZnkgd2hpY2ggaW1hZ2UsIHNvIHdlXG4gICAgICAgICAgICAvLyBpbnN0ZWFkIGNvbnNvbGUuZXJyb3IocmVmKSBkdXJpbmcgbW91bnQuXG4gICAgICAgICAgICB1bm9wdGltaXplZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoZmlsbCkge1xuICAgICAgICAgICAgICAgIGlmICh3aWR0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGJvdGggXCJ3aWR0aFwiIGFuZCBcImZpbGxcIiBwcm9wZXJ0aWVzLiBPbmx5IG9uZSBzaG91bGQgYmUgdXNlZC5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGJvdGggXCJoZWlnaHRcIiBhbmQgXCJmaWxsXCIgcHJvcGVydGllcy4gT25seSBvbmUgc2hvdWxkIGJlIHVzZWQuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgoc3R5bGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0eWxlLnBvc2l0aW9uKSAmJiBzdHlsZS5wb3NpdGlvbiAhPT0gJ2Fic29sdXRlJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGJvdGggXCJmaWxsXCIgYW5kIFwic3R5bGUucG9zaXRpb25cIiBwcm9wZXJ0aWVzLiBJbWFnZXMgd2l0aCBcImZpbGxcIiBhbHdheXMgdXNlIHBvc2l0aW9uIGFic29sdXRlIC0gaXQgY2Fubm90IGJlIG1vZGlmaWVkLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKHN0eWxlID09IG51bGwgPyB2b2lkIDAgOiBzdHlsZS53aWR0aCkgJiYgc3R5bGUud2lkdGggIT09ICcxMDAlJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGJvdGggXCJmaWxsXCIgYW5kIFwic3R5bGUud2lkdGhcIiBwcm9wZXJ0aWVzLiBJbWFnZXMgd2l0aCBcImZpbGxcIiBhbHdheXMgdXNlIHdpZHRoIDEwMCUgLSBpdCBjYW5ub3QgYmUgbW9kaWZpZWQuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgoc3R5bGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0eWxlLmhlaWdodCkgJiYgc3R5bGUuaGVpZ2h0ICE9PSAnMTAwJScpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwiZmlsbFwiIGFuZCBcInN0eWxlLmhlaWdodFwiIHByb3BlcnRpZXMuIEltYWdlcyB3aXRoIFwiZmlsbFwiIGFsd2F5cyB1c2UgaGVpZ2h0IDEwMCUgLSBpdCBjYW5ub3QgYmUgbW9kaWZpZWQuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpZHRoSW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaXMgbWlzc2luZyByZXF1aXJlZCBcIndpZHRoXCIgcHJvcGVydHkuYCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpc05hTih3aWR0aEludCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBpbnZhbGlkIFwid2lkdGhcIiBwcm9wZXJ0eS4gRXhwZWN0ZWQgYSBudW1lcmljIHZhbHVlIGluIHBpeGVscyBidXQgcmVjZWl2ZWQgXCIke3dpZHRofVwiLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGhlaWdodEludCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGlzIG1pc3NpbmcgcmVxdWlyZWQgXCJoZWlnaHRcIiBwcm9wZXJ0eS5gKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlzTmFOKGhlaWdodEludCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBpbnZhbGlkIFwiaGVpZ2h0XCIgcHJvcGVydHkuIEV4cGVjdGVkIGEgbnVtZXJpYyB2YWx1ZSBpbiBwaXhlbHMgYnV0IHJlY2VpdmVkIFwiJHtoZWlnaHR9XCIuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghVkFMSURfTE9BRElOR19WQUxVRVMuaW5jbHVkZXMobG9hZGluZykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgaW52YWxpZCBcImxvYWRpbmdcIiBwcm9wZXJ0eS4gUHJvdmlkZWQgXCIke2xvYWRpbmd9XCIgc2hvdWxkIGJlIG9uZSBvZiAke1ZBTElEX0xPQURJTkdfVkFMVUVTLm1hcChTdHJpbmcpLmpvaW4oJywnKX0uYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByaW9yaXR5ICYmIGxvYWRpbmcgPT09ICdsYXp5Jykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwicHJpb3JpdHlcIiBhbmQgXCJsb2FkaW5nPSdsYXp5J1wiIHByb3BlcnRpZXMuIE9ubHkgb25lIHNob3VsZCBiZSB1c2VkLmApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwbGFjZWhvbGRlciA9PT0gJ2JsdXInKSB7XG4gICAgICAgICAgICBpZiAod2lkdGhJbnQgJiYgaGVpZ2h0SW50ICYmIHdpZHRoSW50ICogaGVpZ2h0SW50IDwgMTYwMCkge1xuICAgICAgICAgICAgICAgICgwLCBfd2Fybk9uY2UpLndhcm5PbmNlKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGlzIHNtYWxsZXIgdGhhbiA0MHg0MC4gQ29uc2lkZXIgcmVtb3ZpbmcgdGhlIFwicGxhY2Vob2xkZXI9J2JsdXInXCIgcHJvcGVydHkgdG8gaW1wcm92ZSBwZXJmb3JtYW5jZS5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghYmx1ckRhdGFVUkwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBWQUxJRF9CTFVSX0VYVCA9IFtcbiAgICAgICAgICAgICAgICAgICAgJ2pwZWcnLFxuICAgICAgICAgICAgICAgICAgICAncG5nJyxcbiAgICAgICAgICAgICAgICAgICAgJ3dlYnAnLFxuICAgICAgICAgICAgICAgICAgICAnYXZpZidcbiAgICAgICAgICAgICAgICBdIC8vIHNob3VsZCBtYXRjaCBuZXh0LWltYWdlLWxvYWRlclxuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIFwicGxhY2Vob2xkZXI9J2JsdXInXCIgcHJvcGVydHkgYnV0IGlzIG1pc3NpbmcgdGhlIFwiYmx1ckRhdGFVUkxcIiBwcm9wZXJ0eS5cbiAgICAgICAgICBQb3NzaWJsZSBzb2x1dGlvbnM6XG4gICAgICAgICAgICAtIEFkZCBhIFwiYmx1ckRhdGFVUkxcIiBwcm9wZXJ0eSwgdGhlIGNvbnRlbnRzIHNob3VsZCBiZSBhIHNtYWxsIERhdGEgVVJMIHRvIHJlcHJlc2VudCB0aGUgaW1hZ2VcbiAgICAgICAgICAgIC0gQ2hhbmdlIHRoZSBcInNyY1wiIHByb3BlcnR5IHRvIGEgc3RhdGljIGltcG9ydCB3aXRoIG9uZSBvZiB0aGUgc3VwcG9ydGVkIGZpbGUgdHlwZXM6ICR7VkFMSURfQkxVUl9FWFQuam9pbignLCcpfVxuICAgICAgICAgICAgLSBSZW1vdmUgdGhlIFwicGxhY2Vob2xkZXJcIiBwcm9wZXJ0eSwgZWZmZWN0aXZlbHkgbm8gYmx1ciBlZmZlY3RcbiAgICAgICAgICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3BsYWNlaG9sZGVyLWJsdXItZGF0YS11cmxgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoJ3JlZicgaW4gcmVzdCkge1xuICAgICAgICAgICAgKDAsIF93YXJuT25jZSkud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaXMgdXNpbmcgdW5zdXBwb3J0ZWQgXCJyZWZcIiBwcm9wZXJ0eS4gQ29uc2lkZXIgdXNpbmcgdGhlIFwib25Mb2FkaW5nQ29tcGxldGVcIiBwcm9wZXJ0eSBpbnN0ZWFkLmApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdW5vcHRpbWl6ZWQgJiYgbG9hZGVyICE9PSBfaW1hZ2VMb2FkZXIuZGVmYXVsdCkge1xuICAgICAgICAgICAgY29uc3QgdXJsU3RyID0gbG9hZGVyKHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIHdpZHRoOiB3aWR0aEludCB8fCA0MDAsXG4gICAgICAgICAgICAgICAgcXVhbGl0eTogcXVhbGl0eUludCB8fCA3NVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgdXJsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB1cmwgPSBuZXcgVVJMKHVybFN0cik7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHt9XG4gICAgICAgICAgICBpZiAodXJsU3RyID09PSBzcmMgfHwgdXJsICYmIHVybC5wYXRobmFtZSA9PT0gc3JjICYmICF1cmwuc2VhcmNoKSB7XG4gICAgICAgICAgICAgICAgKDAsIF93YXJuT25jZSkud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGEgXCJsb2FkZXJcIiBwcm9wZXJ0eSB0aGF0IGRvZXMgbm90IGltcGxlbWVudCB3aWR0aC4gUGxlYXNlIGltcGxlbWVudCBpdCBvciB1c2UgdGhlIFwidW5vcHRpbWl6ZWRcIiBwcm9wZXJ0eSBpbnN0ZWFkLmAgKyBgXFxuUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWltYWdlLW1pc3NpbmctbG9hZGVyLXdpZHRoYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBbbGVnYWN5S2V5LCBsZWdhY3lWYWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoe1xuICAgICAgICAgICAgbGF5b3V0LFxuICAgICAgICAgICAgb2JqZWN0Rml0LFxuICAgICAgICAgICAgb2JqZWN0UG9zaXRpb24sXG4gICAgICAgICAgICBsYXp5Qm91bmRhcnksXG4gICAgICAgICAgICBsYXp5Um9vdFxuICAgICAgICB9KSl7XG4gICAgICAgICAgICBpZiAobGVnYWN5VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAoMCwgX3dhcm5PbmNlKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgbGVnYWN5IHByb3AgXCIke2xlZ2FjeUtleX1cIi4gRGlkIHlvdSBmb3JnZXQgdG8gcnVuIHRoZSBjb2RlbW9kP2AgKyBgXFxuUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWltYWdlLXVwZ3JhZGUtdG8tMTNgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgIXBlcmZPYnNlcnZlciAmJiB3aW5kb3cuUGVyZm9ybWFuY2VPYnNlcnZlcikge1xuICAgICAgICAgICAgcGVyZk9ic2VydmVyID0gbmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIoKGVudHJ5TGlzdCk9PntcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIGVudHJ5TGlzdC5nZXRFbnRyaWVzKCkpe1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVmO1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIC0gbWlzc2luZyBcIkxhcmdlc3RDb250ZW50ZnVsUGFpbnRcIiBjbGFzcyB3aXRoIFwiZWxlbWVudFwiIHByb3BcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1nU3JjID0gKGVudHJ5ID09IG51bGwgPyB2b2lkIDAgOiAocmVmID0gZW50cnkuZWxlbWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5zcmMpIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsY3BJbWFnZSA9IGFsbEltZ3MuZ2V0KGltZ1NyYyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsY3BJbWFnZSAmJiAhbGNwSW1hZ2UucHJpb3JpdHkgJiYgbGNwSW1hZ2UucGxhY2Vob2xkZXIgIT09ICdibHVyJyAmJiAhbGNwSW1hZ2Uuc3JjLnN0YXJ0c1dpdGgoJ2RhdGE6JykgJiYgIWxjcEltYWdlLnNyYy5zdGFydHNXaXRoKCdibG9iOicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL3dlYi5kZXYvbGNwLyNtZWFzdXJlLWxjcC1pbi1qYXZhc2NyaXB0XG4gICAgICAgICAgICAgICAgICAgICAgICAoMCwgX3dhcm5PbmNlKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke2xjcEltYWdlLnNyY31cIiB3YXMgZGV0ZWN0ZWQgYXMgdGhlIExhcmdlc3QgQ29udGVudGZ1bCBQYWludCAoTENQKS4gUGxlYXNlIGFkZCB0aGUgXCJwcmlvcml0eVwiIHByb3BlcnR5IGlmIHRoaXMgaW1hZ2UgaXMgYWJvdmUgdGhlIGZvbGQuYCArIGBcXG5SZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2UvbmV4dC9pbWFnZSNwcmlvcml0eWApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBlcmZPYnNlcnZlci5vYnNlcnZlKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xhcmdlc3QtY29udGVudGZ1bC1wYWludCcsXG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlcmVkOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAvLyBMb2cgZXJyb3IgYnV0IGRvbid0IGNyYXNoIHRoZSBhcHBcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaW1nU3R5bGUgPSBPYmplY3QuYXNzaWduKGZpbGwgPyB7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICByaWdodDogMCxcbiAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICBvYmplY3RGaXQsXG4gICAgICAgIG9iamVjdFBvc2l0aW9uXG4gICAgfSA6IHt9LCBzaG93QWx0VGV4dCA/IHt9IDoge1xuICAgICAgICBjb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgIH0sIHN0eWxlKTtcbiAgICBjb25zdCBibHVyU3R5bGUgPSBwbGFjZWhvbGRlciA9PT0gJ2JsdXInICYmIGJsdXJEYXRhVVJMICYmICFibHVyQ29tcGxldGUgPyB7XG4gICAgICAgIGJhY2tncm91bmRTaXplOiBpbWdTdHlsZS5vYmplY3RGaXQgfHwgJ2NvdmVyJyxcbiAgICAgICAgYmFja2dyb3VuZFBvc2l0aW9uOiBpbWdTdHlsZS5vYmplY3RQb3NpdGlvbiB8fCAnNTAlIDUwJScsXG4gICAgICAgIGJhY2tncm91bmRSZXBlYXQ6ICduby1yZXBlYXQnLFxuICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwkeygwLCBfaW1hZ2VCbHVyU3ZnKS5nZXRJbWFnZUJsdXJTdmcoe1xuICAgICAgICAgICAgd2lkdGhJbnQsXG4gICAgICAgICAgICBoZWlnaHRJbnQsXG4gICAgICAgICAgICBibHVyV2lkdGgsXG4gICAgICAgICAgICBibHVySGVpZ2h0LFxuICAgICAgICAgICAgYmx1ckRhdGFVUkxcbiAgICAgICAgfSl9XCIpYFxuICAgIH0gOiB7fTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgaWYgKGJsdXJTdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgJiYgKGJsdXJEYXRhVVJMID09IG51bGwgPyB2b2lkIDAgOiBibHVyRGF0YVVSTC5zdGFydHNXaXRoKCcvJykpKSB7XG4gICAgICAgICAgICAvLyBEdXJpbmcgYG5leHQgZGV2YCwgd2UgZG9uJ3Qgd2FudCB0byBnZW5lcmF0ZSBibHVyIHBsYWNlaG9sZGVycyB3aXRoIHdlYnBhY2tcbiAgICAgICAgICAgIC8vIGJlY2F1c2UgaXQgY2FuIGRlbGF5IHN0YXJ0aW5nIHRoZSBkZXYgc2VydmVyLiBJbnN0ZWFkLCBgbmV4dC1pbWFnZS1sb2FkZXIuanNgXG4gICAgICAgICAgICAvLyB3aWxsIGlubGluZSBhIHNwZWNpYWwgdXJsIHRvIGxhemlseSBnZW5lcmF0ZSB0aGUgYmx1ciBwbGFjZWhvbGRlciBhdCByZXF1ZXN0IHRpbWUuXG4gICAgICAgICAgICBibHVyU3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybChcIiR7Ymx1ckRhdGFVUkx9XCIpYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBpbWdBdHRyaWJ1dGVzID0gZ2VuZXJhdGVJbWdBdHRycyh7XG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgc3JjLFxuICAgICAgICB1bm9wdGltaXplZCxcbiAgICAgICAgd2lkdGg6IHdpZHRoSW50LFxuICAgICAgICBxdWFsaXR5OiBxdWFsaXR5SW50LFxuICAgICAgICBzaXplcyxcbiAgICAgICAgbG9hZGVyXG4gICAgfSk7XG4gICAgbGV0IHNyY1N0cmluZyA9IHNyYztcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGxldCBmdWxsVXJsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBmdWxsVXJsID0gbmV3IFVSTChpbWdBdHRyaWJ1dGVzLnNyYyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgZnVsbFVybCA9IG5ldyBVUkwoaW1nQXR0cmlidXRlcy5zcmMsIHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFsbEltZ3Muc2V0KGZ1bGxVcmwuaHJlZiwge1xuICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICBwcmlvcml0eSxcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlclxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbGlua1Byb3BzID0ge1xuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHVwZ3JhZGUgcmVhY3QgdHlwZXMgdG8gcmVhY3QgMThcbiAgICAgICAgaW1hZ2VTcmNTZXQ6IGltZ0F0dHJpYnV0ZXMuc3JjU2V0LFxuICAgICAgICBpbWFnZVNpemVzOiBpbWdBdHRyaWJ1dGVzLnNpemVzLFxuICAgICAgICBjcm9zc09yaWdpbjogcmVzdC5jcm9zc09yaWdpblxuICAgIH07XG4gICAgY29uc3Qgb25Mb2FkUmVmID0gKDAsIF9yZWFjdCkudXNlUmVmKG9uTG9hZCk7XG4gICAgKDAsIF9yZWFjdCkudXNlRWZmZWN0KCgpPT57XG4gICAgICAgIG9uTG9hZFJlZi5jdXJyZW50ID0gb25Mb2FkO1xuICAgIH0sIFtcbiAgICAgICAgb25Mb2FkXG4gICAgXSk7XG4gICAgY29uc3Qgb25Mb2FkaW5nQ29tcGxldGVSZWYgPSAoMCwgX3JlYWN0KS51c2VSZWYob25Mb2FkaW5nQ29tcGxldGUpO1xuICAgICgwLCBfcmVhY3QpLnVzZUVmZmVjdCgoKT0+e1xuICAgICAgICBvbkxvYWRpbmdDb21wbGV0ZVJlZi5jdXJyZW50ID0gb25Mb2FkaW5nQ29tcGxldGU7XG4gICAgfSwgW1xuICAgICAgICBvbkxvYWRpbmdDb21wbGV0ZVxuICAgIF0pO1xuICAgIGNvbnN0IGltZ0VsZW1lbnRBcmdzID0gX2V4dGVuZHMoe1xuICAgICAgICBpc0xhenksXG4gICAgICAgIGltZ0F0dHJpYnV0ZXMsXG4gICAgICAgIGhlaWdodEludCxcbiAgICAgICAgd2lkdGhJbnQsXG4gICAgICAgIHF1YWxpdHlJbnQsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgaW1nU3R5bGUsXG4gICAgICAgIGJsdXJTdHlsZSxcbiAgICAgICAgbG9hZGluZyxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBmaWxsLFxuICAgICAgICB1bm9wdGltaXplZCxcbiAgICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICAgIGxvYWRlcixcbiAgICAgICAgc3JjU3RyaW5nLFxuICAgICAgICBvbkxvYWRSZWYsXG4gICAgICAgIG9uTG9hZGluZ0NvbXBsZXRlUmVmLFxuICAgICAgICBzZXRCbHVyQ29tcGxldGUsXG4gICAgICAgIHNldFNob3dBbHRUZXh0XG4gICAgfSwgcmVzdCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEltYWdlRWxlbWVudCwgT2JqZWN0LmFzc2lnbih7fSwgaW1nRWxlbWVudEFyZ3MsIHtcbiAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICB9KSksIHByaW9yaXR5ID8gLy8gTm90ZSBob3cgd2Ugb21pdCB0aGUgYGhyZWZgIGF0dHJpYnV0ZSwgYXMgaXQgd291bGQgb25seSBiZSByZWxldmFudFxuICAgIC8vIGZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IGBpbWFnZXNyY3NldGAsIGFuZCBpbiB0aG9zZSBjYXNlc1xuICAgIC8vIGl0IHdvdWxkIGxpa2VseSBjYXVzZSB0aGUgaW5jb3JyZWN0IGltYWdlIHRvIGJlIHByZWxvYWRlZC5cbiAgICAvL1xuICAgIC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NlbWFudGljcy5odG1sI2F0dHItbGluay1pbWFnZXNyY3NldFxuICAgIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVhZC5kZWZhdWx0LCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICBrZXk6ICdfX25pbWctJyArIGltZ0F0dHJpYnV0ZXMuc3JjICsgaW1nQXR0cmlidXRlcy5zcmNTZXQgKyBpbWdBdHRyaWJ1dGVzLnNpemVzLFxuICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICBhczogXCJpbWFnZVwiLFxuICAgICAgICBocmVmOiBpbWdBdHRyaWJ1dGVzLnNyY1NldCA/IHVuZGVmaW5lZCA6IGltZ0F0dHJpYnV0ZXMuc3JjXG4gICAgfSwgbGlua1Byb3BzKSkpIDogbnVsbCk7XG59KTtcbnZhciBfZGVmYXVsdCA9IEltYWdlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfZXh0ZW5kcyIsInJlcXVpcmUiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkIiwiX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UiLCJfcmVhY3QiLCJfaGVhZCIsIl9pbWFnZUJsdXJTdmciLCJfaW1hZ2VDb25maWciLCJfaW1hZ2VDb25maWdDb250ZXh0IiwiX3dhcm5PbmNlIiwiX2ltYWdlTG9hZGVyIiwiY29uZmlnRW52IiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JTUFHRV9PUFRTIiwiYWxsSW1ncyIsIk1hcCIsInBlcmZPYnNlcnZlciIsImdsb2JhbFRoaXMiLCJfX05FWFRfSU1BR0VfSU1QT1JURUQiLCJWQUxJRF9MT0FESU5HX1ZBTFVFUyIsInVuZGVmaW5lZCIsImlzU3RhdGljUmVxdWlyZSIsInNyYyIsImlzU3RhdGljSW1hZ2VEYXRhIiwiaXNTdGF0aWNJbXBvcnQiLCJnZXRXaWR0aHMiLCJ3aWR0aCIsInNpemVzIiwiZGV2aWNlU2l6ZXMiLCJhbGxTaXplcyIsInZpZXdwb3J0V2lkdGhSZSIsInBlcmNlbnRTaXplcyIsIm1hdGNoIiwiZXhlYyIsInB1c2giLCJwYXJzZUludCIsImxlbmd0aCIsInNtYWxsZXN0UmF0aW8iLCJNYXRoIiwibWluIiwid2lkdGhzIiwiZmlsdGVyIiwicyIsImtpbmQiLCJTZXQiLCJtYXAiLCJ3IiwiZmluZCIsInAiLCJnZW5lcmF0ZUltZ0F0dHJzIiwiY29uZmlnIiwidW5vcHRpbWl6ZWQiLCJxdWFsaXR5IiwibG9hZGVyIiwic3JjU2V0IiwibGFzdCIsImkiLCJqb2luIiwiZ2V0SW50IiwieCIsInRlc3QiLCJOYU4iLCJoYW5kbGVMb2FkaW5nIiwiaW1nIiwicGxhY2Vob2xkZXIiLCJvbkxvYWRSZWYiLCJvbkxvYWRpbmdDb21wbGV0ZVJlZiIsInNldEJsdXJDb21wbGV0ZSIsImRlY29kZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiY2F0Y2giLCJ0aGVuIiwicGFyZW50Tm9kZSIsImN1cnJlbnQiLCJldmVudCIsIkV2ZW50Iiwid3JpdGFibGUiLCJwcmV2ZW50ZWQiLCJzdG9wcGVkIiwibmF0aXZlRXZlbnQiLCJjdXJyZW50VGFyZ2V0IiwidGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwZXJzaXN0IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJnZXRBdHRyaWJ1dGUiLCJ3aWR0aFZpZXdwb3J0UmF0aW8iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwid2Fybk9uY2UiLCJwYXJlbnRFbGVtZW50IiwicG9zaXRpb24iLCJnZXRDb21wdXRlZFN0eWxlIiwidmFsaWQiLCJpbmNsdWRlcyIsIlN0cmluZyIsImhlaWdodCIsImhlaWdodE1vZGlmaWVkIiwidG9TdHJpbmciLCJ3aWR0aE1vZGlmaWVkIiwiSW1hZ2VFbGVtZW50IiwiZm9yd2FyZFJlZiIsIl9wYXJhbSIsImZvcndhcmRlZFJlZiIsImltZ0F0dHJpYnV0ZXMiLCJoZWlnaHRJbnQiLCJ3aWR0aEludCIsInF1YWxpdHlJbnQiLCJjbGFzc05hbWUiLCJpbWdTdHlsZSIsImJsdXJTdHlsZSIsImlzTGF6eSIsImZpbGwiLCJsb2FkaW5nIiwic3JjU3RyaW5nIiwic2V0U2hvd0FsdFRleHQiLCJvbkxvYWQiLCJvbkVycm9yIiwicmVzdCIsImNyZWF0ZUVsZW1lbnQiLCJGcmFnbWVudCIsImFzc2lnbiIsImRlY29kaW5nIiwic3R5bGUiLCJyZWYiLCJ1c2VDYWxsYmFjayIsImNvbnNvbGUiLCJlcnJvciIsImNvbXBsZXRlIiwiSW1hZ2UiLCJwcmlvcml0eSIsIm9uTG9hZGluZ0NvbXBsZXRlIiwiYmx1ckRhdGFVUkwiLCJsYXlvdXQiLCJvYmplY3RGaXQiLCJvYmplY3RQb3NpdGlvbiIsImxhenlCb3VuZGFyeSIsImxhenlSb290IiwiYWxsIiwiY29uZmlnQ29udGV4dCIsInVzZUNvbnRleHQiLCJJbWFnZUNvbmZpZ0NvbnRleHQiLCJ1c2VNZW1vIiwiYyIsImltYWdlQ29uZmlnRGVmYXVsdCIsImltYWdlU2l6ZXMiLCJzb3J0IiwiYSIsImIiLCJpc0RlZmF1bHRMb2FkZXIiLCJFcnJvciIsImN1c3RvbUltYWdlTG9hZGVyIiwiX3RtcCIsIm9iaiIsIl8iLCJvcHRzIiwibGF5b3V0VG9TdHlsZSIsImludHJpbnNpYyIsIm1heFdpZHRoIiwicmVzcG9uc2l2ZSIsImxheW91dFRvU2l6ZXMiLCJsYXlvdXRTdHlsZSIsImxheW91dFNpemVzIiwic3RhdGljU3JjIiwiYmx1cldpZHRoIiwiYmx1ckhlaWdodCIsInN0YXRpY0ltYWdlRGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyYXRpbyIsInJvdW5kIiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiZGFuZ2Vyb3VzbHlBbGxvd1NWRyIsImJsdXJDb21wbGV0ZSIsInVzZVN0YXRlIiwic2hvd0FsdFRleHQiLCJpc05hTiIsIlZBTElEX0JMVVJfRVhUIiwidXJsU3RyIiwidXJsIiwiVVJMIiwiZXJyIiwicGF0aG5hbWUiLCJzZWFyY2giLCJsZWdhY3lLZXkiLCJsZWdhY3lWYWx1ZSIsImVudHJpZXMiLCJQZXJmb3JtYW5jZU9ic2VydmVyIiwiZW50cnlMaXN0IiwiZW50cnkiLCJnZXRFbnRyaWVzIiwiaW1nU3JjIiwiZWxlbWVudCIsImxjcEltYWdlIiwiZ2V0Iiwib2JzZXJ2ZSIsInR5cGUiLCJidWZmZXJlZCIsImxlZnQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImNvbG9yIiwiYmFja2dyb3VuZFNpemUiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJiYWNrZ3JvdW5kUmVwZWF0IiwiYmFja2dyb3VuZEltYWdlIiwiZ2V0SW1hZ2VCbHVyU3ZnIiwiZnVsbFVybCIsImUiLCJsb2NhdGlvbiIsImhyZWYiLCJzZXQiLCJsaW5rUHJvcHMiLCJpbWFnZVNyY1NldCIsImNyb3NzT3JpZ2luIiwidXNlUmVmIiwidXNlRWZmZWN0IiwiaW1nRWxlbWVudEFyZ3MiLCJrZXkiLCJyZWwiLCJhcyIsIl9kZWZhdWx0IiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/image.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _formatUrl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"./node_modules/next/dist/shared/lib/router-context.js\");\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"./node_modules/next/dist/shared/lib/app-router-context.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options) {\n    if (false) {}\n    if (!(0, _router).isLocalURL(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formatUrl).formatUrl(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _s(_react.default.forwardRef(_c = _s(function LinkComponent(props, forwardedRef) {\n    _s();\n    if (true) {\n        function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\".concat(args.key, \"` expects a \").concat(args.expected, \" in `<Link>`, but got `\").concat(args.actual, \"` instead.\") + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter: onMouseEnterProp , onTouchStart: onTouchStartProp , legacyBehavior =true === false  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const prefetchEnabled = prefetchProp !== false;\n    const pagesRouter = _react.default.useContext(_routerContext.RouterContext);\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(\"Dynamic href `\".concat(href, \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\"));\n                }\n            }\n        }\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `'.concat(hrefProp, '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link'));\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `'.concat(hrefProp, '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link'));\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(\"No children were passed to <Link> with `href` of `\".concat(hrefProp, \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"));\n                }\n                throw new Error(\"Multiple children were passed to <Link> with `href` of `\".concat(hrefProp, \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\") + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n            }\n        } else {}\n    } else {\n        if (true) {\n            var ref;\n            if (((ref = children) == null ? void 0 : ref.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        });\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getDomainLocale).getDomainLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n}, \"ann5/dOH/k5dvIvXTqfdyzq9F1A=\")), \"ann5/dOH/k5dvIvXTqfdyzq9F1A=\");\n_c1 = Link;\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Link$_react.default.forwardRef\");\n$RefreshReg$(_c1, \"Link\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUNhOztBQURiO0FBRUFBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRywyQkFBMkJDLG1KQUErRDtBQUM5RixJQUFJQyxtQ0FBbUNELG1LQUF1RTtBQUM5RyxJQUFJRSxTQUFTSCx5QkFBeUJDLG1CQUFPQSxDQUFDLDRDQUFPO0FBQ3JELElBQUlHLFVBQVVILG1CQUFPQSxDQUFDLHlGQUE2QjtBQUNuRCxJQUFJSSxhQUFhSixtQkFBT0EsQ0FBQyw2R0FBdUM7QUFDaEUsSUFBSUssYUFBYUwsbUJBQU9BLENBQUMsbUVBQWM7QUFDdkMsSUFBSU0saUJBQWlCTixtQkFBT0EsQ0FBQywyRkFBOEI7QUFDM0QsSUFBSU8sb0JBQW9CUCxtQkFBT0EsQ0FBQyxtR0FBa0M7QUFDbEUsSUFBSVEsbUJBQW1CUixtQkFBT0EsQ0FBQywrRUFBb0I7QUFDbkQsSUFBSVMsbUJBQW1CVCxtQkFBT0EsQ0FBQyxpRkFBcUI7QUFDcEQsSUFBSVUsZUFBZVYsbUJBQU9BLENBQUMseUVBQWlCO0FBRTVDLE1BQU1XLGFBQWEsSUFBSUM7QUFDdkIsU0FBU0MsU0FBU0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEVBQUUsRUFBRUMsT0FBTyxFQUFFO0lBQ3pDLElBQUksS0FBa0IsRUFBYSxFQUVsQztJQUNELElBQUksQ0FBQyxDQUFDLEdBQUdkLE9BQU8sRUFBRWUsVUFBVSxDQUFDSCxPQUFPO1FBQ2hDO0lBQ0osQ0FBQztJQUNELDRFQUE0RTtJQUM1RSxZQUFZO0lBQ1osSUFBSSxDQUFDRSxRQUFRRSxxQkFBcUIsRUFBRTtRQUNoQyxNQUFNQyxTQUNOLE9BQU9ILFFBQVFHLE1BQU0sS0FBSyxjQUFjSCxRQUFRRyxNQUFNLEdBQUcsWUFBWU4sU0FBU0EsT0FBT00sTUFBTSxHQUFHQyxTQUFTO1FBQ3ZHLE1BQU1DLGdCQUFnQlAsT0FBTyxNQUFNQyxLQUFLLE1BQU1JO1FBQzlDLGtFQUFrRTtRQUNsRSxJQUFJVCxXQUFXWSxHQUFHLENBQUNELGdCQUFnQjtZQUMvQjtRQUNKLENBQUM7UUFDRCwrQkFBK0I7UUFDL0JYLFdBQVdhLEdBQUcsQ0FBQ0Y7SUFDbkIsQ0FBQztJQUNELHVEQUF1RDtJQUN2RCwwREFBMEQ7SUFDMUQsc0RBQXNEO0lBQ3RELHlEQUF5RDtJQUN6REcsUUFBUUMsT0FBTyxDQUFDWixPQUFPRCxRQUFRLENBQUNFLE1BQU1DLElBQUlDLFVBQVVVLEtBQUssQ0FBQyxDQUFDQyxNQUFNO1FBQzdELElBQUlDLElBQXlCLEVBQWM7WUFDdkMscUNBQXFDO1lBQ3JDLE1BQU1ELElBQUk7UUFDZCxDQUFDO0lBQ0w7QUFDSjtBQUNBLFNBQVNFLGdCQUFnQkMsS0FBSyxFQUFFO0lBQzVCLE1BQU0sRUFBRUMsT0FBTSxFQUFHLEdBQUdELE1BQU1FLGFBQWE7SUFDdkMsT0FBT0QsVUFBVUEsV0FBVyxXQUFXRCxNQUFNRyxPQUFPLElBQUlILE1BQU1JLE9BQU8sSUFBSUosTUFBTUssUUFBUSxJQUFJTCxNQUFNTSxNQUFNLElBQUlOLE1BQU1PLFdBQVcsSUFBSVAsTUFBTU8sV0FBVyxDQUFDQyxLQUFLLEtBQUs7QUFDaEs7QUFDQSxTQUFTQyxZQUFZQyxDQUFDLEVBQUUzQixNQUFNLEVBQUVDLElBQUksRUFBRUMsRUFBRSxFQUFFMEIsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRXhCLE1BQU0sRUFBRXlCLFdBQVcsRUFBRUMsZUFBZSxFQUFFO0lBQ3RHLE1BQU0sRUFBRUMsU0FBUSxFQUFHLEdBQUdOLEVBQUVSLGFBQWE7SUFDckMsa0RBQWtEO0lBQ2xELE1BQU1lLG1CQUFtQkQsU0FBU0UsV0FBVyxPQUFPO0lBQ3BELElBQUlELG9CQUFxQmxCLENBQUFBLGdCQUFnQlcsTUFBTSxDQUFDLENBQUMsR0FBR3RDLE9BQU8sRUFBRWUsVUFBVSxDQUFDSCxLQUFJLEdBQUk7UUFDNUUsOENBQThDO1FBQzlDO0lBQ0osQ0FBQztJQUNEMEIsRUFBRVMsY0FBYztJQUNoQixNQUFNQyxXQUFXLElBQUk7UUFDakIsd0VBQXdFO1FBQ3hFLElBQUksb0JBQW9CckMsUUFBUTtZQUM1QkEsTUFBTSxDQUFDNEIsVUFBVSxZQUFZLE1BQU0sQ0FBQyxDQUFDM0IsTUFBTUMsSUFBSTtnQkFDM0MyQjtnQkFDQXZCO2dCQUNBd0I7WUFDSjtRQUNKLE9BQU87WUFDSDlCLE1BQU0sQ0FBQzRCLFVBQVUsWUFBWSxNQUFNLENBQUMsQ0FBQzFCLE1BQU1ELE1BQU07Z0JBQzdDcUMsMkJBQTJCLENBQUNOO1lBQ2hDO1FBQ0osQ0FBQztJQUNMO0lBQ0EsSUFBSUQsYUFBYTtRQUNiLDJDQUEyQztRQUMzQzNDLE9BQU9KLE9BQU8sQ0FBQ3VELGVBQWUsQ0FBQ0Y7SUFDbkMsT0FBTztRQUNIQTtJQUNKLENBQUM7QUFDTDtBQUNBLFNBQVNHLGtCQUFrQkMsY0FBYyxFQUFFO0lBQ3ZDLElBQUksT0FBT0EsbUJBQW1CLFVBQVU7UUFDcEMsT0FBT0E7SUFDWCxDQUFDO0lBQ0QsT0FBTyxDQUFDLEdBQUduRCxVQUFVLEVBQUVvRCxTQUFTLENBQUNEO0FBQ3JDO0FBQ0E7O0NBRUMsR0FBRyxNQUFNRSxPQUFPLFdBQVcsR0FBR3ZELEdBQUFBLE9BQU9KLE9BQU8sQ0FBQzRELFVBQVUsU0FBQyxTQUFTQyxjQUFjQyxLQUFLLEVBQUVDLFlBQVksRUFBRTs7SUFDakcsSUFBSWhDLElBQXlCLEVBQWM7UUFDdkMsU0FBU2lDLGdCQUFnQkMsSUFBSSxFQUFFO1lBQzNCLE9BQU8sSUFBSUMsTUFBTSwrQkFBd0RELE9BQXhCQSxLQUFLRSxHQUFHLEVBQUMsZ0JBQXlERixPQUExQ0EsS0FBS0csUUFBUSxFQUFDLDJCQUF3QyxPQUFaSCxLQUFLSSxNQUFNLEVBQUMsZ0JBQWdCLE1BQWtCLEdBQWMscUVBQXFFLENBQUU7UUFDMVA7UUFDQSxzQ0FBc0M7UUFDdEMsTUFBTUMscUJBQXFCO1lBQ3ZCckQsTUFBTSxJQUFJO1FBQ2Q7UUFDQSxNQUFNc0QsZ0JBQWdCM0UsT0FBTzRFLElBQUksQ0FBQ0Y7UUFDbENDLGNBQWNFLE9BQU8sQ0FBQyxDQUFDTixNQUFNO1lBQ3pCLElBQUlBLFFBQVEsUUFBUTtnQkFDaEIsSUFBSUwsS0FBSyxDQUFDSyxJQUFJLElBQUksSUFBSSxJQUFJLE9BQU9MLEtBQUssQ0FBQ0ssSUFBSSxLQUFLLFlBQVksT0FBT0wsS0FBSyxDQUFDSyxJQUFJLEtBQUssVUFBVTtvQkFDeEYsTUFBTUgsZ0JBQWdCO3dCQUNsQkc7d0JBQ0FDLFVBQVU7d0JBQ1ZDLFFBQVFQLEtBQUssQ0FBQ0ssSUFBSSxLQUFLLElBQUksR0FBRyxTQUFTLE9BQU9MLEtBQUssQ0FBQ0ssSUFBSTtvQkFDNUQsR0FBRztnQkFDUCxDQUFDO1lBQ0wsT0FBTztnQkFDSCxzQ0FBc0M7Z0JBQ3RDLDZEQUE2RDtnQkFDN0QsTUFBTU8sSUFBSVA7WUFDZCxDQUFDO1FBQ0w7UUFDQSxzQ0FBc0M7UUFDdEMsTUFBTVEscUJBQXFCO1lBQ3ZCekQsSUFBSSxJQUFJO1lBQ1IwQixTQUFTLElBQUk7WUFDYkUsUUFBUSxJQUFJO1lBQ1pELFNBQVMsSUFBSTtZQUNiK0IsVUFBVSxJQUFJO1lBQ2Q3RCxVQUFVLElBQUk7WUFDZE8sUUFBUSxJQUFJO1lBQ1p1RCxTQUFTLElBQUk7WUFDYkMsY0FBYyxJQUFJO1lBQ2xCQyxjQUFjLElBQUk7WUFDbEJDLGdCQUFnQixJQUFJO1FBQ3hCO1FBQ0EsTUFBTUMsZ0JBQWdCckYsT0FBTzRFLElBQUksQ0FBQ0c7UUFDbENNLGNBQWNSLE9BQU8sQ0FBQyxDQUFDTixNQUFNO1lBQ3pCLE1BQU1lLFVBQVUsT0FBT3BCLEtBQUssQ0FBQ0ssSUFBSTtZQUNqQyxJQUFJQSxRQUFRLE1BQU07Z0JBQ2QsSUFBSUwsS0FBSyxDQUFDSyxJQUFJLElBQUllLFlBQVksWUFBWUEsWUFBWSxVQUFVO29CQUM1RCxNQUFNbEIsZ0JBQWdCO3dCQUNsQkc7d0JBQ0FDLFVBQVU7d0JBQ1ZDLFFBQVFhO29CQUNaLEdBQUc7Z0JBQ1AsQ0FBQztZQUNMLE9BQU8sSUFBSWYsUUFBUSxVQUFVO2dCQUN6QixJQUFJTCxLQUFLLENBQUNLLElBQUksSUFBSWUsWUFBWSxVQUFVO29CQUNwQyxNQUFNbEIsZ0JBQWdCO3dCQUNsQkc7d0JBQ0FDLFVBQVU7d0JBQ1ZDLFFBQVFhO29CQUNaLEdBQUc7Z0JBQ1AsQ0FBQztZQUNMLE9BQU8sSUFBSWYsUUFBUSxhQUFhQSxRQUFRLGtCQUFrQkEsUUFBUSxnQkFBZ0I7Z0JBQzlFLElBQUlMLEtBQUssQ0FBQ0ssSUFBSSxJQUFJZSxZQUFZLFlBQVk7b0JBQ3RDLE1BQU1sQixnQkFBZ0I7d0JBQ2xCRzt3QkFDQUMsVUFBVTt3QkFDVkMsUUFBUWE7b0JBQ1osR0FBRztnQkFDUCxDQUFDO1lBQ0wsT0FBTyxJQUFJZixRQUFRLGFBQWFBLFFBQVEsWUFBWUEsUUFBUSxhQUFhQSxRQUFRLGNBQWNBLFFBQVEsY0FBY0EsUUFBUSxrQkFBa0I7Z0JBQzNJLElBQUlMLEtBQUssQ0FBQ0ssSUFBSSxJQUFJLElBQUksSUFBSWUsWUFBWSxXQUFXO29CQUM3QyxNQUFNbEIsZ0JBQWdCO3dCQUNsQkc7d0JBQ0FDLFVBQVU7d0JBQ1ZDLFFBQVFhO29CQUNaLEdBQUc7Z0JBQ1AsQ0FBQztZQUNMLE9BQU87Z0JBQ0gsc0NBQXNDO2dCQUN0Qyw2REFBNkQ7Z0JBQzdELE1BQU1SLElBQUlQO1lBQ2QsQ0FBQztRQUNMO1FBQ0EsNEZBQTRGO1FBQzVGLHNEQUFzRDtRQUN0RCxNQUFNZ0IsWUFBWS9FLE9BQU9KLE9BQU8sQ0FBQ29GLE1BQU0sQ0FBQyxLQUFLO1FBQzdDLElBQUl0QixNQUFNL0MsUUFBUSxJQUFJLENBQUNvRSxVQUFVRSxPQUFPLEVBQUU7WUFDdENGLFVBQVVFLE9BQU8sR0FBRyxJQUFJO1lBQ3hCQyxRQUFRQyxJQUFJLENBQUM7UUFDakIsQ0FBQztJQUNMLENBQUM7SUFDRCxJQUFJQztJQUNKLE1BQU0sRUFBRXZFLE1BQU13RSxTQUFRLEVBQUd2RSxJQUFJd0UsT0FBTSxFQUFHRixVQUFVRyxhQUFZLEVBQUc1RSxVQUFVNkUsYUFBWSxFQUFHaEIsU0FBUSxFQUFHaEMsUUFBTyxFQUFHQyxRQUFPLEVBQUdDLE9BQU0sRUFBR3hCLE9BQU0sRUFBR3VELFFBQU8sRUFBR0MsY0FBY2UsaUJBQWdCLEVBQUdkLGNBQWNlLGlCQUFnQixFQUNsTmQsZ0JBQWdCakQsSUFBb0MsS0FBSyxLQUFLLEdBQUcsR0FBRytCLE9BQU9tQyxZQUFZOUYsaUNBQWlDMkQsT0FBTztRQUMzSDtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNIO0lBQ0QwQixXQUFXRztJQUNYLElBQUlYLGtCQUFtQixRQUFPUSxhQUFhLFlBQVksT0FBT0EsYUFBYSxRQUFPLEdBQUk7UUFDbEZBLFdBQVcsV0FBVyxHQUFHcEYsT0FBT0osT0FBTyxDQUFDa0csYUFBYSxDQUFDLEtBQUssSUFBSSxFQUFFVjtJQUNyRSxDQUFDO0lBQ0QsTUFBTXhDLGtCQUFrQjRDLGlCQUFpQixLQUFLO0lBQzlDLE1BQU1PLGNBQWMvRixPQUFPSixPQUFPLENBQUNvRyxVQUFVLENBQUM1RixlQUFlNkYsYUFBYTtJQUMxRSxNQUFNQyxZQUFZbEcsT0FBT0osT0FBTyxDQUFDb0csVUFBVSxDQUFDM0Ysa0JBQWtCOEYsZ0JBQWdCO0lBQzlFLE1BQU12RixTQUFTbUYsZUFBZSxJQUFJLEdBQUdBLGNBQWNHLFNBQVM7SUFDNUQsMERBQTBEO0lBQzFELE1BQU12RCxjQUFjLENBQUNvRDtJQUNyQixJQUFJcEUsSUFBeUIsRUFBYztRQUN2QyxJQUFJZ0IsZUFBZSxDQUFDMkMsUUFBUTtZQUN4QixJQUFJekU7WUFDSixJQUFJLE9BQU93RSxhQUFhLFVBQVU7Z0JBQzlCeEUsT0FBT3dFO1lBQ1gsT0FBTyxJQUFJLE9BQU9BLGFBQWEsWUFBWSxPQUFPQSxTQUFTZSxRQUFRLEtBQUssVUFBVTtnQkFDOUV2RixPQUFPd0UsU0FBU2UsUUFBUTtZQUM1QixDQUFDO1lBQ0QsSUFBSXZGLE1BQU07Z0JBQ04sTUFBTXdGLG9CQUFvQnhGLEtBQUt5RixLQUFLLENBQUMsS0FBS0MsSUFBSSxDQUFDLENBQUNDLFVBQVVBLFFBQVFDLFVBQVUsQ0FBQyxRQUFRRCxRQUFRRSxRQUFRLENBQUM7Z0JBQ3RHLElBQUlMLG1CQUFtQjtvQkFDbkIsTUFBTSxJQUFJdkMsTUFBTSxpQkFBdUIsT0FBTGpELE1BQUssNklBQThJO2dCQUN6TCxDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDO0lBQ0QsTUFBTSxFQUFFQSxLQUFJLEVBQUdDLEdBQUUsRUFBRyxHQUFHZCxPQUFPSixPQUFPLENBQUMrRyxPQUFPLENBQUMsSUFBSTtRQUM5QyxJQUFJLENBQUNaLGFBQWE7WUFDZCxNQUFNYSxlQUFleEQsa0JBQWtCaUM7WUFDdkMsT0FBTztnQkFDSHhFLE1BQU0rRjtnQkFDTjlGLElBQUl3RSxTQUFTbEMsa0JBQWtCa0MsVUFBVXNCLFlBQVk7WUFDekQ7UUFDSixDQUFDO1FBQ0QsTUFBTSxDQUFDQSxjQUFjQyxXQUFXLEdBQUcsQ0FBQyxHQUFHNUcsT0FBTyxFQUFFNkcsV0FBVyxDQUFDZixhQUFhVixVQUFVLElBQUk7UUFDdkYsT0FBTztZQUNIeEUsTUFBTStGO1lBQ045RixJQUFJd0UsU0FBUyxDQUFDLEdBQUdyRixPQUFPLEVBQUU2RyxXQUFXLENBQUNmLGFBQWFULFVBQVV1QixjQUFjRCxZQUFZO1FBQzNGO0lBQ0osR0FBRztRQUNDYjtRQUNBVjtRQUNBQztLQUNIO0lBQ0QsTUFBTXlCLGVBQWUvRyxPQUFPSixPQUFPLENBQUNvRixNQUFNLENBQUNuRTtJQUMzQyxNQUFNbUcsYUFBYWhILE9BQU9KLE9BQU8sQ0FBQ29GLE1BQU0sQ0FBQ2xFO0lBQ3pDLG9GQUFvRjtJQUNwRixJQUFJbUc7SUFDSixJQUFJckMsZ0JBQWdCO1FBQ2hCLElBQUlqRCxJQUF5QixFQUFlO1lBQ3hDLElBQUk4QyxTQUFTO2dCQUNUUyxRQUFRQyxJQUFJLENBQUMsa0RBQThELE9BQVRFLFVBQVM7WUFDL0UsQ0FBQztZQUNELElBQUlJLGtCQUFrQjtnQkFDbEJQLFFBQVFDLElBQUksQ0FBQyx1REFBbUUsT0FBVEUsVUFBUztZQUNwRixDQUFDO1lBQ0QsSUFBSTtnQkFDQTRCLFFBQVFqSCxPQUFPSixPQUFPLENBQUNzSCxRQUFRLENBQUNDLElBQUksQ0FBQy9CO1lBQ3pDLEVBQUUsT0FBTzFELEtBQUs7Z0JBQ1YsSUFBSSxDQUFDMEQsVUFBVTtvQkFDWCxNQUFNLElBQUl0QixNQUFNLHFEQUFpRSxPQUFUdUIsVUFBUyxrRkFBaUY7Z0JBQ3RLLENBQUM7Z0JBQ0QsTUFBTSxJQUFJdkIsTUFBTSwyREFBdUUsT0FBVHVCLFVBQVMsK0ZBQStGLE1BQWtCLEdBQWMsc0VBQXNFLENBQUUsR0FBRztZQUNyUztRQUNKLE9BQU8sRUFFTjtJQUNMLE9BQU87UUFDSCxJQUFJMUQsSUFBeUIsRUFBZTtZQUN4QyxJQUFJeUY7WUFDSixJQUFJLENBQUMsQ0FBQ0EsTUFBTWhDLFFBQU8sS0FBTSxJQUFJLEdBQUcsS0FBSyxJQUFJZ0MsSUFBSUMsSUFBSSxNQUFNLEtBQUs7Z0JBQ3hELE1BQU0sSUFBSXZELE1BQU0sbUtBQW1LO1lBQ3ZMLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQztJQUNELE1BQU13RCxXQUFXMUMsaUJBQWlCcUMsU0FBUyxPQUFPQSxVQUFVLFlBQVlBLE1BQU1HLEdBQUcsR0FBR3pELFlBQVk7SUFDaEcsTUFBTSxDQUFDNEQsb0JBQW9CQyxXQUFXQyxhQUFhLEdBQUcsQ0FBQyxHQUFHbkgsZ0JBQWdCLEVBQUVvSCxlQUFlLENBQUM7UUFDeEZDLFlBQVk7SUFDaEI7SUFDQSxNQUFNQyxTQUFTNUgsT0FBT0osT0FBTyxDQUFDaUksV0FBVyxDQUFDLENBQUNDLEtBQUs7UUFDNUMsNEVBQTRFO1FBQzVFLElBQUlkLFdBQVcvQixPQUFPLEtBQUtuRSxNQUFNaUcsYUFBYTlCLE9BQU8sS0FBS3BFLE1BQU07WUFDNUQ0RztZQUNBVCxXQUFXL0IsT0FBTyxHQUFHbkU7WUFDckJpRyxhQUFhOUIsT0FBTyxHQUFHcEU7UUFDM0IsQ0FBQztRQUNEMEcsbUJBQW1CTztRQUNuQixJQUFJUixVQUFVO1lBQ1YsSUFBSSxPQUFPQSxhQUFhLFlBQVlBLFNBQVNRO2lCQUN4QyxJQUFJLE9BQU9SLGFBQWEsVUFBVTtnQkFDbkNBLFNBQVNyQyxPQUFPLEdBQUc2QztZQUN2QixDQUFDO1FBQ0wsQ0FBQztJQUNMLEdBQUc7UUFDQ2hIO1FBQ0F3RztRQUNBekc7UUFDQTRHO1FBQ0FGO0tBQ0g7SUFDRCwyREFBMkQ7SUFDM0R2SCxPQUFPSixPQUFPLENBQUNtSSxTQUFTLENBQUMsSUFBSTtRQUN6QixnSEFBZ0g7UUFDaEgsSUFBSXBHLElBQXlCLEVBQWM7WUFDdkM7UUFDSixDQUFDO1FBQ0QsSUFBSSxDQUFDZixRQUFRO1lBQ1Q7UUFDSixDQUFDO1FBQ0QsMkRBQTJEO1FBQzNELElBQUksQ0FBQzRHLGFBQWEsQ0FBQzVFLGlCQUFpQjtZQUNoQztRQUNKLENBQUM7UUFDRCxvQkFBb0I7UUFDcEJqQyxTQUFTQyxRQUFRQyxNQUFNQyxJQUFJO1lBQ3ZCSTtRQUNKO0lBQ0osR0FBRztRQUNDSjtRQUNBRDtRQUNBMkc7UUFDQXRHO1FBQ0EwQjtRQUNBbUQsZUFBZSxJQUFJLEdBQUcsS0FBSyxJQUFJQSxZQUFZN0UsTUFBTTtRQUNqRE47S0FDSDtJQUNELE1BQU1vSCxhQUFhO1FBQ2ZaLEtBQUtRO1FBQ0xuRCxTQUFTbEMsQ0FBQyxFQUFFO1lBQ1IsSUFBSVosSUFBeUIsRUFBYztnQkFDdkMsSUFBSSxDQUFDWSxHQUFHO29CQUNKLE1BQU0sSUFBSXVCLE1BQU8sa0ZBQWlGO2dCQUN0RyxDQUFDO1lBQ0wsQ0FBQztZQUNELElBQUksQ0FBQ2Msa0JBQWtCLE9BQU9ILFlBQVksWUFBWTtnQkFDbERBLFFBQVFsQztZQUNaLENBQUM7WUFDRCxJQUFJcUMsa0JBQWtCcUMsTUFBTXZELEtBQUssSUFBSSxPQUFPdUQsTUFBTXZELEtBQUssQ0FBQ2UsT0FBTyxLQUFLLFlBQVk7Z0JBQzVFd0MsTUFBTXZELEtBQUssQ0FBQ2UsT0FBTyxDQUFDbEM7WUFDeEIsQ0FBQztZQUNELElBQUksQ0FBQzNCLFFBQVE7Z0JBQ1Q7WUFDSixDQUFDO1lBQ0QsSUFBSTJCLEVBQUUwRixnQkFBZ0IsRUFBRTtnQkFDcEI7WUFDSixDQUFDO1lBQ0QzRixZQUFZQyxHQUFHM0IsUUFBUUMsTUFBTUMsSUFBSTBCLFNBQVNDLFNBQVNDLFFBQVF4QixRQUFReUIsYUFBYUM7UUFDcEY7UUFDQThCLGNBQWNuQyxDQUFDLEVBQUU7WUFDYixJQUFJLENBQUNxQyxrQkFBa0IsT0FBT2EscUJBQXFCLFlBQVk7Z0JBQzNEQSxpQkFBaUJsRDtZQUNyQixDQUFDO1lBQ0QsSUFBSXFDLGtCQUFrQnFDLE1BQU12RCxLQUFLLElBQUksT0FBT3VELE1BQU12RCxLQUFLLENBQUNnQixZQUFZLEtBQUssWUFBWTtnQkFDakZ1QyxNQUFNdkQsS0FBSyxDQUFDZ0IsWUFBWSxDQUFDbkM7WUFDN0IsQ0FBQztZQUNELElBQUksQ0FBQzNCLFFBQVE7Z0JBQ1Q7WUFDSixDQUFDO1lBQ0QsSUFBSSxDQUFDZ0MsbUJBQW1CRCxhQUFhO2dCQUNqQztZQUNKLENBQUM7WUFDRGhDLFNBQVNDLFFBQVFDLE1BQU1DLElBQUk7Z0JBQ3ZCSTtnQkFDQWdILFVBQVUsSUFBSTtnQkFDZCxnR0FBZ0c7Z0JBQ2hHakgsdUJBQXVCLElBQUk7WUFDL0I7UUFDSjtRQUNBMEQsY0FBY3BDLENBQUMsRUFBRTtZQUNiLElBQUksQ0FBQ3FDLGtCQUFrQixPQUFPYyxxQkFBcUIsWUFBWTtnQkFDM0RBLGlCQUFpQm5EO1lBQ3JCLENBQUM7WUFDRCxJQUFJcUMsa0JBQWtCcUMsTUFBTXZELEtBQUssSUFBSSxPQUFPdUQsTUFBTXZELEtBQUssQ0FBQ2lCLFlBQVksS0FBSyxZQUFZO2dCQUNqRnNDLE1BQU12RCxLQUFLLENBQUNpQixZQUFZLENBQUNwQztZQUM3QixDQUFDO1lBQ0QsSUFBSSxDQUFDM0IsUUFBUTtnQkFDVDtZQUNKLENBQUM7WUFDRCxJQUFJLENBQUNnQyxtQkFBbUJELGFBQWE7Z0JBQ2pDO1lBQ0osQ0FBQztZQUNEaEMsU0FBU0MsUUFBUUMsTUFBTUMsSUFBSTtnQkFDdkJJO2dCQUNBZ0gsVUFBVSxJQUFJO2dCQUNkLGdHQUFnRztnQkFDaEdqSCx1QkFBdUIsSUFBSTtZQUMvQjtRQUNKO0lBQ0o7SUFDQSw2RkFBNkY7SUFDN0YsdUZBQXVGO0lBQ3ZGLElBQUksQ0FBQzJELGtCQUFrQkosWUFBWXlDLE1BQU1JLElBQUksS0FBSyxPQUFPLENBQUUsV0FBVUosTUFBTXZELEtBQUssR0FBRztRQUMvRSxNQUFNeUUsWUFBWSxPQUFPakgsV0FBVyxjQUFjQSxTQUFTNkUsZUFBZSxJQUFJLEdBQUcsS0FBSyxJQUFJQSxZQUFZN0UsTUFBTTtRQUM1Ryx1RUFBdUU7UUFDdkUsdUVBQXVFO1FBQ3ZFLE1BQU1rSCxlQUFlLENBQUNyQyxlQUFlLElBQUksR0FBRyxLQUFLLElBQUlBLFlBQVlzQyxjQUFjLEtBQUssQ0FBQyxHQUFHOUgsZ0JBQWdCLEVBQUUrSCxlQUFlLENBQUN4SCxJQUFJcUgsV0FBV3BDLGVBQWUsSUFBSSxHQUFHLEtBQUssSUFBSUEsWUFBWXdDLE9BQU8sRUFBRXhDLGVBQWUsSUFBSSxHQUFHLEtBQUssSUFBSUEsWUFBWXlDLGFBQWE7UUFDclBSLFdBQVduSCxJQUFJLEdBQUd1SCxnQkFBZ0IsQ0FBQyxHQUFHNUgsWUFBWSxFQUFFaUksV0FBVyxDQUFDLENBQUMsR0FBR3RJLFVBQVUsRUFBRXVJLFNBQVMsQ0FBQzVILElBQUlxSCxXQUFXcEMsZUFBZSxJQUFJLEdBQUcsS0FBSyxJQUFJQSxZQUFZNEMsYUFBYTtJQUNySyxDQUFDO0lBQ0QsT0FBTy9ELGlCQUFpQixXQUFXLEdBQUc1RSxPQUFPSixPQUFPLENBQUNnSixZQUFZLENBQUMzQixPQUFPZSxjQUFjLFdBQVcsR0FBR2hJLE9BQU9KLE9BQU8sQ0FBQ2tHLGFBQWEsQ0FBQyxLQUFLdEcsT0FBT3FKLE1BQU0sQ0FBQyxDQUFDLEdBQUdoRCxXQUFXbUMsYUFBYTVDLFNBQVM7QUFDOUw7O0FBQ0EsSUFBSTBELFdBQVd2RjtBQUNmN0Qsa0JBQWUsR0FBR29KO0FBRWxCLElBQUksQ0FBQyxPQUFPcEosUUFBUUUsT0FBTyxLQUFLLGNBQWUsT0FBT0YsUUFBUUUsT0FBTyxLQUFLLFlBQVlGLFFBQVFFLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT0YsUUFBUUUsT0FBTyxDQUFDbUosVUFBVSxLQUFLLGFBQWE7SUFDckt2SixPQUFPQyxjQUFjLENBQUNDLFFBQVFFLE9BQU8sRUFBRSxjQUFjO1FBQUVELE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPcUosTUFBTSxDQUFDbkosUUFBUUUsT0FBTyxFQUFFRjtJQUMvQnNKLE9BQU90SixPQUFPLEdBQUdBLFFBQVFFLE9BQU87QUFDbEMsQ0FBQyxDQUVELGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzP2U0ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanNcIikuZGVmYXVsdDtcbnZhciBfb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZSA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlLmpzXCIpLmRlZmF1bHQ7XG52YXIgX3JlYWN0ID0gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX3JvdXRlciA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci9yb3V0ZXJcIik7XG52YXIgX2Zvcm1hdFVybCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9mb3JtYXQtdXJsXCIpO1xudmFyIF9hZGRMb2NhbGUgPSByZXF1aXJlKFwiLi9hZGQtbG9jYWxlXCIpO1xudmFyIF9yb3V0ZXJDb250ZXh0ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHRcIik7XG52YXIgX2FwcFJvdXRlckNvbnRleHQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHRcIik7XG52YXIgX3VzZUludGVyc2VjdGlvbiA9IHJlcXVpcmUoXCIuL3VzZS1pbnRlcnNlY3Rpb25cIik7XG52YXIgX2dldERvbWFpbkxvY2FsZSA9IHJlcXVpcmUoXCIuL2dldC1kb21haW4tbG9jYWxlXCIpO1xudmFyIF9hZGRCYXNlUGF0aCA9IHJlcXVpcmUoXCIuL2FkZC1iYXNlLXBhdGhcIik7XG5cbmNvbnN0IHByZWZldGNoZWQgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCEoMCwgX3JvdXRlcikuaXNMb2NhbFVSTChocmVmKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIFdlIHNob3VsZCBvbmx5IGRlZHVwZSByZXF1ZXN0cyB3aGVuIGV4cGVyaW1lbnRhbC5vcHRpbWlzdGljQ2xpZW50Q2FjaGUgaXNcbiAgICAvLyBkaXNhYmxlZC5cbiAgICBpZiAoIW9wdGlvbnMuYnlwYXNzUHJlZmV0Y2hlZENoZWNrKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsZSA9IC8vIExldCB0aGUgbGluaydzIGxvY2FsZSBwcm9wIG92ZXJyaWRlIHRoZSBkZWZhdWx0IHJvdXRlciBsb2NhbGUuXG4gICAgICAgIHR5cGVvZiBvcHRpb25zLmxvY2FsZSAhPT0gJ3VuZGVmaW5lZCcgPyBvcHRpb25zLmxvY2FsZSA6ICdsb2NhbGUnIGluIHJvdXRlciA/IHJvdXRlci5sb2NhbGUgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHByZWZldGNoZWRLZXkgPSBocmVmICsgJyUnICsgYXMgKyAnJScgKyBsb2NhbGU7XG4gICAgICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgZmV0Y2hlZCB0aGUga2V5LCB0aGVuIGRvbid0IHByZWZldGNoIGl0IGFnYWluIVxuICAgICAgICBpZiAocHJlZmV0Y2hlZC5oYXMocHJlZmV0Y2hlZEtleSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBNYXJrIHRoaXMgVVJMIGFzIHByZWZldGNoZWQuXG4gICAgICAgIHByZWZldGNoZWQuYWRkKHByZWZldGNoZWRLZXkpO1xuICAgIH1cbiAgICAvLyBQcmVmZXRjaCB0aGUgSlNPTiBwYWdlIGlmIGFza2VkIChvbmx5IGluIHRoZSBjbGllbnQpXG4gICAgLy8gV2UgbmVlZCB0byBoYW5kbGUgYSBwcmVmZXRjaCBlcnJvciBoZXJlIHNpbmNlIHdlIG1heSBiZVxuICAgIC8vIGxvYWRpbmcgd2l0aCBwcmlvcml0eSB3aGljaCBjYW4gcmVqZWN0IGJ1dCB3ZSBkb24ndFxuICAgIC8vIHdhbnQgdG8gZm9yY2UgbmF2aWdhdGlvbiBzaW5jZSB0aGlzIGlzIG9ubHkgYSBwcmVmZXRjaFxuICAgIFByb21pc2UucmVzb2x2ZShyb3V0ZXIucHJlZmV0Y2goaHJlZiwgYXMsIG9wdGlvbnMpKS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgLy8gcmV0aHJvdyB0byBzaG93IGludmFsaWQgVVJMIGVycm9yc1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgICBjb25zdCB7IHRhcmdldCAgfSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgcmV0dXJuIHRhcmdldCAmJiB0YXJnZXQgIT09ICdfc2VsZicgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5uYXRpdmVFdmVudCAmJiBldmVudC5uYXRpdmVFdmVudC53aGljaCA9PT0gMjtcbn1cbmZ1bmN0aW9uIGxpbmtDbGlja2VkKGUsIHJvdXRlciwgaHJlZiwgYXMsIHJlcGxhY2UsIHNoYWxsb3csIHNjcm9sbCwgbG9jYWxlLCBpc0FwcFJvdXRlciwgcHJlZmV0Y2hFbmFibGVkKSB7XG4gICAgY29uc3QgeyBub2RlTmFtZSAgfSA9IGUuY3VycmVudFRhcmdldDtcbiAgICAvLyBhbmNob3JzIGluc2lkZSBhbiBzdmcgaGF2ZSBhIGxvd2VyY2FzZSBub2RlTmFtZVxuICAgIGNvbnN0IGlzQW5jaG9yTm9kZU5hbWUgPSBub2RlTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnQSc7XG4gICAgaWYgKGlzQW5jaG9yTm9kZU5hbWUgJiYgKGlzTW9kaWZpZWRFdmVudChlKSB8fCAhKDAsIF9yb3V0ZXIpLmlzTG9jYWxVUkwoaHJlZikpKSB7XG4gICAgICAgIC8vIGlnbm9yZSBjbGljayBmb3IgYnJvd3NlcuKAmXMgZGVmYXVsdCBiZWhhdmlvclxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBuYXZpZ2F0ZSA9ICgpPT57XG4gICAgICAgIC8vIElmIHRoZSByb3V0ZXIgaXMgYW4gTmV4dFJvdXRlciBpbnN0YW5jZSBpdCB3aWxsIGhhdmUgYGJlZm9yZVBvcFN0YXRlYFxuICAgICAgICBpZiAoJ2JlZm9yZVBvcFN0YXRlJyBpbiByb3V0ZXIpIHtcbiAgICAgICAgICAgIHJvdXRlcltyZXBsYWNlID8gJ3JlcGxhY2UnIDogJ3B1c2gnXShocmVmLCBhcywge1xuICAgICAgICAgICAgICAgIHNoYWxsb3csXG4gICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgIHNjcm9sbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByb3V0ZXJbcmVwbGFjZSA/ICdyZXBsYWNlJyA6ICdwdXNoJ10oYXMgfHwgaHJlZiwge1xuICAgICAgICAgICAgICAgIGZvcmNlT3B0aW1pc3RpY05hdmlnYXRpb246ICFwcmVmZXRjaEVuYWJsZWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAoaXNBcHBSb3V0ZXIpIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBzdGFydFRyYW5zaXRpb24gZXhpc3RzLlxuICAgICAgICBfcmVhY3QuZGVmYXVsdC5zdGFydFRyYW5zaXRpb24obmF2aWdhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG5hdmlnYXRlKCk7XG4gICAgfVxufVxuZnVuY3Rpb24gZm9ybWF0U3RyaW5nT3JVcmwodXJsT2JqT3JTdHJpbmcpIHtcbiAgICBpZiAodHlwZW9mIHVybE9iak9yU3RyaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdXJsT2JqT3JTdHJpbmc7XG4gICAgfVxuICAgIHJldHVybiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0VXJsKHVybE9iak9yU3RyaW5nKTtcbn1cbi8qKlxuICogUmVhY3QgQ29tcG9uZW50IHRoYXQgZW5hYmxlcyBjbGllbnQtc2lkZSB0cmFuc2l0aW9ucyBiZXR3ZWVuIHJvdXRlcy5cbiAqLyBjb25zdCBMaW5rID0gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIExpbmtDb21wb25lbnQocHJvcHMsIGZvcndhcmRlZFJlZikge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVByb3BFcnJvcihhcmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKGBGYWlsZWQgcHJvcCB0eXBlOiBUaGUgcHJvcCBcXGAke2FyZ3Mua2V5fVxcYCBleHBlY3RzIGEgJHthcmdzLmV4cGVjdGVkfSBpbiBcXGA8TGluaz5cXGAsIGJ1dCBnb3QgXFxgJHthcmdzLmFjdHVhbH1cXGAgaW5zdGVhZC5gICsgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gXCJcXG5PcGVuIHlvdXIgYnJvd3NlcidzIGNvbnNvbGUgdG8gdmlldyB0aGUgQ29tcG9uZW50IHN0YWNrIHRyYWNlLlwiIDogJycpKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICBjb25zdCByZXF1aXJlZFByb3BzR3VhcmQgPSB7XG4gICAgICAgICAgICBocmVmOiB0cnVlXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkUHJvcHMgPSBPYmplY3Qua2V5cyhyZXF1aXJlZFByb3BzR3VhcmQpO1xuICAgICAgICByZXF1aXJlZFByb3BzLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICdocmVmJykge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wc1trZXldID09IG51bGwgfHwgdHlwZW9mIHByb3BzW2tleV0gIT09ICdzdHJpbmcnICYmIHR5cGVvZiBwcm9wc1trZXldICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6ICdgc3RyaW5nYCBvciBgb2JqZWN0YCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHByb3BzW2tleV0gPT09IG51bGwgPyAnbnVsbCcgOiB0eXBlb2YgcHJvcHNba2V5XVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICAgICAgICAgIGNvbnN0IF8gPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzR3VhcmQgPSB7XG4gICAgICAgICAgICBhczogdHJ1ZSxcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgICAgICBzY3JvbGw6IHRydWUsXG4gICAgICAgICAgICBzaGFsbG93OiB0cnVlLFxuICAgICAgICAgICAgcGFzc0hyZWY6IHRydWUsXG4gICAgICAgICAgICBwcmVmZXRjaDogdHJ1ZSxcbiAgICAgICAgICAgIGxvY2FsZTogdHJ1ZSxcbiAgICAgICAgICAgIG9uQ2xpY2s6IHRydWUsXG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI6IHRydWUsXG4gICAgICAgICAgICBvblRvdWNoU3RhcnQ6IHRydWUsXG4gICAgICAgICAgICBsZWdhY3lCZWhhdmlvcjogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzID0gT2JqZWN0LmtleXMob3B0aW9uYWxQcm9wc0d1YXJkKTtcbiAgICAgICAgb3B0aW9uYWxQcm9wcy5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgICAgICBjb25zdCB2YWxUeXBlID0gdHlwZW9mIHByb3BzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnYXMnKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gJiYgdmFsVHlwZSAhPT0gJ3N0cmluZycgJiYgdmFsVHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiAnYHN0cmluZ2Agb3IgYG9iamVjdGAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiB2YWxUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnbG9jYWxlJykge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wc1trZXldICYmIHZhbFR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogJ2BzdHJpbmdgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogdmFsVHlwZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ29uQ2xpY2snIHx8IGtleSA9PT0gJ29uTW91c2VFbnRlcicgfHwga2V5ID09PSAnb25Ub3VjaFN0YXJ0Jykge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wc1trZXldICYmIHZhbFR5cGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiAnYGZ1bmN0aW9uYCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdyZXBsYWNlJyB8fCBrZXkgPT09ICdzY3JvbGwnIHx8IGtleSA9PT0gJ3NoYWxsb3cnIHx8IGtleSA9PT0gJ3Bhc3NIcmVmJyB8fCBrZXkgPT09ICdwcmVmZXRjaCcgfHwga2V5ID09PSAnbGVnYWN5QmVoYXZpb3InKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gIT0gbnVsbCAmJiB2YWxUeXBlICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiAnYGJvb2xlYW5gJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogdmFsVHlwZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICAgICAgICAgIGNvbnN0IF8gPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBUaGlzIGhvb2sgaXMgaW4gYSBjb25kaXRpb25hbCBidXQgdGhhdCBpcyBvayBiZWNhdXNlIGBwcm9jZXNzLmVudi5OT0RFX0VOVmAgbmV2ZXIgY2hhbmdlc1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICAgICAgY29uc3QgaGFzV2FybmVkID0gX3JlYWN0LmRlZmF1bHQudXNlUmVmKGZhbHNlKTtcbiAgICAgICAgaWYgKHByb3BzLnByZWZldGNoICYmICFoYXNXYXJuZWQuY3VycmVudCkge1xuICAgICAgICAgICAgaGFzV2FybmVkLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdOZXh0LmpzIGF1dG8tcHJlZmV0Y2hlcyBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIHZpZXdwb3J0LiBUaGUgcHJlZmV0Y2ggYXR0cmlidXRlIGlzIG5vIGxvbmdlciBuZWVkZWQuIE1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3ByZWZldGNoLXRydWUtZGVwcmVjYXRlZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBjaGlsZHJlbjtcbiAgICBjb25zdCB7IGhyZWY6IGhyZWZQcm9wICwgYXM6IGFzUHJvcCAsIGNoaWxkcmVuOiBjaGlsZHJlblByb3AgLCBwcmVmZXRjaDogcHJlZmV0Y2hQcm9wICwgcGFzc0hyZWYgLCByZXBsYWNlICwgc2hhbGxvdyAsIHNjcm9sbCAsIGxvY2FsZSAsIG9uQ2xpY2sgLCBvbk1vdXNlRW50ZXI6IG9uTW91c2VFbnRlclByb3AgLCBvblRvdWNoU3RhcnQ6IG9uVG91Y2hTdGFydFByb3AgLCAvLyBAdHMtZXhwZWN0LWVycm9yIHRoaXMgaXMgaW5saW5lZCBhcyBhIGxpdGVyYWwgYm9vbGVhbiBub3QgYSBzdHJpbmdcbiAgICBsZWdhY3lCZWhhdmlvciA9cHJvY2Vzcy5lbnYuX19ORVhUX05FV19MSU5LX0JFSEFWSU9SID09PSBmYWxzZSAgfSA9IHByb3BzLCByZXN0UHJvcHMgPSBfb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZShwcm9wcywgW1xuICAgICAgICBcImhyZWZcIixcbiAgICAgICAgXCJhc1wiLFxuICAgICAgICBcImNoaWxkcmVuXCIsXG4gICAgICAgIFwicHJlZmV0Y2hcIixcbiAgICAgICAgXCJwYXNzSHJlZlwiLFxuICAgICAgICBcInJlcGxhY2VcIixcbiAgICAgICAgXCJzaGFsbG93XCIsXG4gICAgICAgIFwic2Nyb2xsXCIsXG4gICAgICAgIFwibG9jYWxlXCIsXG4gICAgICAgIFwib25DbGlja1wiLFxuICAgICAgICBcIm9uTW91c2VFbnRlclwiLFxuICAgICAgICBcIm9uVG91Y2hTdGFydFwiLFxuICAgICAgICBcImxlZ2FjeUJlaGF2aW9yXCJcbiAgICBdKTtcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuUHJvcDtcbiAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGNoaWxkcmVuID09PSAnbnVtYmVyJykpIHtcbiAgICAgICAgY2hpbGRyZW4gPSAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIG51bGwsIGNoaWxkcmVuKTtcbiAgICB9XG4gICAgY29uc3QgcHJlZmV0Y2hFbmFibGVkID0gcHJlZmV0Y2hQcm9wICE9PSBmYWxzZTtcbiAgICBjb25zdCBwYWdlc1JvdXRlciA9IF9yZWFjdC5kZWZhdWx0LnVzZUNvbnRleHQoX3JvdXRlckNvbnRleHQuUm91dGVyQ29udGV4dCk7XG4gICAgY29uc3QgYXBwUm91dGVyID0gX3JlYWN0LmRlZmF1bHQudXNlQ29udGV4dChfYXBwUm91dGVyQ29udGV4dC5BcHBSb3V0ZXJDb250ZXh0KTtcbiAgICBjb25zdCByb3V0ZXIgPSBwYWdlc1JvdXRlciAhPSBudWxsID8gcGFnZXNSb3V0ZXIgOiBhcHBSb3V0ZXI7XG4gICAgLy8gV2UncmUgaW4gdGhlIGFwcCBkaXJlY3RvcnkgaWYgdGhlcmUgaXMgbm8gcGFnZXMgcm91dGVyLlxuICAgIGNvbnN0IGlzQXBwUm91dGVyID0gIXBhZ2VzUm91dGVyO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmIChpc0FwcFJvdXRlciAmJiAhYXNQcm9wKSB7XG4gICAgICAgICAgICBsZXQgaHJlZjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaHJlZlByb3AgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgaHJlZiA9IGhyZWZQcm9wO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaHJlZlByb3AgPT09ICdvYmplY3QnICYmIHR5cGVvZiBocmVmUHJvcC5wYXRobmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBocmVmID0gaHJlZlByb3AucGF0aG5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaHJlZikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc0R5bmFtaWNTZWdtZW50ID0gaHJlZi5zcGxpdCgnLycpLnNvbWUoKHNlZ21lbnQpPT5zZWdtZW50LnN0YXJ0c1dpdGgoJ1snKSAmJiBzZWdtZW50LmVuZHNXaXRoKCddJykpO1xuICAgICAgICAgICAgICAgIGlmIChoYXNEeW5hbWljU2VnbWVudCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYER5bmFtaWMgaHJlZiBcXGAke2hyZWZ9XFxgIGZvdW5kIGluIDxMaW5rPiB3aGlsZSB1c2luZyB0aGUgXFxgL2FwcFxcYCByb3V0ZXIsIHRoaXMgaXMgbm90IHN1cHBvcnRlZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9hcHAtZGlyLWR5bmFtaWMtaHJlZmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB7IGhyZWYgLCBhcyAgfSA9IF9yZWFjdC5kZWZhdWx0LnVzZU1lbW8oKCk9PntcbiAgICAgICAgaWYgKCFwYWdlc1JvdXRlcikge1xuICAgICAgICAgICAgY29uc3QgcmVzb2x2ZWRIcmVmID0gZm9ybWF0U3RyaW5nT3JVcmwoaHJlZlByb3ApO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBocmVmOiByZXNvbHZlZEhyZWYsXG4gICAgICAgICAgICAgICAgYXM6IGFzUHJvcCA/IGZvcm1hdFN0cmluZ09yVXJsKGFzUHJvcCkgOiByZXNvbHZlZEhyZWZcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW3Jlc29sdmVkSHJlZiwgcmVzb2x2ZWRBc10gPSAoMCwgX3JvdXRlcikucmVzb2x2ZUhyZWYocGFnZXNSb3V0ZXIsIGhyZWZQcm9wLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhyZWY6IHJlc29sdmVkSHJlZixcbiAgICAgICAgICAgIGFzOiBhc1Byb3AgPyAoMCwgX3JvdXRlcikucmVzb2x2ZUhyZWYocGFnZXNSb3V0ZXIsIGFzUHJvcCkgOiByZXNvbHZlZEFzIHx8IHJlc29sdmVkSHJlZlxuICAgICAgICB9O1xuICAgIH0sIFtcbiAgICAgICAgcGFnZXNSb3V0ZXIsXG4gICAgICAgIGhyZWZQcm9wLFxuICAgICAgICBhc1Byb3BcbiAgICBdKTtcbiAgICBjb25zdCBwcmV2aW91c0hyZWYgPSBfcmVhY3QuZGVmYXVsdC51c2VSZWYoaHJlZik7XG4gICAgY29uc3QgcHJldmlvdXNBcyA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihhcyk7XG4gICAgLy8gVGhpcyB3aWxsIHJldHVybiB0aGUgZmlyc3QgY2hpbGQsIGlmIG11bHRpcGxlIGFyZSBwcm92aWRlZCBpdCB3aWxsIHRocm93IGFuIGVycm9yXG4gICAgbGV0IGNoaWxkO1xuICAgIGlmIChsZWdhY3lCZWhhdmlvcikge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgIGlmIChvbkNsaWNrKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBcIm9uQ2xpY2tcIiB3YXMgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIFxcYGhyZWZcXGAgb2YgXFxgJHtocmVmUHJvcH1cXGAgYnV0IFwibGVnYWN5QmVoYXZpb3JcIiB3YXMgc2V0LiBUaGUgbGVnYWN5IGJlaGF2aW9yIHJlcXVpcmVzIG9uQ2xpY2sgYmUgc2V0IG9uIHRoZSBjaGlsZCBvZiBuZXh0L2xpbmtgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvbk1vdXNlRW50ZXJQcm9wKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBcIm9uTW91c2VFbnRlclwiIHdhcyBwYXNzZWQgdG8gPExpbms+IHdpdGggXFxgaHJlZlxcYCBvZiBcXGAke2hyZWZQcm9wfVxcYCBidXQgXCJsZWdhY3lCZWhhdmlvclwiIHdhcyBzZXQuIFRoZSBsZWdhY3kgYmVoYXZpb3IgcmVxdWlyZXMgb25Nb3VzZUVudGVyIGJlIHNldCBvbiB0aGUgY2hpbGQgb2YgbmV4dC9saW5rYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gY2hpbGRyZW4gd2VyZSBwYXNzZWQgdG8gPExpbms+IHdpdGggXFxgaHJlZlxcYCBvZiBcXGAke2hyZWZQcm9wfVxcYCBidXQgb25lIGNoaWxkIGlzIHJlcXVpcmVkIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2xpbmstbm8tY2hpbGRyZW5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBsZSBjaGlsZHJlbiB3ZXJlIHBhc3NlZCB0byA8TGluaz4gd2l0aCBcXGBocmVmXFxgIG9mIFxcYCR7aHJlZlByb3B9XFxgIGJ1dCBvbmx5IG9uZSBjaGlsZCBpcyBzdXBwb3J0ZWQgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbGluay1tdWx0aXBsZS1jaGlsZHJlbmAgKyAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyBcIiBcXG5PcGVuIHlvdXIgYnJvd3NlcidzIGNvbnNvbGUgdG8gdmlldyB0aGUgQ29tcG9uZW50IHN0YWNrIHRyYWNlLlwiIDogJycpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNoaWxkID0gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgIHZhciByZWY7XG4gICAgICAgICAgICBpZiAoKChyZWYgPSBjaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi50eXBlKSA9PT0gJ2EnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIDxMaW5rPiB3aXRoIDxhPiBjaGlsZC4gUGxlYXNlIHJlbW92ZSA8YT4gb3IgdXNlIDxMaW5rIGxlZ2FjeUJlaGF2aW9yPi5cXG5MZWFybiBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLW5ldy1saW5rLXdpdGgtZXh0cmEtYW5jaG9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgY2hpbGRSZWYgPSBsZWdhY3lCZWhhdmlvciA/IGNoaWxkICYmIHR5cGVvZiBjaGlsZCA9PT0gJ29iamVjdCcgJiYgY2hpbGQucmVmIDogZm9yd2FyZGVkUmVmO1xuICAgIGNvbnN0IFtzZXRJbnRlcnNlY3Rpb25SZWYsIGlzVmlzaWJsZSwgcmVzZXRWaXNpYmxlXSA9ICgwLCBfdXNlSW50ZXJzZWN0aW9uKS51c2VJbnRlcnNlY3Rpb24oe1xuICAgICAgICByb290TWFyZ2luOiAnMjAwcHgnXG4gICAgfSk7XG4gICAgY29uc3Qgc2V0UmVmID0gX3JlYWN0LmRlZmF1bHQudXNlQ2FsbGJhY2soKGVsKT0+e1xuICAgICAgICAvLyBCZWZvcmUgdGhlIGxpbmsgZ2V0dGluZyBvYnNlcnZlZCwgY2hlY2sgaWYgdmlzaWJsZSBzdGF0ZSBuZWVkIHRvIGJlIHJlc2V0XG4gICAgICAgIGlmIChwcmV2aW91c0FzLmN1cnJlbnQgIT09IGFzIHx8IHByZXZpb3VzSHJlZi5jdXJyZW50ICE9PSBocmVmKSB7XG4gICAgICAgICAgICByZXNldFZpc2libGUoKTtcbiAgICAgICAgICAgIHByZXZpb3VzQXMuY3VycmVudCA9IGFzO1xuICAgICAgICAgICAgcHJldmlvdXNIcmVmLmN1cnJlbnQgPSBocmVmO1xuICAgICAgICB9XG4gICAgICAgIHNldEludGVyc2VjdGlvblJlZihlbCk7XG4gICAgICAgIGlmIChjaGlsZFJlZikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZFJlZiA9PT0gJ2Z1bmN0aW9uJykgY2hpbGRSZWYoZWwpO1xuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNoaWxkUmVmID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGNoaWxkUmVmLmN1cnJlbnQgPSBlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIFtcbiAgICAgICAgYXMsXG4gICAgICAgIGNoaWxkUmVmLFxuICAgICAgICBocmVmLFxuICAgICAgICByZXNldFZpc2libGUsXG4gICAgICAgIHNldEludGVyc2VjdGlvblJlZlxuICAgIF0pO1xuICAgIC8vIFByZWZldGNoIHRoZSBVUkwgaWYgd2UgaGF2ZW4ndCBhbHJlYWR5IGFuZCBpdCdzIHZpc2libGUuXG4gICAgX3JlYWN0LmRlZmF1bHQudXNlRWZmZWN0KCgpPT57XG4gICAgICAgIC8vIGluIGRldiwgd2Ugb25seSBwcmVmZXRjaCBvbiBob3ZlciB0byBhdm9pZCB3YXN0aW5nIHJlc291cmNlcyBhcyB0aGUgcHJlZmV0Y2ggd2lsbCB0cmlnZ2VyIGNvbXBpbGluZyB0aGUgcGFnZS5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJvdXRlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHdlIGRvbid0IG5lZWQgdG8gcHJlZmV0Y2ggdGhlIFVSTCwgZG9uJ3QgZG8gcHJlZmV0Y2guXG4gICAgICAgIGlmICghaXNWaXNpYmxlIHx8ICFwcmVmZXRjaEVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBQcmVmZXRjaCB0aGUgVVJMLlxuICAgICAgICBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCB7XG4gICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgfSk7XG4gICAgfSwgW1xuICAgICAgICBhcyxcbiAgICAgICAgaHJlZixcbiAgICAgICAgaXNWaXNpYmxlLFxuICAgICAgICBsb2NhbGUsXG4gICAgICAgIHByZWZldGNoRW5hYmxlZCxcbiAgICAgICAgcGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmxvY2FsZSxcbiAgICAgICAgcm91dGVyLCBcbiAgICBdKTtcbiAgICBjb25zdCBjaGlsZFByb3BzID0ge1xuICAgICAgICByZWY6IHNldFJlZixcbiAgICAgICAgb25DbGljayAoZSkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb21wb25lbnQgcmVuZGVyZWQgaW5zaWRlIG5leHQvbGluayBoYXMgdG8gcGFzcyBjbGljayBldmVudCB0byBcIm9uQ2xpY2tcIiBwcm9wLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghbGVnYWN5QmVoYXZpb3IgJiYgdHlwZW9mIG9uQ2xpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vbkNsaWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQucHJvcHMub25DbGljayhlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpbmtDbGlja2VkKGUsIHJvdXRlciwgaHJlZiwgYXMsIHJlcGxhY2UsIHNoYWxsb3csIHNjcm9sbCwgbG9jYWxlLCBpc0FwcFJvdXRlciwgcHJlZmV0Y2hFbmFibGVkKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Nb3VzZUVudGVyIChlKSB7XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvbk1vdXNlRW50ZXJQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyUHJvcChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsZWdhY3lCZWhhdmlvciAmJiBjaGlsZC5wcm9wcyAmJiB0eXBlb2YgY2hpbGQucHJvcHMub25Nb3VzZUVudGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQucHJvcHMub25Nb3VzZUVudGVyKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFyb3V0ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXByZWZldGNoRW5hYmxlZCAmJiBpc0FwcFJvdXRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByZWZldGNoKHJvdXRlciwgaHJlZiwgYXMsIHtcbiAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgcHJpb3JpdHk6IHRydWUsXG4gICAgICAgICAgICAgICAgLy8gQHNlZSB7aHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2Rpc2N1c3Npb25zLzQwMjY4P3NvcnQ9dG9wI2Rpc2N1c3Npb25jb21tZW50LTM1NzI2NDJ9XG4gICAgICAgICAgICAgICAgYnlwYXNzUHJlZmV0Y2hlZENoZWNrOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Ub3VjaFN0YXJ0IChlKSB7XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvblRvdWNoU3RhcnRQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb25Ub3VjaFN0YXJ0UHJvcChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsZWdhY3lCZWhhdmlvciAmJiBjaGlsZC5wcm9wcyAmJiB0eXBlb2YgY2hpbGQucHJvcHMub25Ub3VjaFN0YXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQucHJvcHMub25Ub3VjaFN0YXJ0KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFyb3V0ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXByZWZldGNoRW5hYmxlZCAmJiBpc0FwcFJvdXRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByZWZldGNoKHJvdXRlciwgaHJlZiwgYXMsIHtcbiAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgcHJpb3JpdHk6IHRydWUsXG4gICAgICAgICAgICAgICAgLy8gQHNlZSB7aHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2Rpc2N1c3Npb25zLzQwMjY4P3NvcnQ9dG9wI2Rpc2N1c3Npb25jb21tZW50LTM1NzI2NDJ9XG4gICAgICAgICAgICAgICAgYnlwYXNzUHJlZmV0Y2hlZENoZWNrOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gSWYgY2hpbGQgaXMgYW4gPGE+IHRhZyBhbmQgZG9lc24ndCBoYXZlIGEgaHJlZiBhdHRyaWJ1dGUsIG9yIGlmIHRoZSAncGFzc0hyZWYnIHByb3BlcnR5IGlzXG4gICAgLy8gZGVmaW5lZCwgd2Ugc3BlY2lmeSB0aGUgY3VycmVudCAnaHJlZicsIHNvIHRoYXQgcmVwZXRpdGlvbiBpcyBub3QgbmVlZGVkIGJ5IHRoZSB1c2VyXG4gICAgaWYgKCFsZWdhY3lCZWhhdmlvciB8fCBwYXNzSHJlZiB8fCBjaGlsZC50eXBlID09PSAnYScgJiYgISgnaHJlZicgaW4gY2hpbGQucHJvcHMpKSB7XG4gICAgICAgIGNvbnN0IGN1ckxvY2FsZSA9IHR5cGVvZiBsb2NhbGUgIT09ICd1bmRlZmluZWQnID8gbG9jYWxlIDogcGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmxvY2FsZTtcbiAgICAgICAgLy8gd2Ugb25seSByZW5kZXIgZG9tYWluIGxvY2FsZXMgaWYgd2UgYXJlIGN1cnJlbnRseSBvbiBhIGRvbWFpbiBsb2NhbGVcbiAgICAgICAgLy8gc28gdGhhdCBsb2NhbGUgbGlua3MgYXJlIHN0aWxsIHZpc2l0YWJsZSBpbiBkZXZlbG9wbWVudC9wcmV2aWV3IGVudnNcbiAgICAgICAgY29uc3QgbG9jYWxlRG9tYWluID0gKHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5pc0xvY2FsZURvbWFpbikgJiYgKDAsIF9nZXREb21haW5Mb2NhbGUpLmdldERvbWFpbkxvY2FsZShhcywgY3VyTG9jYWxlLCBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIubG9jYWxlcywgcGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmRvbWFpbkxvY2FsZXMpO1xuICAgICAgICBjaGlsZFByb3BzLmhyZWYgPSBsb2NhbGVEb21haW4gfHwgKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgoKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShhcywgY3VyTG9jYWxlLCBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIuZGVmYXVsdExvY2FsZSkpO1xuICAgIH1cbiAgICByZXR1cm4gbGVnYWN5QmVoYXZpb3IgPyAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNsb25lRWxlbWVudChjaGlsZCwgY2hpbGRQcm9wcykgOiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIE9iamVjdC5hc3NpZ24oe30sIHJlc3RQcm9wcywgY2hpbGRQcm9wcyksIGNoaWxkcmVuKTtcbn0pO1xudmFyIF9kZWZhdWx0ID0gTGluaztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJyZXF1aXJlIiwiX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UiLCJfcmVhY3QiLCJfcm91dGVyIiwiX2Zvcm1hdFVybCIsIl9hZGRMb2NhbGUiLCJfcm91dGVyQ29udGV4dCIsIl9hcHBSb3V0ZXJDb250ZXh0IiwiX3VzZUludGVyc2VjdGlvbiIsIl9nZXREb21haW5Mb2NhbGUiLCJfYWRkQmFzZVBhdGgiLCJwcmVmZXRjaGVkIiwiU2V0IiwicHJlZmV0Y2giLCJyb3V0ZXIiLCJocmVmIiwiYXMiLCJvcHRpb25zIiwiaXNMb2NhbFVSTCIsImJ5cGFzc1ByZWZldGNoZWRDaGVjayIsImxvY2FsZSIsInVuZGVmaW5lZCIsInByZWZldGNoZWRLZXkiLCJoYXMiLCJhZGQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNhdGNoIiwiZXJyIiwicHJvY2VzcyIsImlzTW9kaWZpZWRFdmVudCIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIm1ldGFLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJuYXRpdmVFdmVudCIsIndoaWNoIiwibGlua0NsaWNrZWQiLCJlIiwicmVwbGFjZSIsInNoYWxsb3ciLCJzY3JvbGwiLCJpc0FwcFJvdXRlciIsInByZWZldGNoRW5hYmxlZCIsIm5vZGVOYW1lIiwiaXNBbmNob3JOb2RlTmFtZSIsInRvVXBwZXJDYXNlIiwicHJldmVudERlZmF1bHQiLCJuYXZpZ2F0ZSIsImZvcmNlT3B0aW1pc3RpY05hdmlnYXRpb24iLCJzdGFydFRyYW5zaXRpb24iLCJmb3JtYXRTdHJpbmdPclVybCIsInVybE9iak9yU3RyaW5nIiwiZm9ybWF0VXJsIiwiTGluayIsImZvcndhcmRSZWYiLCJMaW5rQ29tcG9uZW50IiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJjcmVhdGVQcm9wRXJyb3IiLCJhcmdzIiwiRXJyb3IiLCJrZXkiLCJleHBlY3RlZCIsImFjdHVhbCIsInJlcXVpcmVkUHJvcHNHdWFyZCIsInJlcXVpcmVkUHJvcHMiLCJrZXlzIiwiZm9yRWFjaCIsIl8iLCJvcHRpb25hbFByb3BzR3VhcmQiLCJwYXNzSHJlZiIsIm9uQ2xpY2siLCJvbk1vdXNlRW50ZXIiLCJvblRvdWNoU3RhcnQiLCJsZWdhY3lCZWhhdmlvciIsIm9wdGlvbmFsUHJvcHMiLCJ2YWxUeXBlIiwiaGFzV2FybmVkIiwidXNlUmVmIiwiY3VycmVudCIsImNvbnNvbGUiLCJ3YXJuIiwiY2hpbGRyZW4iLCJocmVmUHJvcCIsImFzUHJvcCIsImNoaWxkcmVuUHJvcCIsInByZWZldGNoUHJvcCIsIm9uTW91c2VFbnRlclByb3AiLCJvblRvdWNoU3RhcnRQcm9wIiwiZW52IiwiX19ORVhUX05FV19MSU5LX0JFSEFWSU9SIiwicmVzdFByb3BzIiwiY3JlYXRlRWxlbWVudCIsInBhZ2VzUm91dGVyIiwidXNlQ29udGV4dCIsIlJvdXRlckNvbnRleHQiLCJhcHBSb3V0ZXIiLCJBcHBSb3V0ZXJDb250ZXh0IiwicGF0aG5hbWUiLCJoYXNEeW5hbWljU2VnbWVudCIsInNwbGl0Iiwic29tZSIsInNlZ21lbnQiLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiLCJ1c2VNZW1vIiwicmVzb2x2ZWRIcmVmIiwicmVzb2x2ZWRBcyIsInJlc29sdmVIcmVmIiwicHJldmlvdXNIcmVmIiwicHJldmlvdXNBcyIsImNoaWxkIiwiQ2hpbGRyZW4iLCJvbmx5IiwicmVmIiwidHlwZSIsImNoaWxkUmVmIiwic2V0SW50ZXJzZWN0aW9uUmVmIiwiaXNWaXNpYmxlIiwicmVzZXRWaXNpYmxlIiwidXNlSW50ZXJzZWN0aW9uIiwicm9vdE1hcmdpbiIsInNldFJlZiIsInVzZUNhbGxiYWNrIiwiZWwiLCJ1c2VFZmZlY3QiLCJjaGlsZFByb3BzIiwiZGVmYXVsdFByZXZlbnRlZCIsInByaW9yaXR5IiwiY3VyTG9jYWxlIiwibG9jYWxlRG9tYWluIiwiaXNMb2NhbGVEb21haW4iLCJnZXREb21haW5Mb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsImFkZEJhc2VQYXRoIiwiYWRkTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImNsb25lRWxlbWVudCIsImFzc2lnbiIsIl9kZWZhdWx0IiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef , rootMargin , disabled  } = param;\n    _s();\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [element, setElement] = (0, _react).useState(null);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    }, [\n        element,\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\n_s(useIntersection, \"mCSdCffdW7h1A87zcVCmaEd/d2A=\");\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/image-blur-svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-blur-svg.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getImageBlurSvg = getImageBlurSvg;\nfunction getImageBlurSvg(param) {\n    let { widthInt , heightInt , blurWidth , blurHeight , blurDataURL  } = param;\n    const std = blurWidth && blurHeight ? \"1\" : \"20\";\n    const svgWidth = blurWidth || widthInt;\n    const svgHeight = blurHeight || heightInt;\n    const feComponentTransfer = blurDataURL.startsWith(\"data:image/jpeg\") ? \"%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%\" : \"\";\n    if (svgWidth && svgHeight) {\n        return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 \".concat(svgWidth, \" \").concat(svgHeight, \"'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\").concat(std, \"'/%3E\").concat(feComponentTransfer, \"%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='\").concat(blurDataURL, \"'/%3E%3C/svg%3E\");\n    }\n    return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' x='0' y='0' height='100%25' width='100%25' href='\".concat(blurDataURL, \"'/%3E%3C/svg%3E\");\n} //# sourceMappingURL=image-blur-svg.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtYmx1ci1zdmcuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsdUJBQXVCLEdBQUdFO0FBQzFCLFNBQVNBLGdCQUFnQixLQUFnRSxFQUFFO1FBQWxFLEVBQUVDLFNBQVEsRUFBR0MsVUFBUyxFQUFHQyxVQUFTLEVBQUdDLFdBQVUsRUFBR0MsWUFBVyxFQUFHLEdBQWhFO0lBQ3JCLE1BQU1DLE1BQU1ILGFBQWFDLGFBQWEsTUFBTSxJQUFJO0lBQ2hELE1BQU1HLFdBQVdKLGFBQWFGO0lBQzlCLE1BQU1PLFlBQVlKLGNBQWNGO0lBQ2hDLE1BQU1PLHNCQUFzQkosWUFBWUssVUFBVSxDQUFDLHFCQUFzQix5R0FBd0csRUFBRTtJQUNuTCxJQUFJSCxZQUFZQyxXQUFXO1FBQ3ZCLE9BQU8sNERBQXdFQSxPQUFaRCxVQUFTLEtBQXlHRCxPQUF0R0UsV0FBVSw4RkFBdUdDLE9BQVhILEtBQUksU0FBa0pELE9BQTNJSSxxQkFBb0IseUhBQW1JLE9BQVpKLGFBQVk7SUFDM1YsQ0FBQztJQUNELE9BQU8scUlBQWlKLE9BQVpBLGFBQVk7QUFDNUosRUFFQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2ltYWdlLWJsdXItc3ZnLmpzPzk1NzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldEltYWdlQmx1clN2ZyA9IGdldEltYWdlQmx1clN2ZztcbmZ1bmN0aW9uIGdldEltYWdlQmx1clN2Zyh7IHdpZHRoSW50ICwgaGVpZ2h0SW50ICwgYmx1cldpZHRoICwgYmx1ckhlaWdodCAsIGJsdXJEYXRhVVJMICB9KSB7XG4gICAgY29uc3Qgc3RkID0gYmx1cldpZHRoICYmIGJsdXJIZWlnaHQgPyAnMScgOiAnMjAnO1xuICAgIGNvbnN0IHN2Z1dpZHRoID0gYmx1cldpZHRoIHx8IHdpZHRoSW50O1xuICAgIGNvbnN0IHN2Z0hlaWdodCA9IGJsdXJIZWlnaHQgfHwgaGVpZ2h0SW50O1xuICAgIGNvbnN0IGZlQ29tcG9uZW50VHJhbnNmZXIgPSBibHVyRGF0YVVSTC5zdGFydHNXaXRoKCdkYXRhOmltYWdlL2pwZWcnKSA/IGAlM0NmZUNvbXBvbmVudFRyYW5zZmVyJTNFJTNDZmVGdW5jQSB0eXBlPSdkaXNjcmV0ZScgdGFibGVWYWx1ZXM9JzEgMScvJTNFJTNDL2ZlQ29tcG9uZW50VHJhbnNmZXIlM0UlYCA6ICcnO1xuICAgIGlmIChzdmdXaWR0aCAmJiBzdmdIZWlnaHQpIHtcbiAgICAgICAgcmV0dXJuIGAlM0NzdmcgeG1sbnM9J2h0dHAlM0EvL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAke3N2Z1dpZHRofSAke3N2Z0hlaWdodH0nJTNFJTNDZmlsdGVyIGlkPSdiJyBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnM9J3NSR0InJTNFJTNDZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScke3N0ZH0nLyUzRSR7ZmVDb21wb25lbnRUcmFuc2Zlcn0lM0MvZmlsdGVyJTNFJTNDaW1hZ2UgcHJlc2VydmVBc3BlY3RSYXRpbz0nbm9uZScgZmlsdGVyPSd1cmwoJTIzYiknIHg9JzAnIHk9JzAnIGhlaWdodD0nMTAwJTI1JyB3aWR0aD0nMTAwJTI1JyBocmVmPScke2JsdXJEYXRhVVJMfScvJTNFJTNDL3N2ZyUzRWA7XG4gICAgfVxuICAgIHJldHVybiBgJTNDc3ZnIHhtbG5zPSdodHRwJTNBLy93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ2ltYWdlIHN0eWxlPSdmaWx0ZXI6Ymx1cigyMHB4KScgeD0nMCcgeT0nMCcgaGVpZ2h0PScxMDAlMjUnIHdpZHRoPScxMDAlMjUnIGhyZWY9JyR7Ymx1ckRhdGFVUkx9Jy8lM0UlM0Mvc3ZnJTNFYDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtYmx1ci1zdmcuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0SW1hZ2VCbHVyU3ZnIiwid2lkdGhJbnQiLCJoZWlnaHRJbnQiLCJibHVyV2lkdGgiLCJibHVySGVpZ2h0IiwiYmx1ckRhdGFVUkwiLCJzdGQiLCJzdmdXaWR0aCIsInN2Z0hlaWdodCIsImZlQ29tcG9uZW50VHJhbnNmZXIiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/image-blur-svg.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/image-loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-loader.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nfunction defaultLoader(param) {\n    let { config , src , width , quality  } = param;\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \".concat(missingValues.join(\", \"), \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \").concat(JSON.stringify({\n                src,\n                width,\n                quality\n            })));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"'.concat(src, '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)'));\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"'.concat(src, '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)'));\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch  } = __webpack_require__(/*! ./match-remote-pattern */ \"./node_modules/next/dist/shared/lib/match-remote-pattern.js\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\".concat(src, ') on `next/image`, hostname \"').concat(parsedSrc.hostname, '\" is not configured under images in your `next.config.js`\\n') + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return \"\".concat(config.path, \"?url=\").concat(encodeURIComponent(src), \"&w=\").concat(width, \"&q=\").concat(quality || 75);\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nvar _default = defaultLoader;\nexports[\"default\"] = _default; //# sourceMappingURL=image-loader.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtbG9hZGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUcsS0FBSztBQUN2QixTQUFTRyxjQUFjLEtBQW1DLEVBQUU7UUFBckMsRUFBRUMsT0FBTSxFQUFHQyxJQUFHLEVBQUdDLE1BQUssRUFBR0MsUUFBTyxFQUFHLEdBQW5DO0lBQ25CLElBQUlDLElBQXlCLEVBQWM7UUFDdkMsTUFBTUMsZ0JBQWdCLEVBQUU7UUFDeEIseURBQXlEO1FBQ3pELElBQUksQ0FBQ0osS0FBS0ksY0FBY0MsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQ0osT0FBT0csY0FBY0MsSUFBSSxDQUFDO1FBQy9CLElBQUlELGNBQWNFLE1BQU0sR0FBRyxHQUFHO1lBQzFCLE1BQU0sSUFBSUMsTUFBTSxvQ0FBNEpDLE9BQXhISixjQUFjSyxJQUFJLENBQUMsT0FBTSwrRkFJMUUsT0FKeUtELEtBQUtFLFNBQVMsQ0FBQztnQkFDdkxWO2dCQUNBQztnQkFDQUM7WUFDSixLQUFNO1FBQ1YsQ0FBQztRQUNELElBQUlGLElBQUlXLFVBQVUsQ0FBQyxPQUFPO1lBQ3RCLE1BQU0sSUFBSUosTUFBTSx3QkFBNEIsT0FBSlAsS0FBSSwyR0FBMkc7UUFDM0osQ0FBQztRQUNELElBQUksQ0FBQ0EsSUFBSVcsVUFBVSxDQUFDLFFBQVNaLENBQUFBLE9BQU9hLE9BQU8sSUFBSWIsT0FBT2MsY0FBYyxHQUFHO1lBQ25FLElBQUlDO1lBQ0osSUFBSTtnQkFDQUEsWUFBWSxJQUFJQyxJQUFJZjtZQUN4QixFQUFFLE9BQU9nQixLQUFLO2dCQUNWQyxRQUFRQyxLQUFLLENBQUNGO2dCQUNkLE1BQU0sSUFBSVQsTUFBTSx3QkFBNEIsT0FBSlAsS0FBSSxrSUFBa0k7WUFDbEw7WUFDQSxJQUFJRyxJQUF5QixFQUFRO2dCQUNqQyx1RUFBdUU7Z0JBQ3ZFLE1BQU0sRUFBRWdCLFNBQVEsRUFBRyxHQUFHQyxtQkFBT0EsQ0FBQztnQkFDOUIsSUFBSSxDQUFDRCxTQUFTcEIsT0FBT2EsT0FBTyxFQUFFYixPQUFPYyxjQUFjLEVBQUVDLFlBQVk7b0JBQzdELE1BQU0sSUFBSVAsTUFBTSxxQkFBMERPLE9BQXJDZCxLQUFJLGlDQUFvRCxPQUFuQmMsVUFBVU8sUUFBUSxFQUFDLGlFQUFrRSxnRkFBK0U7Z0JBQ2xQLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7SUFDRCxPQUFPLEdBQXNCQyxPQUFuQnZCLE9BQU93QixJQUFJLEVBQUMsU0FBb0N0QixPQUE3QnFCLG1CQUFtQnRCLE1BQUssT0FBZ0JFLE9BQVhELE9BQU0sT0FBbUIsT0FBZEMsV0FBVztBQUNwRjtBQUNBLCtEQUErRDtBQUMvRCwyREFBMkQ7QUFDM0RKLGNBQWMwQixrQkFBa0IsR0FBRyxJQUFJO0FBQ3ZDLElBQUlDLFdBQVczQjtBQUNmSCxrQkFBZSxHQUFHOEIsVUFFbEIsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanM/YzBhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbmZ1bmN0aW9uIGRlZmF1bHRMb2FkZXIoeyBjb25maWcgLCBzcmMgLCB3aWR0aCAsIHF1YWxpdHkgIH0pIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zdCBtaXNzaW5nVmFsdWVzID0gW107XG4gICAgICAgIC8vIHRoZXNlIHNob3VsZCBhbHdheXMgYmUgcHJvdmlkZWQgYnV0IG1ha2Ugc3VyZSB0aGV5IGFyZVxuICAgICAgICBpZiAoIXNyYykgbWlzc2luZ1ZhbHVlcy5wdXNoKCdzcmMnKTtcbiAgICAgICAgaWYgKCF3aWR0aCkgbWlzc2luZ1ZhbHVlcy5wdXNoKCd3aWR0aCcpO1xuICAgICAgICBpZiAobWlzc2luZ1ZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5leHQgSW1hZ2UgT3B0aW1pemF0aW9uIHJlcXVpcmVzICR7bWlzc2luZ1ZhbHVlcy5qb2luKCcsICcpfSB0byBiZSBwcm92aWRlZC4gTWFrZSBzdXJlIHlvdSBwYXNzIHRoZW0gYXMgcHJvcHMgdG8gdGhlIFxcYG5leHQvaW1hZ2VcXGAgY29tcG9uZW50LiBSZWNlaXZlZDogJHtKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgICAgIHF1YWxpdHlcbiAgICAgICAgICAgIH0pfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzcmMuc3RhcnRzV2l0aCgnLy8nKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcGFyc2Ugc3JjIFwiJHtzcmN9XCIgb24gXFxgbmV4dC9pbWFnZVxcYCwgcHJvdG9jb2wtcmVsYXRpdmUgVVJMICgvLykgbXVzdCBiZSBjaGFuZ2VkIHRvIGFuIGFic29sdXRlIFVSTCAoaHR0cDovLyBvciBodHRwczovLylgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNyYy5zdGFydHNXaXRoKCcvJykgJiYgKGNvbmZpZy5kb21haW5zIHx8IGNvbmZpZy5yZW1vdGVQYXR0ZXJucykpIHtcbiAgICAgICAgICAgIGxldCBwYXJzZWRTcmM7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBhcnNlZFNyYyA9IG5ldyBVUkwoc3JjKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBwYXJzZSBzcmMgXCIke3NyY31cIiBvbiBcXGBuZXh0L2ltYWdlXFxgLCBpZiB1c2luZyByZWxhdGl2ZSBpbWFnZSBpdCBtdXN0IHN0YXJ0IHdpdGggYSBsZWFkaW5nIHNsYXNoIFwiL1wiIG9yIGJlIGFuIGFic29sdXRlIFVSTCAoaHR0cDovLyBvciBodHRwczovLylgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgdXNlIGR5bmFtaWMgcmVxdWlyZSBiZWNhdXNlIHRoaXMgc2hvdWxkIG9ubHkgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgICAgICAgICAgICAgICBjb25zdCB7IGhhc01hdGNoICB9ID0gcmVxdWlyZSgnLi9tYXRjaC1yZW1vdGUtcGF0dGVybicpO1xuICAgICAgICAgICAgICAgIGlmICghaGFzTWF0Y2goY29uZmlnLmRvbWFpbnMsIGNvbmZpZy5yZW1vdGVQYXR0ZXJucywgcGFyc2VkU3JjKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc3JjIHByb3AgKCR7c3JjfSkgb24gXFxgbmV4dC9pbWFnZVxcYCwgaG9zdG5hbWUgXCIke3BhcnNlZFNyYy5ob3N0bmFtZX1cIiBpcyBub3QgY29uZmlndXJlZCB1bmRlciBpbWFnZXMgaW4geW91ciBcXGBuZXh0LmNvbmZpZy5qc1xcYFxcbmAgKyBgU2VlIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbmV4dC1pbWFnZS11bmNvbmZpZ3VyZWQtaG9zdGApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYCR7Y29uZmlnLnBhdGh9P3VybD0ke2VuY29kZVVSSUNvbXBvbmVudChzcmMpfSZ3PSR7d2lkdGh9JnE9JHtxdWFsaXR5IHx8IDc1fWA7XG59XG4vLyBXZSB1c2UgdGhpcyB0byBkZXRlcm1pbmUgaWYgdGhlIGltcG9ydCBpcyB0aGUgZGVmYXVsdCBsb2FkZXJcbi8vIG9yIGEgY3VzdG9tIGxvYWRlciBkZWZpbmVkIGJ5IHRoZSB1c2VyIGluIG5leHQuY29uZmlnLmpzXG5kZWZhdWx0TG9hZGVyLl9fbmV4dF9pbWdfZGVmYXVsdCA9IHRydWU7XG52YXIgX2RlZmF1bHQgPSBkZWZhdWx0TG9hZGVyO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlLWxvYWRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiZGVmYXVsdExvYWRlciIsImNvbmZpZyIsInNyYyIsIndpZHRoIiwicXVhbGl0eSIsInByb2Nlc3MiLCJtaXNzaW5nVmFsdWVzIiwicHVzaCIsImxlbmd0aCIsIkVycm9yIiwiSlNPTiIsImpvaW4iLCJzdHJpbmdpZnkiLCJzdGFydHNXaXRoIiwiZG9tYWlucyIsInJlbW90ZVBhdHRlcm5zIiwicGFyc2VkU3JjIiwiVVJMIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiaGFzTWF0Y2giLCJyZXF1aXJlIiwiaG9zdG5hbWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJwYXRoIiwiX19uZXh0X2ltZ19kZWZhdWx0IiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/image-loader.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/match-remote-pattern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/match-remote-pattern.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchRemotePattern = matchRemotePattern;\nexports.hasMatch = hasMatch;\nvar _micromatch = __webpack_require__(/*! next/dist/compiled/micromatch */ \"./node_modules/next/dist/compiled/micromatch/index.js\");\nfunction matchRemotePattern(pattern, url) {\n    if (pattern.protocol !== undefined) {\n        const actualProto = url.protocol.slice(0, -1);\n        if (pattern.protocol !== actualProto) {\n            return false;\n        }\n    }\n    if (pattern.port !== undefined) {\n        if (pattern.port !== url.port) {\n            return false;\n        }\n    }\n    if (pattern.hostname === undefined) {\n        throw new Error(\"Pattern should define hostname but found\\n\".concat(JSON.stringify(pattern)));\n    } else {\n        if (!(0, _micromatch).makeRe(pattern.hostname).test(url.hostname)) {\n            return false;\n        }\n    }\n    var _pathname;\n    if (!(0, _micromatch).makeRe((_pathname = pattern.pathname) != null ? _pathname : \"**\").test(url.pathname)) {\n        return false;\n    }\n    return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));\n} //# sourceMappingURL=match-remote-pattern.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvbWF0Y2gtcmVtb3RlLXBhdHRlcm4uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsMEJBQTBCLEdBQUdFO0FBQzdCRixnQkFBZ0IsR0FBR0c7QUFDbkIsSUFBSUMsY0FBY0MsbUJBQU9BLENBQUMsNEZBQStCO0FBQ3pELFNBQVNILG1CQUFtQkksT0FBTyxFQUFFQyxHQUFHLEVBQUU7SUFDdEMsSUFBSUQsUUFBUUUsUUFBUSxLQUFLQyxXQUFXO1FBQ2hDLE1BQU1DLGNBQWNILElBQUlDLFFBQVEsQ0FBQ0csS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUMzQyxJQUFJTCxRQUFRRSxRQUFRLEtBQUtFLGFBQWE7WUFDbEMsT0FBTyxLQUFLO1FBQ2hCLENBQUM7SUFDTCxDQUFDO0lBQ0QsSUFBSUosUUFBUU0sSUFBSSxLQUFLSCxXQUFXO1FBQzVCLElBQUlILFFBQVFNLElBQUksS0FBS0wsSUFBSUssSUFBSSxFQUFFO1lBQzNCLE9BQU8sS0FBSztRQUNoQixDQUFDO0lBQ0wsQ0FBQztJQUNELElBQUlOLFFBQVFPLFFBQVEsS0FBS0osV0FBVztRQUNoQyxNQUFNLElBQUlLLE1BQU0sNkNBQXFFLE9BQXhCQyxLQUFLQyxTQUFTLENBQUNWLFdBQVk7SUFDNUYsT0FBTztRQUNILElBQUksQ0FBQyxDQUFDLEdBQUdGLFdBQVcsRUFBRWEsTUFBTSxDQUFDWCxRQUFRTyxRQUFRLEVBQUVLLElBQUksQ0FBQ1gsSUFBSU0sUUFBUSxHQUFHO1lBQy9ELE9BQU8sS0FBSztRQUNoQixDQUFDO0lBQ0wsQ0FBQztJQUNELElBQUlNO0lBQ0osSUFBSSxDQUFDLENBQUMsR0FBR2YsV0FBVyxFQUFFYSxNQUFNLENBQUMsQ0FBQ0UsWUFBWWIsUUFBUWMsUUFBUSxLQUFLLElBQUksR0FBR0QsWUFBWSxJQUFJLEVBQUVELElBQUksQ0FBQ1gsSUFBSWEsUUFBUSxHQUFHO1FBQ3hHLE9BQU8sS0FBSztJQUNoQixDQUFDO0lBQ0QsT0FBTyxJQUFJO0FBQ2Y7QUFDQSxTQUFTakIsU0FBU2tCLE9BQU8sRUFBRUMsY0FBYyxFQUFFZixHQUFHLEVBQUU7SUFDNUMsT0FBT2MsUUFBUUUsSUFBSSxDQUFDLENBQUNDLFNBQVNqQixJQUFJTSxRQUFRLEtBQUtXLFdBQVdGLGVBQWVDLElBQUksQ0FBQyxDQUFDRSxJQUFJdkIsbUJBQW1CdUIsR0FBR2xCO0FBQzdHLEVBRUEsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi5qcz8wYzliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5tYXRjaFJlbW90ZVBhdHRlcm4gPSBtYXRjaFJlbW90ZVBhdHRlcm47XG5leHBvcnRzLmhhc01hdGNoID0gaGFzTWF0Y2g7XG52YXIgX21pY3JvbWF0Y2ggPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL21pY3JvbWF0Y2hcIik7XG5mdW5jdGlvbiBtYXRjaFJlbW90ZVBhdHRlcm4ocGF0dGVybiwgdXJsKSB7XG4gICAgaWYgKHBhdHRlcm4ucHJvdG9jb2wgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBhY3R1YWxQcm90byA9IHVybC5wcm90b2NvbC5zbGljZSgwLCAtMSk7XG4gICAgICAgIGlmIChwYXR0ZXJuLnByb3RvY29sICE9PSBhY3R1YWxQcm90bykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLnBvcnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAocGF0dGVybi5wb3J0ICE9PSB1cmwucG9ydCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLmhvc3RuYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXR0ZXJuIHNob3VsZCBkZWZpbmUgaG9zdG5hbWUgYnV0IGZvdW5kXFxuJHtKU09OLnN0cmluZ2lmeShwYXR0ZXJuKX1gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoISgwLCBfbWljcm9tYXRjaCkubWFrZVJlKHBhdHRlcm4uaG9zdG5hbWUpLnRlc3QodXJsLmhvc3RuYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhciBfcGF0aG5hbWU7XG4gICAgaWYgKCEoMCwgX21pY3JvbWF0Y2gpLm1ha2VSZSgoX3BhdGhuYW1lID0gcGF0dGVybi5wYXRobmFtZSkgIT0gbnVsbCA/IF9wYXRobmFtZSA6ICcqKicpLnRlc3QodXJsLnBhdGhuYW1lKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaGFzTWF0Y2goZG9tYWlucywgcmVtb3RlUGF0dGVybnMsIHVybCkge1xuICAgIHJldHVybiBkb21haW5zLnNvbWUoKGRvbWFpbik9PnVybC5ob3N0bmFtZSA9PT0gZG9tYWluKSB8fCByZW1vdGVQYXR0ZXJucy5zb21lKChwKT0+bWF0Y2hSZW1vdGVQYXR0ZXJuKHAsIHVybCkpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRjaC1yZW1vdGUtcGF0dGVybi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtYXRjaFJlbW90ZVBhdHRlcm4iLCJoYXNNYXRjaCIsIl9taWNyb21hdGNoIiwicmVxdWlyZSIsInBhdHRlcm4iLCJ1cmwiLCJwcm90b2NvbCIsInVuZGVmaW5lZCIsImFjdHVhbFByb3RvIiwic2xpY2UiLCJwb3J0IiwiaG9zdG5hbWUiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJtYWtlUmUiLCJ0ZXN0IiwiX3BhdGhuYW1lIiwicGF0aG5hbWUiLCJkb21haW5zIiwicmVtb3RlUGF0dGVybnMiLCJzb21lIiwiZG9tYWluIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/match-remote-pattern.js\n"));

/***/ }),

/***/ "./src/pages/collection.js":
/*!*********************************!*\
  !*** ./src/pages/collection.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Collection; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./token */ \"./src/pages/token.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// takes a policy and uses blockfrost to return asset datafrom the collection\nfunction Collection(props) {\n    _s();\n    const [tokens, setTokens] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    // react hook used to store user inputed strings\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\");\n    const [assets, setAssets] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(null);\n    const [displayedAssets, setDisplayedAssets] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)([]);\n    const [results, setResults] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [total, setTotal] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(0);\n    const [minIndex, setMinIndex] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(0);\n    const [maxIndex, setMaxIndex] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(20);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        async function func() {\n            if (searchQuery.length > 0) {\n                let matches = [];\n                let decodedAsset = \"\";\n                // find matches\n                for (const element of assets){\n                    let assetName = element.asset.substring(56);\n                    decodedAsset = Buffer.from(assetName, \"hex\").toString();\n                    let assetId = element.asset.toLowerCase();\n                    let assetNameL = assetName.toLowerCase();\n                    let decodedAssetL = decodedAsset.toLowerCase();\n                    if (assetId.startsWith(searchQuery) || decodedAssetL.startsWith(searchQuery) || assetNameL.startsWith(searchQuery)) {\n                        matches.push(element);\n                    }\n                }\n                // display matches\n                if (matches.length != 0 && matches.length > 1) {\n                    setDisplayedAssets(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"value\",\n                        children: [\n                            matches.length,\n                            \" matches\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                        lineNumber: 46,\n                        columnNumber: 40\n                    }, this));\n                } else if (matches.length == 1) {\n                    let display = [];\n                    for (const element of matches){\n                        let assetName = element.asset.substring(56);\n                        let policy = element.asset.substring(0, 56);\n                        let decodedAsset = Buffer.from(assetName, \"hex\").toString();\n                        let token = new _token__WEBPACK_IMPORTED_MODULE_5__[\"default\"](assetName, policy, element.quantity);\n                        token.metadata = await token.getMetadata();\n                        let ipfs = \"\";\n                        if (token.metadata != null) {\n                            token.ipfs = token.getIpfsFromMetadata();\n                            if (token.ipfs != null) {\n                                ipfs = token.ipfs;\n                            }\n                        }\n                        let path = \"token\";\n                        display.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid-item\",\n                            onClick: ()=>router.push(\"/\" + path + \"/\" + token.policy_id + token.asset_name + \"?stake=\" + props.stake),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                    className: \"grid-img\",\n                                    src: token.ipfs,\n                                    alt: \"failed to load image\",\n                                    width: 270,\n                                    height: 270\n                                }, void 0, false, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                    lineNumber: 75,\n                                    columnNumber: 25\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid-item-info\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid-item-text\",\n                                            children: decodedAsset\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                            lineNumber: 78,\n                                            columnNumber: 25\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid-item-text\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"policy-button\",\n                                                    onClick: (e)=>copyText(e, token.asset_name),\n                                                    children: \"Copy\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                                    lineNumber: 80,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                    className: \"policy-button\",\n                                                    href: \"https://www.jpg.store/asset/\" + element.asset,\n                                                    children: \"JPG.store\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                                    lineNumber: 86,\n                                                    columnNumber: 27\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                            lineNumber: 79,\n                                            columnNumber: 25\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                    lineNumber: 77,\n                                    columnNumber: 25\n                                }, this)\n                            ]\n                        }, token.asset_name + \"poly\", true, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                            lineNumber: 74,\n                            columnNumber: 21\n                        }, this));\n                    }\n                    setDisplayedAssets(display);\n                } else {\n                    setDisplayedAssets(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"value\",\n                        children: \"No matches\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                        lineNumber: 100,\n                        columnNumber: 40\n                    }, this));\n                }\n            } else {}\n        }\n        func();\n    }, [\n        searchQuery\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        async function getAssetPageFromBlockfrost() {\n            if (props == null || props.policy == null) {\n            // do nothing\n            } else {\n                let policy = props.policy;\n                //setTokens(assets);\n                let allAssets = await loadAllTokenData(policy);\n                setAssets(allAssets);\n                setTotal(allAssets.length);\n            }\n        }\n        getAssetPageFromBlockfrost();\n    }, [\n        props\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        async function setDisplay() {\n            if (assets != null) {\n                let display = [];\n                for(let i = minIndex; i < maxIndex; i++){\n                    let assetName = assets[i].asset.substring(56);\n                    let policy = assets[i].asset.substring(0, 56);\n                    let decodedAsset = Buffer.from(assetName, \"hex\").toString();\n                    let token = new _token__WEBPACK_IMPORTED_MODULE_5__[\"default\"](assetName, policy, assets[i].quantity);\n                    token.metadata = await token.getMetadata();\n                    let ipfs = \"\";\n                    if (token.metadata != null) {\n                        token.ipfs = token.getIpfsFromMetadata();\n                        if (token.ipfs != null) {\n                            ipfs = token.ipfs;\n                        }\n                    }\n                    let path = \"token\";\n                    display.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid-item\",\n                        onClick: ()=>router.push(\"/\" + path + \"/\" + token.policy_id + token.asset_name + \"?stake=\" + props.stake),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                className: \"grid-img\",\n                                src: token.ipfs,\n                                alt: \"failed to load image\",\n                                width: 270,\n                                height: 270\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                lineNumber: 160,\n                                columnNumber: 25\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"grid-item-info\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"grid-item-text\",\n                                        style: {\n                                            fontWeight: \"bolder\"\n                                        },\n                                        children: decodedAsset\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                        lineNumber: 163,\n                                        columnNumber: 25\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"grid-item-text\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"policy-button\",\n                                                onClick: (e)=>copyText(e, token.asset_name),\n                                                children: \"Copy\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                                lineNumber: 167,\n                                                columnNumber: 27\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                className: \"policy-button\",\n                                                href: \"https://www.jpg.store/asset/\" + assets[i].asset,\n                                                children: \"JPG.store\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                                lineNumber: 173,\n                                                columnNumber: 27\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                        lineNumber: 166,\n                                        columnNumber: 25\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                                lineNumber: 162,\n                                columnNumber: 25\n                            }, this)\n                        ]\n                    }, token.asset_name + \"poly\", true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                        lineNumber: 159,\n                        columnNumber: 21\n                    }, this));\n                }\n                setDisplayedAssets(display);\n            }\n        }\n        setDisplay();\n    }, [\n        assets,\n        minIndex,\n        maxIndex\n    ]);\n    async function loadAllTokenData(policy) {\n        let page = 1;\n        let allData = [];\n        while(true){\n            const data = await loadTokenData(policy, page);\n            if (!data) {\n                break;\n            }\n            allData = allData.concat(data);\n            if (data.length === 0) {\n                break;\n            }\n            // increment page\n            page++;\n        }\n        return allData;\n    }\n    // fetch token metadata from blockfrost\n    async function loadTokenData(policy, page) {\n        try {\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/policy/\" + policy + \"?page=\" + page, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            const res = await data.json();\n            if (data.status != 200) {\n                return null;\n            }\n            return res;\n        } catch (error) {\n            return null;\n        }\n    }\n    function nextPage() {\n        let mindex = minIndex + 20;\n        let maxdex = maxIndex + 20;\n        setMinIndex(mindex);\n        setMaxIndex(maxdex);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                children: \"Collection\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                lineNumber: 238,\n                columnNumber: 11\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                children: [\n                    \"Showing results: \",\n                    maxIndex,\n                    \" of \",\n                    total\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                lineNumber: 238,\n                columnNumber: 36\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"policy-search\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"setting-button\",\n                        onClick: ()=>nextPage(),\n                        children: \"Next\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                        lineNumber: 240,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                        className: \"searchForm\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            className: \"search-input\",\n                            placeholder: \"Search in collection by Asset ID, Asset Name or Asset Name decoded...\",\n                            value: searchQuery,\n                            onChange: (event)=>setSearchQuery(event.target.value.toLowerCase())\n                        }, void 0, false, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                            lineNumber: 244,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                        lineNumber: 243,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                lineNumber: 239,\n                columnNumber: 11\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid-nft\",\n                children: displayedAssets\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n                lineNumber: 254,\n                columnNumber: 11\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/collection.js\",\n        lineNumber: 237,\n        columnNumber: 9\n    }, this);\n}\n_s(Collection, \"cvNVRCOpSy2B4bwq20rglYt0gwY=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = Collection;\nvar _c;\n$RefreshReg$(_c, \"Collection\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/collection.js\n"));

/***/ }),

/***/ "./src/pages/colorPicker.js":
/*!**********************************!*\
  !*** ./src/pages/colorPicker.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ColorPicker; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n// allows the user to set the 3 main colors on page\nfunction ColorPicker(props) {\n    _s();\n    const [color1, setColor1] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [color2, setColor2] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [color3, setColor3] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [buttonText, setButtonText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Save Theme\");\n    const [buttonColor, setButtonColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (props.stake != null) {\n            let stakeAddress = props.stake;\n            let mainColor = \"\";\n            let secondColor = \"\";\n            let thirdColor = \"\";\n            // checks storage for saved colors\n            if (localStorage.getItem(stakeAddress)) {\n                let data = JSON.parse(localStorage.getItem(stakeAddress));\n                if (data.colors == null || data.colors.color1 == \"\") {\n                    // if no colors in storage, get colors from global.css\n                    mainColor = getComputedStyle(document.documentElement).getPropertyValue(\"--main-color\").trim();\n                    secondColor = getComputedStyle(document.documentElement).getPropertyValue(\"--second-color\").trim();\n                    thirdColor = getComputedStyle(document.documentElement).getPropertyValue(\"--third-color\").trim();\n                    setColor1(mainColor);\n                    setColor2(secondColor);\n                    setColor3(thirdColor);\n                } else {\n                    // if colors found in storage, use them\n                    document.documentElement.style.setProperty(\"--main-color\", data.colors.color1);\n                    document.documentElement.style.setProperty(\"--second-color\", data.colors.color2);\n                    document.documentElement.style.setProperty(\"--third-color\", data.colors.color3);\n                    setColor1(data.colors.color1);\n                    setColor2(data.colors.color2);\n                    setColor3(data.colors.color3);\n                }\n            } else {\n                console.log(\"else\");\n            // Get the value of the --main-color variable from the root element\n            }\n        }\n    }, []);\n    const handleChange1 = (event)=>{\n        setColor1(event.target.value);\n        document.documentElement.style.setProperty(\"--main-color\", event.target.value);\n    };\n    const handleChange2 = (event)=>{\n        setColor2(event.target.value);\n        document.documentElement.style.setProperty(\"--second-color\", event.target.value);\n    };\n    const handleChange3 = (event)=>{\n        setColor3(event.target.value);\n        document.documentElement.style.setProperty(\"--third-color\", event.target.value);\n    };\n    function saveColors() {\n        // saves color data into local storage so same colors are used on resume\n        let mainColor = getComputedStyle(document.documentElement).getPropertyValue(\"--main-color\").trim();\n        let secondColor = getComputedStyle(document.documentElement).getPropertyValue(\"--second-color\").trim();\n        let thirdColor = getComputedStyle(document.documentElement).getPropertyValue(\"--third-color\").trim();\n        let data = JSON.parse(localStorage.getItem(props.stake));\n        data.colors = {\n            color1: mainColor,\n            color2: secondColor,\n            color3: thirdColor\n        };\n        props.data(data.colors);\n        localStorage.setItem(props.stake, JSON.stringify(data));\n        setButtonText(\"Saved!\");\n        setTimeout(()=>{\n            // Reset the button text after 1 second\n            setButtonText(\"Save Colors\");\n        }, 1000);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"options-color\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"option\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"color\",\n                    className: \"option-button\",\n                    id: \"color-selector1\",\n                    value: color1,\n                    onChange: handleChange1\n                }, void 0, false, {\n                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                    lineNumber: 101,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                lineNumber: 100,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"option\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"color\",\n                    className: \"option-button\",\n                    id: \"color-selector2\",\n                    value: color2,\n                    onChange: handleChange2\n                }, void 0, false, {\n                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                    lineNumber: 110,\n                    columnNumber: 7\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                lineNumber: 109,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"option\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"color\",\n                    className: \"option-button\",\n                    id: \"color-selector3\",\n                    value: color3,\n                    onChange: handleChange3\n                }, void 0, false, {\n                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                    lineNumber: 119,\n                    columnNumber: 7\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                lineNumber: 118,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"option\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"option-button\",\n                    onClick: saveColors,\n                    children: buttonText\n                }, void 0, false, {\n                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                    lineNumber: 128,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n                lineNumber: 127,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/colorPicker.js\",\n        lineNumber: 99,\n        columnNumber: 5\n    }, this);\n}\n_s(ColorPicker, \"H6LCfWZ6FwI7P/fbMEtb+zWArh4=\");\n_c = ColorPicker;\nvar _c;\n$RefreshReg$(_c, \"ColorPicker\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvY29sb3JQaWNrZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE0QztBQUU1QyxtREFBbUQ7QUFDcEMsU0FBU0UsWUFBWUMsS0FBSyxFQUFFOztJQUN6QyxNQUFNLENBQUNDLFFBQVFDLFVBQVUsR0FBR0wsK0NBQVFBLENBQUM7SUFDckMsTUFBTSxDQUFDTSxRQUFRQyxVQUFVLEdBQUdQLCtDQUFRQSxDQUFDO0lBQ3JDLE1BQU0sQ0FBQ1EsUUFBUUMsVUFBVSxHQUFHVCwrQ0FBUUEsQ0FBQztJQUVyQyxNQUFNLENBQUNVLFlBQVlDLGNBQWMsR0FBR1gsK0NBQVFBLENBQUM7SUFDN0MsTUFBTSxDQUFDWSxhQUFhQyxlQUFlLEdBQUdiLCtDQUFRQTtJQUc5Q0MsZ0RBQVNBLENBQUMsSUFBTTtRQUVkLElBQUdFLE1BQU1XLEtBQUssSUFBSSxJQUFJLEVBQUM7WUFDckIsSUFBSUMsZUFBZVosTUFBTVcsS0FBSztZQUM5QixJQUFJRSxZQUFZO1lBQ2hCLElBQUlDLGNBQWM7WUFDbEIsSUFBSUMsYUFBYTtZQUVqQixrQ0FBa0M7WUFDbEMsSUFBR0MsYUFBYUMsT0FBTyxDQUFDTCxlQUFjO2dCQUNsQyxJQUFJTSxPQUFPQyxLQUFLQyxLQUFLLENBQUNKLGFBQWFDLE9BQU8sQ0FBQ0w7Z0JBQzNDLElBQUdNLEtBQUtHLE1BQU0sSUFBSSxJQUFJLElBQUlILEtBQUtHLE1BQU0sQ0FBQ3BCLE1BQU0sSUFBSSxJQUFHO29CQUdqRCxzREFBc0Q7b0JBQ3REWSxZQUFZUyxpQkFBaUJDLFNBQVNDLGVBQWUsRUFBRUMsZ0JBQWdCLENBQUMsZ0JBQWdCQyxJQUFJO29CQUM1RlosY0FBY1EsaUJBQWlCQyxTQUFTQyxlQUFlLEVBQUVDLGdCQUFnQixDQUFDLGtCQUFrQkMsSUFBSTtvQkFDaEdYLGFBQWFPLGlCQUFpQkMsU0FBU0MsZUFBZSxFQUFFQyxnQkFBZ0IsQ0FBQyxpQkFBaUJDLElBQUk7b0JBRTlGeEIsVUFBVVc7b0JBQ1ZULFVBQVVVO29CQUNWUixVQUFVUztnQkFDWixPQUNJO29CQUVGLHVDQUF1QztvQkFDdkNRLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsZ0JBQWdCVixLQUFLRyxNQUFNLENBQUNwQixNQUFNO29CQUM3RXNCLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsa0JBQWtCVixLQUFLRyxNQUFNLENBQUNsQixNQUFNO29CQUMvRW9CLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsaUJBQWlCVixLQUFLRyxNQUFNLENBQUNoQixNQUFNO29CQUU5RUgsVUFBVWdCLEtBQUtHLE1BQU0sQ0FBQ3BCLE1BQU07b0JBQzVCRyxVQUFVYyxLQUFLRyxNQUFNLENBQUNsQixNQUFNO29CQUM1QkcsVUFBVVksS0FBS0csTUFBTSxDQUFDaEIsTUFBTTtnQkFDOUIsQ0FBQztZQUNMLE9BQ0k7Z0JBQ0F3QixRQUFRQyxHQUFHLENBQUM7WUFDWixtRUFBbUU7WUFFdkUsQ0FBQztRQUVILENBQUM7SUFFSCxHQUFHLEVBQUU7SUFHTCxNQUFNQyxnQkFBZ0IsQ0FBQ0MsUUFBVTtRQUMvQjlCLFVBQVU4QixNQUFNQyxNQUFNLENBQUNDLEtBQUs7UUFDNUJYLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsZ0JBQWdCSSxNQUFNQyxNQUFNLENBQUNDLEtBQUs7SUFDL0U7SUFFQSxNQUFNQyxnQkFBZ0IsQ0FBQ0gsUUFBVTtRQUMvQjVCLFVBQVU0QixNQUFNQyxNQUFNLENBQUNDLEtBQUs7UUFDNUJYLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsa0JBQWtCSSxNQUFNQyxNQUFNLENBQUNDLEtBQUs7SUFDakY7SUFFQSxNQUFNRSxnQkFBZ0IsQ0FBQ0osUUFBVTtRQUMvQjFCLFVBQVUwQixNQUFNQyxNQUFNLENBQUNDLEtBQUs7UUFDNUJYLFNBQVNDLGVBQWUsQ0FBQ0csS0FBSyxDQUFDQyxXQUFXLENBQUMsaUJBQWlCSSxNQUFNQyxNQUFNLENBQUNDLEtBQUs7SUFDaEY7SUFFQSxTQUFTRyxhQUFZO1FBRW5CLHdFQUF3RTtRQUN4RSxJQUFJeEIsWUFBWVMsaUJBQWlCQyxTQUFTQyxlQUFlLEVBQUVDLGdCQUFnQixDQUFDLGdCQUFnQkMsSUFBSTtRQUNoRyxJQUFJWixjQUFjUSxpQkFBaUJDLFNBQVNDLGVBQWUsRUFBRUMsZ0JBQWdCLENBQUMsa0JBQWtCQyxJQUFJO1FBQ3BHLElBQUlYLGFBQWFPLGlCQUFpQkMsU0FBU0MsZUFBZSxFQUFFQyxnQkFBZ0IsQ0FBQyxpQkFBaUJDLElBQUk7UUFFbEcsSUFBSVIsT0FBT0MsS0FBS0MsS0FBSyxDQUFDSixhQUFhQyxPQUFPLENBQUNqQixNQUFNVyxLQUFLO1FBRXRETyxLQUFLRyxNQUFNLEdBQUc7WUFBQ3BCLFFBQVFZO1lBQVdWLFFBQU9XO1lBQWFULFFBQU9VO1FBQVU7UUFFdkVmLE1BQU1rQixJQUFJLENBQUNBLEtBQUtHLE1BQU07UUFFdEJMLGFBQWFzQixPQUFPLENBQUN0QyxNQUFNVyxLQUFLLEVBQUVRLEtBQUtvQixTQUFTLENBQUNyQjtRQUVqRFYsY0FBYztRQUVkZ0MsV0FBVyxJQUFNO1lBQ2YsdUNBQXVDO1lBQ3ZDaEMsY0FBYztRQUNoQixHQUFHO0lBRUw7SUFFQSxxQkFDRSw4REFBQ2lDO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDRDtnQkFBSUMsV0FBVTswQkFDYiw0RUFBQ0M7b0JBQ0dDLE1BQUs7b0JBQ0xGLFdBQVU7b0JBQ1ZHLElBQUc7b0JBQ0hYLE9BQU9qQztvQkFDUDZDLFVBQVVmOzs7Ozs7Ozs7OzswQkFHaEIsOERBQUNVO2dCQUFJQyxXQUFVOzBCQUNmLDRFQUFDQztvQkFDS0MsTUFBSztvQkFDTEYsV0FBVTtvQkFDVkcsSUFBRztvQkFDSFgsT0FBTy9CO29CQUNQMkMsVUFBVVg7Ozs7Ozs7Ozs7OzBCQUdoQiw4REFBQ007Z0JBQUlDLFdBQVU7MEJBQ2YsNEVBQUNDO29CQUNLQyxNQUFLO29CQUNMRixXQUFVO29CQUNWRyxJQUFHO29CQUNIWCxPQUFPN0I7b0JBQ1B5QyxVQUFVVjs7Ozs7Ozs7Ozs7MEJBR2hCLDhEQUFDSztnQkFBSUMsV0FBVTswQkFDYiw0RUFBQ0s7b0JBQU9MLFdBQVU7b0JBQWdCTSxTQUFTWDs4QkFBYTlCOzs7Ozs7Ozs7Ozs7Ozs7OztBQUtoRSxDQUFDO0dBakl1QlI7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL2NvbG9yUGlja2VyLmpzP2YwZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuLy8gYWxsb3dzIHRoZSB1c2VyIHRvIHNldCB0aGUgMyBtYWluIGNvbG9ycyBvbiBwYWdlXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2xvclBpY2tlcihwcm9wcykge1xuICBjb25zdCBbY29sb3IxLCBzZXRDb2xvcjFdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbY29sb3IyLCBzZXRDb2xvcjJdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbY29sb3IzLCBzZXRDb2xvcjNdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IFtidXR0b25UZXh0LCBzZXRCdXR0b25UZXh0XSA9IHVzZVN0YXRlKCdTYXZlIFRoZW1lJyk7XG4gIGNvbnN0IFtidXR0b25Db2xvciwgc2V0QnV0dG9uQ29sb3JdID0gdXNlU3RhdGUoKTtcblxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG5cbiAgICBpZihwcm9wcy5zdGFrZSAhPSBudWxsKXtcbiAgICAgIGxldCBzdGFrZUFkZHJlc3MgPSBwcm9wcy5zdGFrZTtcbiAgICAgIGxldCBtYWluQ29sb3IgPSAnJztcbiAgICAgIGxldCBzZWNvbmRDb2xvciA9ICcnO1xuICAgICAgbGV0IHRoaXJkQ29sb3IgPSAnJztcbiAgXG4gICAgICAvLyBjaGVja3Mgc3RvcmFnZSBmb3Igc2F2ZWQgY29sb3JzXG4gICAgICBpZihsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdGFrZUFkZHJlc3MpKXtcbiAgICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oc3Rha2VBZGRyZXNzKSk7XG4gICAgICAgICAgaWYoZGF0YS5jb2xvcnMgPT0gbnVsbCB8fCBkYXRhLmNvbG9ycy5jb2xvcjEgPT0gJycpe1xuXG5cbiAgICAgICAgICAgIC8vIGlmIG5vIGNvbG9ycyBpbiBzdG9yYWdlLCBnZXQgY29sb3JzIGZyb20gZ2xvYmFsLmNzc1xuICAgICAgICAgICAgbWFpbkNvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoJy0tbWFpbi1jb2xvcicpLnRyaW0oKTtcbiAgICAgICAgICAgIHNlY29uZENvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoJy0tc2Vjb25kLWNvbG9yJykudHJpbSgpO1xuICAgICAgICAgICAgdGhpcmRDb2xvciA9IGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKCctLXRoaXJkLWNvbG9yJykudHJpbSgpO1xuXG4gICAgICAgICAgICBzZXRDb2xvcjEobWFpbkNvbG9yKTtcbiAgICAgICAgICAgIHNldENvbG9yMihzZWNvbmRDb2xvcik7XG4gICAgICAgICAgICBzZXRDb2xvcjModGhpcmRDb2xvcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2V7XG5cbiAgICAgICAgICAgIC8vIGlmIGNvbG9ycyBmb3VuZCBpbiBzdG9yYWdlLCB1c2UgdGhlbVxuICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLW1haW4tY29sb3InLCBkYXRhLmNvbG9ycy5jb2xvcjEpO1xuICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXNlY29uZC1jb2xvcicsIGRhdGEuY29sb3JzLmNvbG9yMik7XG4gICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tdGhpcmQtY29sb3InLCBkYXRhLmNvbG9ycy5jb2xvcjMpO1xuXG4gICAgICAgICAgICBzZXRDb2xvcjEoZGF0YS5jb2xvcnMuY29sb3IxKTtcbiAgICAgICAgICAgIHNldENvbG9yMihkYXRhLmNvbG9ycy5jb2xvcjIpO1xuICAgICAgICAgICAgc2V0Q29sb3IzKGRhdGEuY29sb3JzLmNvbG9yMyk7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZXtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZWxzZScpO1xuICAgICAgICAgIC8vIEdldCB0aGUgdmFsdWUgb2YgdGhlIC0tbWFpbi1jb2xvciB2YXJpYWJsZSBmcm9tIHRoZSByb290IGVsZW1lbnRcbiAgICAgICAgICBcbiAgICAgIH1cblxuICAgIH1cblxuICB9LCBbXSk7XG5cblxuICBjb25zdCBoYW5kbGVDaGFuZ2UxID0gKGV2ZW50KSA9PiB7XG4gICAgc2V0Q29sb3IxKGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLW1haW4tY29sb3InLCBldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZTIgPSAoZXZlbnQpID0+IHtcbiAgICBzZXRDb2xvcjIoZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tc2Vjb25kLWNvbG9yJywgZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UzID0gKGV2ZW50KSA9PiB7XG4gICAgc2V0Q29sb3IzKGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXRoaXJkLWNvbG9yJywgZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgfTtcblxuICBmdW5jdGlvbiBzYXZlQ29sb3JzKCl7XG5cbiAgICAvLyBzYXZlcyBjb2xvciBkYXRhIGludG8gbG9jYWwgc3RvcmFnZSBzbyBzYW1lIGNvbG9ycyBhcmUgdXNlZCBvbiByZXN1bWVcbiAgICBsZXQgbWFpbkNvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoJy0tbWFpbi1jb2xvcicpLnRyaW0oKTtcbiAgICBsZXQgc2Vjb25kQ29sb3IgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZSgnLS1zZWNvbmQtY29sb3InKS50cmltKCk7XG4gICAgbGV0IHRoaXJkQ29sb3IgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZSgnLS10aGlyZC1jb2xvcicpLnRyaW0oKTtcblxuICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShwcm9wcy5zdGFrZSkpO1xuXG4gICAgZGF0YS5jb2xvcnMgPSB7Y29sb3IxOiBtYWluQ29sb3IsIGNvbG9yMjpzZWNvbmRDb2xvciwgY29sb3IzOnRoaXJkQ29sb3J9O1xuXG4gICAgcHJvcHMuZGF0YShkYXRhLmNvbG9ycyk7XG5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShwcm9wcy5zdGFrZSwgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuXG4gICAgc2V0QnV0dG9uVGV4dCgnU2F2ZWQhJyk7XG5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIC8vIFJlc2V0IHRoZSBidXR0b24gdGV4dCBhZnRlciAxIHNlY29uZFxuICAgICAgc2V0QnV0dG9uVGV4dChcIlNhdmUgQ29sb3JzXCIpO1xuICAgIH0sIDEwMDApO1xuXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdvcHRpb25zLWNvbG9yJz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdvcHRpb24nPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJjb2xvclwiXG4gICAgICAgICAgICBjbGFzc05hbWU9J29wdGlvbi1idXR0b24nXG4gICAgICAgICAgICBpZD1cImNvbG9yLXNlbGVjdG9yMVwiXG4gICAgICAgICAgICB2YWx1ZT17Y29sb3IxfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZTF9XG4gICAgICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nb3B0aW9uJz5cbiAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cImNvbG9yXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT0nb3B0aW9uLWJ1dHRvbidcbiAgICAgICAgICAgIGlkPVwiY29sb3Itc2VsZWN0b3IyXCJcbiAgICAgICAgICAgIHZhbHVlPXtjb2xvcjJ9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlMn1cbiAgICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nb3B0aW9uJz5cbiAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cImNvbG9yXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT0nb3B0aW9uLWJ1dHRvbidcbiAgICAgICAgICAgIGlkPVwiY29sb3Itc2VsZWN0b3IzXCJcbiAgICAgICAgICAgIHZhbHVlPXtjb2xvcjN9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlM31cbiAgICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nb3B0aW9uJz5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J29wdGlvbi1idXR0b24nIG9uQ2xpY2s9e3NhdmVDb2xvcnN9PntidXR0b25UZXh0fTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkNvbG9yUGlja2VyIiwicHJvcHMiLCJjb2xvcjEiLCJzZXRDb2xvcjEiLCJjb2xvcjIiLCJzZXRDb2xvcjIiLCJjb2xvcjMiLCJzZXRDb2xvcjMiLCJidXR0b25UZXh0Iiwic2V0QnV0dG9uVGV4dCIsImJ1dHRvbkNvbG9yIiwic2V0QnV0dG9uQ29sb3IiLCJzdGFrZSIsInN0YWtlQWRkcmVzcyIsIm1haW5Db2xvciIsInNlY29uZENvbG9yIiwidGhpcmRDb2xvciIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiY29sb3JzIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiZ2V0UHJvcGVydHlWYWx1ZSIsInRyaW0iLCJzdHlsZSIsInNldFByb3BlcnR5IiwiY29uc29sZSIsImxvZyIsImhhbmRsZUNoYW5nZTEiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwiaGFuZGxlQ2hhbmdlMiIsImhhbmRsZUNoYW5nZTMiLCJzYXZlQ29sb3JzIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsInNldFRpbWVvdXQiLCJkaXYiLCJjbGFzc05hbWUiLCJpbnB1dCIsInR5cGUiLCJpZCIsIm9uQ2hhbmdlIiwiYnV0dG9uIiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/colorPicker.js\n"));

/***/ }),

/***/ "./src/pages/nftGrid.js":
/*!******************************!*\
  !*** ./src/pages/nftGrid.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ NftGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_shared_lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/shared/lib/utils */ \"./node_modules/next/dist/shared/lib/utils.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// takes list of tokens with ipfs and metadata and oupts a grid diplsaying said nfts\nfunction NftGrid(props) {\n    _s();\n    const [display, setDisplay] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        function func() {\n            if (props.nfts != null) {\n                let nftGrid = addNftsToGrid(props.nfts);\n                setDisplay(nftGrid);\n            }\n        }\n        func();\n    }, [\n        props\n    ]);\n    function copyText(event, text) {\n        navigator.clipboard.writeText(text).then(()=>{\n            // Update the button text to \"Copied!\"\n            const button = event.target;\n            event.target.innerText = \"Copied\";\n            setTimeout(()=>{\n                // Reset the button text after 1 second\n                button.textContent = \"Copy\";\n            }, 1000);\n        });\n    }\n    function addNftsToGrid(nfts) {\n        let grid = [];\n        for (const element of nfts){\n            let policy = props.policy;\n            let token = element;\n            let assetName = token.asset_name;\n            let assetId = policy + assetName;\n            let ipfs = \"/black.jpeg\";\n            let decryptName = Buffer.from(assetName, \"hex\").toString();\n            ipfs = token.ipfs;\n            grid.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid-item\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        className: \"grid-img\",\n                        src: ipfs,\n                        alt: \"failed to load image\",\n                        width: 270,\n                        height: 270,\n                        onClick: ()=>router.push(\"/token/\" + token.policy_id + token.asset_name + \"?stake=\" + props.stake)\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                        lineNumber: 56,\n                        columnNumber: 15\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid-item-text\",\n                        style: {\n                            fontWeight: \"bolder\"\n                        },\n                        children: decryptName\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                        lineNumber: 64,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid-item-text\",\n                        children: [\n                            \"Asset Name: ..\",\n                            assetName.slice(-7),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"policy-button\",\n                                onClick: (e)=>copyText(e, assetId),\n                                children: \"Copy\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                                lineNumber: 69,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                className: \"policy-button\",\n                                href: \"https://www.jpg.store/asset/\" + assetId,\n                                children: \"JPG.store\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                                lineNumber: 72,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                        lineNumber: 67,\n                        columnNumber: 15\n                    }, this)\n                ]\n            }, token.asset_name + \"nft\", true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                lineNumber: 55,\n                columnNumber: 13\n            }, this));\n        }\n        return grid;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"grid-nft\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                children: \"Your NFTs\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n                lineNumber: 81,\n                columnNumber: 38\n            }, this),\n            display\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/nftGrid.js\",\n        lineNumber: 81,\n        columnNumber: 12\n    }, this);\n}\n_s(NftGrid, \"O6pXH/dFd/GL64WZIBwAW52JcdY=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter\n    ];\n});\n_c = NftGrid;\nvar _c;\n$RefreshReg$(_c, \"NftGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvbmZ0R3JpZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEQ7QUFDN0I7QUFDRjtBQUNXO0FBQ2U7QUFHdkQsb0ZBQW9GO0FBQ3JFLFNBQVNPLFFBQVFDLEtBQUssRUFBQzs7SUFFbEMsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdKLCtDQUFRQTtJQUN0QyxNQUFNSyxTQUFTUixzREFBU0E7SUFHeEJDLGdEQUFTQSxDQUFDLElBQU07UUFDWixTQUFTUSxPQUFPO1lBQ1osSUFBR0osTUFBTUssSUFBSSxJQUFJLElBQUksRUFBQztnQkFDbEIsSUFBSUMsVUFBVUMsY0FBY1AsTUFBTUssSUFBSTtnQkFDdENILFdBQVdJO1lBQ2YsQ0FBQztRQUVMO1FBQ0FGO0lBQ0osR0FBRztRQUFDSjtLQUFNO0lBRVYsU0FBU1EsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUU7UUFDN0JDLFVBQVVDLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDSCxNQUFNSSxJQUFJLENBQUMsSUFBTTtZQUM3QyxzQ0FBc0M7WUFDdEMsTUFBTUMsU0FBU04sTUFBTU8sTUFBTTtZQUMzQlAsTUFBTU8sTUFBTSxDQUFDQyxTQUFTLEdBQUc7WUFDekJDLFdBQVcsSUFBTTtnQkFDZix1Q0FBdUM7Z0JBQ3ZDSCxPQUFPSSxXQUFXLEdBQUc7WUFDdkIsR0FBRztRQUNMO0lBQ0Y7SUFFQSxTQUFTWixjQUFjRixJQUFJLEVBQUU7UUFDekIsSUFBSWUsT0FBTyxFQUFFO1FBR2IsS0FBSyxNQUFNQyxXQUFXaEIsS0FBTTtZQUMzQixJQUFJaUIsU0FBU3RCLE1BQU1zQixNQUFNO1lBQ3pCLElBQUlDLFFBQVFGO1lBQ1osSUFBSUcsWUFBWUQsTUFBTUUsVUFBVTtZQUNoQyxJQUFJQyxVQUFVSixTQUFPRTtZQUNyQixJQUFJRyxPQUFPO1lBRVgsSUFBSUMsY0FBY0MsTUFBTUEsQ0FBQ0MsSUFBSSxDQUFDTixXQUFXLE9BQU9PLFFBQVE7WUFHeERKLE9BQU9KLE1BQU1JLElBQUk7WUFFaEJQLEtBQUtZLElBQUksZUFDUCw4REFBQ0M7Z0JBQW1DQyxXQUFVOztrQ0FDNUMsOERBQUN6QyxtREFBS0E7d0JBQ0p5QyxXQUFVO3dCQUNWQyxLQUFLUjt3QkFDTFMsS0FBSTt3QkFDSkMsT0FBTzt3QkFDUEMsUUFBUTt3QkFDUkMsU0FBUyxJQUFNcEMsT0FBTzZCLElBQUksQ0FBQyxZQUFZVCxNQUFNaUIsU0FBUyxHQUFHakIsTUFBTUUsVUFBVSxHQUFDLFlBQVV6QixNQUFNeUMsS0FBSzs7Ozs7O2tDQUUvRiw4REFBQ1I7d0JBQUlDLFdBQVU7d0JBQWlCUSxPQUFPOzRCQUFDQyxZQUFZO3dCQUFRO2tDQUMzRGY7Ozs7OztrQ0FFSCw4REFBQ0s7d0JBQUlDLFdBQVU7OzRCQUFpQjs0QkFDZlYsVUFBVW9CLEtBQUssQ0FBQyxDQUFDOzBDQUNoQyw4REFBQzdCO2dDQUFPbUIsV0FBVTtnQ0FBZ0JLLFNBQVMsQ0FBQ00sSUFBTXJDLFNBQVNxQyxHQUFHbkI7MENBQVU7Ozs7OzswQ0FHeEUsOERBQUNoQyxrREFBSUE7Z0NBQUN3QyxXQUFZO2dDQUFnQlksTUFBTSxpQ0FBK0JwQjswQ0FBUzs7Ozs7Ozs7Ozs7OztlQWpCMUVILE1BQU1FLFVBQVUsR0FBRzs7Ozs7UUFxQmpDO1FBRUEsT0FBT0w7SUFDVDtJQUVGLHFCQUFPLDhEQUFDYTtRQUFJQyxXQUFVOzswQkFBVyw4REFBQ2E7MEJBQU07Ozs7OztZQUFrQjlDOzs7Ozs7O0FBQzlELENBQUM7R0F6RXVCRjs7UUFHTEosa0RBQVNBOzs7S0FISkkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL25mdEdyaWQuanM/OGE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREaXNwbGF5TmFtZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi91dGlsc1wiO1xuaW1wb3J0IEltYWdlIGZyb20gXCJuZXh0L2ltYWdlXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVkdWNlciwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuXG5cbi8vIHRha2VzIGxpc3Qgb2YgdG9rZW5zIHdpdGggaXBmcyBhbmQgbWV0YWRhdGEgYW5kIG91cHRzIGEgZ3JpZCBkaXBsc2F5aW5nIHNhaWQgbmZ0c1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmZ0R3JpZChwcm9wcyl7XG5cbiAgICBjb25zdCBbZGlzcGxheSwgc2V0RGlzcGxheV0gPSB1c2VTdGF0ZSgpO1xuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBmdW5jdGlvbiBmdW5jICgpe1xuICAgICAgICAgICAgaWYocHJvcHMubmZ0cyAhPSBudWxsKXtcbiAgICAgICAgICAgICAgICBsZXQgbmZ0R3JpZCA9IGFkZE5mdHNUb0dyaWQocHJvcHMubmZ0cyk7XG4gICAgICAgICAgICAgICAgc2V0RGlzcGxheShuZnRHcmlkKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICAgIGZ1bmMoKTtcbiAgICB9LCBbcHJvcHNdKVxuXG4gICAgZnVuY3Rpb24gY29weVRleHQoZXZlbnQsIHRleHQpIHtcbiAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHRleHQpLnRoZW4oKCkgPT4ge1xuICAgICAgICAvLyBVcGRhdGUgdGhlIGJ1dHRvbiB0ZXh0IHRvIFwiQ29waWVkIVwiXG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgZXZlbnQudGFyZ2V0LmlubmVyVGV4dCA9IFwiQ29waWVkXCI7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIC8vIFJlc2V0IHRoZSBidXR0b24gdGV4dCBhZnRlciAxIHNlY29uZFxuICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ29weVwiO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZE5mdHNUb0dyaWQobmZ0cykge1xuICAgICAgICBsZXQgZ3JpZCA9IFtdO1xuXG4gICAgICBcbiAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIG5mdHMpIHtcbiAgICAgICAgIGxldCBwb2xpY3kgPSBwcm9wcy5wb2xpY3k7XG4gICAgICAgICBsZXQgdG9rZW4gPSBlbGVtZW50O1xuICAgICAgICAgbGV0IGFzc2V0TmFtZSA9IHRva2VuLmFzc2V0X25hbWU7XG4gICAgICAgICBsZXQgYXNzZXRJZCA9IHBvbGljeSthc3NldE5hbWU7XG4gICAgICAgICBsZXQgaXBmcyA9ICcvYmxhY2suanBlZydcblxuICAgICAgICAgbGV0IGRlY3J5cHROYW1lID0gQnVmZmVyLmZyb20oYXNzZXROYW1lLCAnaGV4JykudG9TdHJpbmcoKTtcblxuXG4gICAgICAgICBpcGZzID0gdG9rZW4uaXBmcztcblxuICAgICAgICAgIGdyaWQucHVzaChcbiAgICAgICAgICAgIDxkaXYga2V5PXt0b2tlbi5hc3NldF9uYW1lICsgJ25mdCd9IGNsYXNzTmFtZT1cImdyaWQtaXRlbVwiPlxuICAgICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJncmlkLWltZ1wiXG4gICAgICAgICAgICAgICAgc3JjPXtpcGZzfVxuICAgICAgICAgICAgICAgIGFsdD1cImZhaWxlZCB0byBsb2FkIGltYWdlXCJcbiAgICAgICAgICAgICAgICB3aWR0aD17MjcwfVxuICAgICAgICAgICAgICAgIGhlaWdodD17MjcwfVxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHJvdXRlci5wdXNoKCcvdG9rZW4vJyArIHRva2VuLnBvbGljeV9pZCArIHRva2VuLmFzc2V0X25hbWUrJz9zdGFrZT0nK3Byb3BzLnN0YWtlKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQtaXRlbS10ZXh0XCIgc3R5bGU9e3tmb250V2VpZ2h0OiBcImJvbGRlclwifX0+XG4gICAgICAgICAgICAgICAge2RlY3J5cHROYW1lfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkLWl0ZW0tdGV4dFwiPlxuICAgICAgICAgICAgICAgIEFzc2V0IE5hbWU6IC4ue2Fzc2V0TmFtZS5zbGljZSgtNyl9XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwb2xpY3ktYnV0dG9uXCIgb25DbGljaz17KGUpID0+IGNvcHlUZXh0KGUsIGFzc2V0SWQpfT5cbiAgICAgICAgICAgICAgICAgIENvcHlcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8TGluayBjbGFzc05hbWUgPSAncG9saWN5LWJ1dHRvbicgaHJlZj17J2h0dHBzOi8vd3d3LmpwZy5zdG9yZS9hc3NldC8nK2Fzc2V0SWR9PkpQRy5zdG9yZTwvTGluaz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICBcbiAgICAgICAgcmV0dXJuIGdyaWQ7XG4gICAgICB9XG5cbiAgICByZXR1cm4oPGRpdiBjbGFzc05hbWU9XCJncmlkLW5mdFwiPjxsYWJlbD5Zb3VyIE5GVHM8L2xhYmVsPntkaXNwbGF5fTwvZGl2Pilcbn0iXSwibmFtZXMiOlsiZ2V0RGlzcGxheU5hbWUiLCJJbWFnZSIsIkxpbmsiLCJ1c2VSb3V0ZXIiLCJ1c2VFZmZlY3QiLCJ1c2VSZWR1Y2VyIiwidXNlU3RhdGUiLCJOZnRHcmlkIiwicHJvcHMiLCJkaXNwbGF5Iiwic2V0RGlzcGxheSIsInJvdXRlciIsImZ1bmMiLCJuZnRzIiwibmZ0R3JpZCIsImFkZE5mdHNUb0dyaWQiLCJjb3B5VGV4dCIsImV2ZW50IiwidGV4dCIsIm5hdmlnYXRvciIsImNsaXBib2FyZCIsIndyaXRlVGV4dCIsInRoZW4iLCJidXR0b24iLCJ0YXJnZXQiLCJpbm5lclRleHQiLCJzZXRUaW1lb3V0IiwidGV4dENvbnRlbnQiLCJncmlkIiwiZWxlbWVudCIsInBvbGljeSIsInRva2VuIiwiYXNzZXROYW1lIiwiYXNzZXRfbmFtZSIsImFzc2V0SWQiLCJpcGZzIiwiZGVjcnlwdE5hbWUiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJwdXNoIiwiZGl2IiwiY2xhc3NOYW1lIiwic3JjIiwiYWx0Iiwid2lkdGgiLCJoZWlnaHQiLCJvbkNsaWNrIiwicG9saWN5X2lkIiwic3Rha2UiLCJzdHlsZSIsImZvbnRXZWlnaHQiLCJzbGljZSIsImUiLCJocmVmIiwibGFiZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/nftGrid.js\n"));

/***/ }),

/***/ "./src/pages/policy.js":
/*!*****************************!*\
  !*** ./src/pages/policy.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Policy; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\nfunction Policy(props) {\n    _s();\n    const [display, setDisplay] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n        policy: \"\",\n        thumbnail: \"/black.jpeg\",\n        floorPrice: \"\",\n        holders: \"\",\n        supply: \"\",\n        volume: \"\"\n    });\n    const [currency, setCurrency] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n        value: 1,\n        symbol: \"$\"\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        async function func() {\n            if (props.policy != null && props.prices != null) {\n                let policyData = await getCnftPolicyData(props.policy);\n                if (policyData != null) {\n                    let currency = props.prices.currency;\n                    setCurrency(currency);\n                    let floorPrice = (policyData.floor_price / 1000000 * currency.value).toFixed(2);\n                    let holders = policyData.asset_holders;\n                    let supply = policyData.asset_minted;\n                    let volume = (policyData.total_volume / 1000000000000 * currency.value).toFixed(2);\n                    let thumbnail = getIpfs(policyData.thumbnail);\n                    let obj = {\n                        policy: props.policy,\n                        thumbnail: thumbnail,\n                        floorPrice: floorPrice,\n                        holders: holders,\n                        supply: supply,\n                        volume: volume\n                    };\n                    setDisplay(obj);\n                }\n            }\n        }\n        func();\n    }, [\n        props\n    ]);\n    // if metadata has been fetched\n    // find the ipfs link under 'image' metadata tag and store it\n    function getIpfs(ipfs) {\n        // convert all ipfs formats to the a searchable format that can be fetched in a <img> tag\n        try {\n            // links are sometimes stored in arrays\n            // this finds ipfs links in the array\n            if (Array.isArray(ipfs)) {\n                let newipfs = \"\";\n                for (const element of ipfs){\n                    newipfs = newipfs + element;\n                }\n                if (newipfs.startsWith(\"ba\")) {\n                    newipfs = \"http://dweb.link/ipfs/\" + ipfs;\n                    newipfs = newipfs.replace(/,/g, \"\");\n                }\n                return newipfs;\n            }\n            // normal ipfs in image tags\n            if (ipfs.startsWith(\"ipfs://\")) {\n                ipfs = ipfs.slice(7);\n                if (ipfs.startsWith(\"ipfs/\")) {\n                    ipfs = ipfs.slice(5);\n                }\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            } else if (ipfs.startsWith(\"ipfs/\")) {\n                ipfs = ipfs.slice(5);\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            } else if (ipfs.startsWith(\"Qm\")) {\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            }\n        } catch (e) {\n            return null;\n        }\n        return ipfs;\n    }\n    async function getCnftPolicyData(policy) {\n        try {\n            const data = await fetch(\"https://api.opencnft.io/1/policy/\" + policy, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            const res = await data.json();\n            if (data.status != 200) {\n                return null;\n            }\n            return res;\n        } catch (error) {\n            return null;\n        }\n    }\n    function copyText(event, text) {\n        navigator.clipboard.writeText(text).then(()=>{\n            // Update the button text to \"Copied!\"\n            const button = event.target;\n            event.target.innerText = \"Copied\";\n            setTimeout(()=>{\n                // Reset the button text after 1 second\n                button.textContent = \"Copy\";\n            }, 1000);\n        });\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"policy-info\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"policy-section\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"policy-item-info\",\n                    children: [\n                        \"Policy:\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                            className: \"policy-button\",\n                            href: \"/token/\" + display.policy + \"?stake=\" + props.stake,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"policy-value\",\n                                children: display.policy\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                lineNumber: 110,\n                                columnNumber: 107\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                            lineNumber: 110,\n                            columnNumber: 19\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"policy-button\",\n                            onClick: (e)=>copyText(e, display.policy),\n                            children: \"Copy\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                            lineNumber: 111,\n                            columnNumber: 19\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                    lineNumber: 109,\n                    columnNumber: 15\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                lineNumber: 108,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"policy-section-item\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"policy-item-info\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                            src: display.thumbnail,\n                            width: 100,\n                            height: 100,\n                            alt: \"no img\",\n                            className: \"policy-thumbnail\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                            lineNumber: 121,\n                            columnNumber: 17\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                        lineNumber: 120,\n                        columnNumber: 15\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"policy-item-info\",\n                        children: [\n                            \"Supply:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"value\",\n                                children: display.supply\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                lineNumber: 124,\n                                columnNumber: 22\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                        lineNumber: 123,\n                        columnNumber: 15\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"policy-item-info\",\n                        children: [\n                            \"Volume: \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"value\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"currency\",\n                                        children: currency.symbol\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                        lineNumber: 127,\n                                        columnNumber: 46\n                                    }, this),\n                                    display.volume,\n                                    \"m\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                lineNumber: 127,\n                                columnNumber: 23\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                        lineNumber: 126,\n                        columnNumber: 15\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"policy-item-info\",\n                        children: [\n                            \"Floor Price: \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"value\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"currency\",\n                                        children: currency.symbol\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                        lineNumber: 130,\n                                        columnNumber: 51\n                                    }, this),\n                                    display.floorPrice\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                                lineNumber: 130,\n                                columnNumber: 28\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                        lineNumber: 129,\n                        columnNumber: 15\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n                lineNumber: 119,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policy.js\",\n        lineNumber: 107,\n        columnNumber: 12\n    }, this);\n}\n_s(Policy, \"elI56tQpFMl/h2CKO9MLxaCdKeQ=\");\n_c = Policy;\nvar _c;\n$RefreshReg$(_c, \"Policy\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/policy.js\n"));

/***/ }),

/***/ "./src/pages/policyData.js":
/*!*********************************!*\
  !*** ./src/pages/policyData.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collection */ \"./src/pages/collection.js\");\n/* harmony import */ var _nftGrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nftGrid */ \"./src/pages/nftGrid.js\");\n/* harmony import */ var _policy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policy */ \"./src/pages/policy.js\");\n/* harmony import */ var _prices__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prices */ \"./src/pages/prices.js\");\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./token */ \"./src/pages/token.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction PolicyData(props) {\n    _s();\n    const [policy, setPolicy] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [tokens, setTokens] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [prices, setPrices] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const getPolicyData = async ()=>{\n            if (props.stake == null) {\n                console.log(\"stake was undefined\");\n            } else if (props.policy == null) {\n                console.log(\"policy undefined\");\n            } else {\n                console.log(props.stake + \"- \" + props.policy);\n                let stakeAddress = props.stake;\n                if (stakeAddress.startsWith(\"$\")) {\n                    stakeAddress = await getAddressFromHandle(stakeAddress.slice(1));\n                }\n                if (stakeAddress != null) {\n                    let tokens = [];\n                    let assets = await getAssetsOfPolicyFromKoios(stakeAddress, props.policy);\n                    for (const element of assets){\n                        let token = new _token__WEBPACK_IMPORTED_MODULE_6__[\"default\"](element.asset_name, element.policy_id, element.quantity);\n                        token.metadata = await token.getMetadata();\n                        if (token.metadata != null) {\n                            let ipfs = token.getIpfsFromMetadata();\n                            token.ipfs = ipfs;\n                        }\n                        tokens.push(token);\n                    }\n                    setTokens(tokens);\n                } else {\n                    console.log(\"wallet error\");\n                }\n            }\n        };\n        getPolicyData();\n    }, [\n        props\n    ]);\n    // used when fetching handle address\n    async function getStakeFromAddressKoios(address) {\n        try {\n            const req = await fetch(\"https://api.koios.rest/api/v0/address_info\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"_addresses\": [\n                        address\n                    ]\n                })\n            });\n            const res = await req.json();\n            return res[0].stake_address;\n        } catch (error) {\n            return null;\n        }\n    }\n    // returns base address from handle\n    const getAddressFromHandle = async (handle)=>{\n        console.log(handle);\n        try {\n            let policyID = \"f0ff48bbb7bbe9d59a40f1ce90e9e9d0ff5002ec48f232b49ca0fb9a\";\n            // A blank Handle name should always be ignored.\n            if (handle.length === 0) {\n                return null;\n            }\n            // Convert handleName to hex encoding.\n            let assetName = Buffer.from(handle).toString(\"hex\");\n            let data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\" + policyID + assetName + \"/addresses\", {\n                headers: {\n                    // Your Blockfrost API key\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\"\n                }\n            });\n            let res = await data.json();\n            console.log(res);\n            let stake = await getStakeFromAddressKoios(res[0].address);\n            return stake;\n        } catch (error) {\n            console.log(error);\n            return null;\n        }\n    };\n    // no asset limit on how many assets gets returned on one request\n    // koios, blockfrost is limited by 100 results per page\n    async function getAssetsOfPolicyFromKoios(stakeAddress, policy) {\n        let assets = [];\n        try {\n            const req = await fetch(\"https://api.koios.rest/api/v0/account_assets\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"_stake_addresses\": [\n                        stakeAddress\n                    ]\n                })\n            });\n            const res = await req.json();\n            for(let i = 0; i < res[0].asset_list.length; i++){\n                let token = res[0].asset_list[i];\n                if (token.policy_id == policy) {\n                    assets.push(token);\n                }\n            }\n            return assets;\n        } catch (error) {\n            return null;\n        }\n    }\n    function setPriceData(data) {\n        setPrices(data);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_prices__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                data: setPriceData\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 155,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                children: \"Policy Info\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 156,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_policy__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                policy: props.policy,\n                prices: prices,\n                stake: props.stake\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 157,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                children: \"Your Wallet\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 158,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nftGrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                nfts: tokens,\n                policy: props.policy,\n                stake: props.stake\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 159,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_collection__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                policy: props.policy,\n                stake: props.stake\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n                lineNumber: 160,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/policyData.js\",\n        lineNumber: 154,\n        columnNumber: 12\n    }, this);\n}\n_s(PolicyData, \"uIGw6mgM49RNAgXiLVr2r4ER/t8=\");\n_c = PolicyData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (PolicyData);\nvar _c;\n$RefreshReg$(_c, \"PolicyData\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/policyData.js\n"));

/***/ }),

/***/ "./src/pages/prices.js":
/*!*****************************!*\
  !*** ./src/pages/prices.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Prices; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Prices(props) {\n    _s();\n    // time interval for price change datat\n    const [granularity, setGranularity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"24 hours\");\n    // current currency\n    const [currency, setCurrency] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        name: \"ada\",\n        value: 1,\n        symbol: \"₳\"\n    });\n    // displayed ada prices\n    const [adaUSD, setAdaUSD] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [adaGBP, setAdaGBP] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [adaBTC, setAdaBTC] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [adaETH, setAdaETH] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    // displayed price change\n    const [adaUsdChange, setAdaUsdChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [adaGbpChange, setAdaGbpChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [adaBtcChange, setAdaBtcChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [adaEthChange, setAdaEthChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // displayed price change colors\n    const [usdColor, setUsdColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"black\");\n    const [gbpColor, setGbpColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"black\");\n    const [btcColor, setBtcColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"black\");\n    const [ethColor, setEthColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"black\");\n    // json request of ADA market data\n    const [gecko, setGecko] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // ada price change - used by Fts\n    const [adaChange, setAdaChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        usd24h: 0,\n        usd7d: 0,\n        usd30d: 0,\n        usd1y: 0\n    });\n    // privacy option to '*' sensitive option -- defaults to on (true)\n    const [privacy, setPrivacy] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // runs on first page load\n    // gets ada price data and 24 hour price change for each currency\n    // sets prices in nav bar\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const getCardanoPrices = async ()=>{\n            let req = await fetch(\"https://api.coingecko.com/api/v3/coins/cardano?localization=false&tickers=false&developer_data=false\");\n            let res = await req.json();\n            setGecko(res);\n            //curent ada price in usd, gbp, btc and eth\n            let adaUSD = res.market_data.current_price.usd;\n            let adaGBP = res.market_data.current_price.gbp;\n            let adaBTC = res.market_data.current_price.btc;\n            let adaETH = res.market_data.current_price.eth;\n            setAdaUSD(adaUSD);\n            setAdaGBP(adaGBP);\n            setAdaBTC(adaBTC);\n            setAdaETH(adaETH);\n            // price change last 24 hours of usd, gbp, btc and eth\n            let adaUsd24h = res.market_data.price_change_percentage_24h_in_currency.usd;\n            let adaGbp24h = res.market_data.price_change_percentage_24h_in_currency.gbp;\n            let adaBtc24h = res.market_data.price_change_percentage_24h_in_currency.btc;\n            let adaEth24h = res.market_data.price_change_percentage_24h_in_currency.eth;\n            setAdaUsdChange(adaUsd24h);\n            setAdaGbpChange(adaGbp24h);\n            setAdaBtcChange(adaBtc24h);\n            setAdaEthChange(adaEth24h);\n            // price change 24h, 7d, 30d and 1y in USD\n            // passed as props for fts prices / currency\n            let usd24h = res.market_data.price_change_percentage_24h_in_currency.usd;\n            let usd7d = res.market_data.price_change_percentage_7d_in_currency.usd;\n            let usd30d = res.market_data.price_change_percentage_30d_in_currency.usd;\n            let usd1y = res.market_data.price_change_percentage_1y_in_currency.usd;\n            setAdaChange({\n                usd24h: usd24h,\n                usd7d: usd7d,\n                usd30d: usd30d,\n                usd1y: usd1y\n            });\n            let usdcolor = \"\";\n            let gbpcolor = \"\";\n            let btccolor = \"\";\n            let ethcolor = \"\";\n            if (adaUsd24h < 0) {\n                usdcolor = \"red\";\n            } else if (adaUsd24h == 0) {\n                usdcolor = \"grey\";\n            } else {\n                usdcolor = \"#7FFF00\";\n            }\n            if (adaGbp24h < 0) {\n                gbpcolor = \"red\";\n            } else if (adaGbp24h == 0) {\n                gbpcolor = \"grey\";\n            } else {\n                gbpcolor = \"#7FFF00\";\n            }\n            if (adaEth24h < 0) {\n                ethcolor = \"red\";\n            } else if (adaEth24h == 0) {\n                gbpcolor = \"grey\";\n            } else {\n                ethcolor = \"#7FFF00\";\n            }\n            if (adaBtc24h < 0) {\n                btccolor = \"red\";\n            } else if (adaBtc24h == 0) {\n                btccolor = \"grey\";\n            } else {\n                btccolor = \"#7FFF00\";\n            }\n            setUsdColor(usdcolor);\n            setGbpColor(gbpcolor);\n            setBtcColor(btccolor);\n            setEthColor(ethcolor);\n            props.data({\n                adaUSD: adaUSD,\n                adaGBP: adaGBP,\n                adaBTC: adaBTC,\n                adaETH: adaETH,\n                currency: currency,\n                usd24h: usd24h,\n                usd7d: usd7d,\n                usd30d: usd30d,\n                usd1y: usd1y,\n                privacy: privacy\n            });\n        };\n        getCardanoPrices();\n    }, []);\n    // change currency of all values in app - usd, gbp, ada, eth, btc\n    function changeCurrency(_currency) {\n        let newCurrency = \"\";\n        if (_currency.name == \"eth\") {\n            newCurrency = {\n                name: \"ada\",\n                value: 1,\n                symbol: \"₳\"\n            };\n        } else if (_currency.name == \"ada\") {\n            newCurrency = {\n                name: \"usd\",\n                value: adaUSD,\n                symbol: \"$\"\n            };\n        } else if (_currency.name == \"usd\") {\n            newCurrency = {\n                name: \"gbp\",\n                value: adaGBP,\n                symbol: \"\\xa3\"\n            };\n        } else if (_currency.name == \"gbp\") {\n            newCurrency = {\n                name: \"btc\",\n                value: adaBTC,\n                symbol: \"฿\"\n            };\n        } else if (_currency.name == \"btc\") {\n            newCurrency = {\n                name: \"eth\",\n                value: adaETH,\n                symbol: \"Ξ\"\n            };\n        }\n        props.data({\n            adaUSD: adaUSD,\n            adaGBP: adaGBP,\n            adaBTC: adaBTC,\n            adaETH: adaETH,\n            usd24h: adaChange.usd24h,\n            usd7d: adaChange.usd7d,\n            usd30d: adaChange.usd30d,\n            usd1y: adaChange.usd1y,\n            currency: newCurrency,\n            privacy: privacy\n        });\n        setCurrency(newCurrency);\n    }\n    // change time period of price change data - 24h, 7d, 30d or 1 year\n    function increaseGranularity(granularity) {\n        if (gecko != null) {\n            let adausdchange = \"\";\n            let adagbpchange = \"\";\n            let adabtcchange = \"\";\n            let adaethchhange = \"\";\n            if (granularity == \"24 hours\") {\n                adausdchange = gecko.market_data.price_change_percentage_24h_in_currency.usd.toFixed(2);\n                adagbpchange = gecko.market_data.price_change_percentage_24h_in_currency.gbp.toFixed(2);\n                adabtcchange = gecko.market_data.price_change_percentage_24h_in_currency.btc.toFixed(2);\n                adaethchhange = gecko.market_data.price_change_percentage_24h_in_currency.eth.toFixed(2);\n                setGranularity(\"7 days\");\n            } else if (granularity == \"7 days\") {\n                adausdchange = gecko.market_data.price_change_percentage_7d_in_currency.usd.toFixed(2);\n                adagbpchange = gecko.market_data.price_change_percentage_7d_in_currency.gbp.toFixed(2);\n                adabtcchange = gecko.market_data.price_change_percentage_7d_in_currency.btc.toFixed(2);\n                adaethchhange = gecko.market_data.price_change_percentage_7d_in_currency.eth.toFixed(2);\n                setGranularity(\"30 days\");\n            } else if (granularity == \"30 days\") {\n                adausdchange = gecko.market_data.price_change_percentage_30d_in_currency.usd.toFixed(2);\n                adagbpchange = gecko.market_data.price_change_percentage_30d_in_currency.gbp.toFixed(2);\n                adabtcchange = gecko.market_data.price_change_percentage_30d_in_currency.btc.toFixed(2);\n                adaethchhange = gecko.market_data.price_change_percentage_30d_in_currency.eth.toFixed(2);\n                setGranularity(\"60 days\");\n            } else if (granularity == \"60 days\") {\n                adausdchange = gecko.market_data.price_change_percentage_60d_in_currency.usd.toFixed(2);\n                adagbpchange = gecko.market_data.price_change_percentage_60d_in_currency.gbp.toFixed(2);\n                adabtcchange = gecko.market_data.price_change_percentage_60d_in_currency.btc.toFixed(2);\n                adaethchhange = gecko.market_data.price_change_percentage_60d_in_currency.eth.toFixed(2);\n                setGranularity(\"1 year\");\n            } else if (granularity == \"1 year\") {\n                adausdchange = gecko.market_data.price_change_percentage_1y_in_currency.usd.toFixed(2);\n                adagbpchange = gecko.market_data.price_change_percentage_1y_in_currency.gbp.toFixed(2);\n                adabtcchange = gecko.market_data.price_change_percentage_1y_in_currency.btc.toFixed(2);\n                adaethchhange = gecko.market_data.price_change_percentage_1y_in_currency.eth.toFixed(2);\n                setGranularity(\"24 hours\");\n            }\n            if (adausdchange < 0) {\n                setUsdColor(\"red\");\n            } else if (adausdchange == 0) {\n                setUsdColor(\"grey\");\n            } else {\n                setUsdColor(\"#7FFF00\");\n            }\n            if (adagbpchange < 0) {\n                setGbpColor(\"red\");\n            } else if (adagbpchange == 0) {\n                setGbpColor(\"grey\");\n            } else {\n                setGbpColor(\"#7FFF00\");\n            }\n            if (adaethchhange < 0) {\n                setEthColor(\"red\");\n            } else if (adaethchhange == 0) {\n                setEthColor(\"grey\");\n            } else {\n                setEthColor(\"#7FFF00\");\n            }\n            if (adabtcchange < 0) {\n                setBtcColor(\"red\");\n                ;\n            } else if (adabtcchange == 0) {\n                setBtcColor(\"grey\");\n            } else {\n                setBtcColor(\"#7FFF00\");\n            }\n            setAdaUsdChange(adausdchange);\n            setAdaGbpChange(adagbpchange);\n            setAdaBtcChange(adabtcchange);\n            setAdaEthChange(adaethchhange);\n        }\n    }\n    // privacy option to '*' any sensitive info\n    function changePrivacy(privacy) {\n        props.data({\n            adaUSD: adaUSD,\n            adaGBP: adaGBP,\n            adaBTC: adaBTC,\n            adaETH: adaETH,\n            usd24h: adaChange.usd24h,\n            usd7d: adaChange.usd7d,\n            usd30d: adaChange.usd30d,\n            usd1y: adaChange.usd1y,\n            currency: currency,\n            privacy: !privacy\n        });\n        setPrivacy(!privacy);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n        className: \"price-nav\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                className: \"price-nav-inner\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"out-price\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                children: [\n                                    \"ADA/USD $\",\n                                    adaUSD\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 277,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                style: {\n                                    color: usdColor\n                                },\n                                children: [\n                                    \"(\",\n                                    adaUsdChange,\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 278,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 276,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"out-price\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                children: [\n                                    \"ADA/GBP \\xa3\",\n                                    adaGBP\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 282,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                style: {\n                                    color: gbpColor\n                                },\n                                children: [\n                                    \"(\",\n                                    adaGbpChange,\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 283,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 281,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"out-price\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                children: [\n                                    \"ADA/ETH Ξ\",\n                                    adaETH\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 287,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                style: {\n                                    color: ethColor\n                                },\n                                children: [\n                                    \"(\",\n                                    adaEthChange,\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 288,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 286,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"out-price\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                children: [\n                                    \"ADA/BTC ₿\",\n                                    adaBTC\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 292,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"price-label\",\n                                style: {\n                                    color: btcColor\n                                },\n                                children: [\n                                    \"(\",\n                                    adaBtcChange,\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 293,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 291,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                lineNumber: 275,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"price-buttons\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"setting-button\",\n                        onClick: ()=>increaseGranularity(granularity),\n                        children: [\n                            \"Interval:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"value\",\n                                children: granularity\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 297,\n                                columnNumber: 106\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 297,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"setting-button\",\n                        onClick: ()=>changeCurrency(currency),\n                        children: [\n                            \"Currency:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"currency\",\n                                children: [\n                                    currency.name.toUpperCase(),\n                                    \" \",\n                                    currency.symbol\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                                lineNumber: 298,\n                                columnNumber: 98\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 298,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"setting-button\",\n                        onClick: ()=>changePrivacy(privacy),\n                        children: \"Privacy Mode\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                        lineNumber: 299,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n                lineNumber: 296,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/prices.js\",\n        lineNumber: 274,\n        columnNumber: 12\n    }, this);\n}\n_s(Prices, \"Ct+tJN2m3SvYPRtT+b29KWhWjOU=\");\n_c = Prices;\nvar _c;\n$RefreshReg$(_c, \"Prices\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/prices.js\n"));

/***/ }),

/***/ "./src/pages/searchbar.js":
/*!********************************!*\
  !*** ./src/pages/searchbar.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SearchBar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nfunction SearchBar(props) {\n    _s();\n    // react hook used to store user inputed strings\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    // next/router, a next.js feature that can redirect users to specific pages.\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    // ** this method takes a string inputted by the user redirects them to the appropriate page\n    // base addresses are routed to a 'wallet' page along with the indentifying stake address\n    // \n    // @param  -- event triggered by form when text is inputted into the search form\n    // when event is triggered, the inputted string gets set to the react hook above called 'searchQuery'\n    // this value can then be used to get the inputted string from the user.\n    const handleSearch = async (event)=>{\n        event.preventDefault();\n        // handle base addresses -- containing stake key\n        // doesnt include enterprise addresses\n        if (searchQuery.startsWith(\"add\")) {\n            // fetch stake address from blockfrost API\n            let stakeAddress = await getStakeFromAddress(searchQuery);\n            // redirect user to wallet page with wallet identifying stake address\n            if (stakeAddress != null) {\n                router.push(\"/wallet/\".concat(stakeAddress));\n            }\n        } else if (searchQuery.startsWith(\"stake\") || searchQuery.startsWith(\"$\")) {\n            // handles must contain atleast 2 chars e.g. '$a'\n            if (searchQuery.length > 1) {\n                // route to wallet page with handle or stake address\n                // stake address is fetched from handle on wallet page\n                router.push(\"/wallet/\".concat(searchQuery));\n            }\n        } else {\n            // if neither of above, inputted text may be 'asset ID'\n            // then route to token page with 'assetID' and stake address if wallet is connected.\n            router.push(\"/token/\".concat(searchQuery, \"/?stake=\") + props.stake);\n        }\n    };\n    // this method fetches the stake address for any given base address.\n    // it uses a Blockfrost API which returns data for specific addresses.\n    // @param - a base address, containing the stake key for its wallet.\n    // @return a stake address, an account address which can be used to fetch data for its corresponding wallet\n    async function getStakeFromAddress(address) {\n        try {\n            // fetch data relating to address\n            const req = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/addresses/\" + address, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            // JSON returned contains stake address for given base address.\n            const res = await req.json();\n            return res.stake_address;\n        } catch (error) {\n            // handle error\n            console.log(error);\n            return null;\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        className: \"searchForm\",\n        onSubmit: handleSearch,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                className: \"search-input\",\n                placeholder: \"Search for an address or a specific token...\",\n                value: searchQuery,\n                onChange: (event)=>setSearchQuery(event.target.value)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/searchbar.js\",\n                lineNumber: 79,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                type: \"submit\",\n                className: \"search-button\",\n                children: \"Search\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/searchbar.js\",\n                lineNumber: 80,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/searchbar.js\",\n        lineNumber: 78,\n        columnNumber: 9\n    }, this);\n}\n_s(SearchBar, \"4sm5Xy4sGA6QIGrHn8tQ9Lk+vI8=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter\n    ];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvc2VhcmNoYmFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF3QztBQUNQO0FBRWxCLFNBQVNFLFVBQVVDLEtBQUssRUFBQzs7SUFFcEMsZ0RBQWdEO0lBQ2hELE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHSiwrQ0FBUUEsQ0FBQztJQUUvQyw0RUFBNEU7SUFDNUUsTUFBTUssU0FBU04sc0RBQVNBO0lBRXhCLDRGQUE0RjtJQUU1Rix5RkFBeUY7SUFDekYsR0FBRztJQUNILGdGQUFnRjtJQUNoRixxR0FBcUc7SUFDckcsd0VBQXdFO0lBQ3hFLE1BQU1PLGVBQWUsT0FBUUMsUUFBVTtRQUNuQ0EsTUFBTUMsY0FBYztRQUVwQixnREFBZ0Q7UUFDaEQsc0NBQXNDO1FBQ3RDLElBQUdMLFlBQVlNLFVBQVUsQ0FBQyxRQUFPO1lBRS9CLDBDQUEwQztZQUMxQyxJQUFJQyxlQUFlLE1BQU1DLG9CQUFvQlI7WUFFN0MscUVBQXFFO1lBQ3JFLElBQUdPLGdCQUFnQixJQUFJLEVBQUM7Z0JBQ3RCTCxPQUFPTyxJQUFJLENBQUMsV0FBd0IsT0FBYkY7WUFDekIsQ0FBQztRQUNILE9BSUssSUFBSVAsWUFBWU0sVUFBVSxDQUFDLFlBQVlOLFlBQVlNLFVBQVUsQ0FBQyxNQUFLO1lBRXRFLGlEQUFpRDtZQUNqRCxJQUFHTixZQUFZVSxNQUFNLEdBQUUsR0FBRTtnQkFFdkIsb0RBQW9EO2dCQUNwRCxzREFBc0Q7Z0JBQ3REUixPQUFPTyxJQUFJLENBQUMsV0FBdUIsT0FBWlQ7WUFDekIsQ0FBQztRQUNILE9BQ0k7WUFDRix1REFBdUQ7WUFDdkQsb0ZBQW9GO1lBQ3BGRSxPQUFPTyxJQUFJLENBQUMsVUFBc0IsT0FBWlQsYUFBWSxjQUFVRCxNQUFNWSxLQUFLO1FBQ3pELENBQUM7SUFDSDtJQUVBLG9FQUFvRTtJQUNwRSxzRUFBc0U7SUFFdEUsb0VBQW9FO0lBQ3BFLDJHQUEyRztJQUMzRyxlQUFlSCxvQkFBb0JJLE9BQU8sRUFBQztRQUN6QyxJQUFHO1lBQ0QsaUNBQWlDO1lBQ2pDLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSw0REFBMERGLFNBQ2hGO2dCQUFDRyxTQUFRO29CQUFDQyxZQUFZO29CQUEyQyxpQkFBaUI7Z0JBQWtCO1lBQUM7WUFFckcsK0RBQStEO1lBQy9ELE1BQU1DLE1BQU0sTUFBTUosSUFBSUssSUFBSTtZQUMxQixPQUFPRCxJQUFJRSxhQUFhO1FBQzVCLEVBQUMsT0FBTUMsT0FBTTtZQUVULGVBQWU7WUFDZkMsUUFBUUMsR0FBRyxDQUFDRjtZQUNaLE9BQU8sSUFBSTtRQUNmO0lBRUY7SUFFRixxQkFDSSw4REFBQ0c7UUFBS0MsV0FBVTtRQUFhQyxVQUFVdEI7OzBCQUNuQyw4REFBQ3VCO2dCQUFNQyxNQUFLO2dCQUFPSCxXQUFZO2dCQUFlSSxhQUFZO2dCQUFnREMsT0FBTzdCO2dCQUFhOEIsVUFBVSxDQUFDMUIsUUFBVUgsZUFBZUcsTUFBTTJCLE1BQU0sQ0FBQ0YsS0FBSzs7Ozs7OzBCQUNwTCw4REFBQ0c7Z0JBQU9MLE1BQUs7Z0JBQVNILFdBQVU7MEJBQWdCOzs7Ozs7Ozs7Ozs7QUFHNUQsQ0FBQztHQS9FdUIxQjs7UUFNTEYsa0RBQVNBOzs7S0FOSkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL3NlYXJjaGJhci5qcz85ZmI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2VhcmNoQmFyKHByb3BzKXtcblxuICAgIC8vIHJlYWN0IGhvb2sgdXNlZCB0byBzdG9yZSB1c2VyIGlucHV0ZWQgc3RyaW5nc1xuICAgIGNvbnN0IFtzZWFyY2hRdWVyeSwgc2V0U2VhcmNoUXVlcnldID0gdXNlU3RhdGUoJycpO1xuXG4gICAgLy8gbmV4dC9yb3V0ZXIsIGEgbmV4dC5qcyBmZWF0dXJlIHRoYXQgY2FuIHJlZGlyZWN0IHVzZXJzIHRvIHNwZWNpZmljIHBhZ2VzLlxuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG4gICAgLy8gKiogdGhpcyBtZXRob2QgdGFrZXMgYSBzdHJpbmcgaW5wdXR0ZWQgYnkgdGhlIHVzZXIgcmVkaXJlY3RzIHRoZW0gdG8gdGhlIGFwcHJvcHJpYXRlIHBhZ2VcblxuICAgIC8vIGJhc2UgYWRkcmVzc2VzIGFyZSByb3V0ZWQgdG8gYSAnd2FsbGV0JyBwYWdlIGFsb25nIHdpdGggdGhlIGluZGVudGlmeWluZyBzdGFrZSBhZGRyZXNzXG4gICAgLy8gXG4gICAgLy8gQHBhcmFtICAtLSBldmVudCB0cmlnZ2VyZWQgYnkgZm9ybSB3aGVuIHRleHQgaXMgaW5wdXR0ZWQgaW50byB0aGUgc2VhcmNoIGZvcm1cbiAgICAvLyB3aGVuIGV2ZW50IGlzIHRyaWdnZXJlZCwgdGhlIGlucHV0dGVkIHN0cmluZyBnZXRzIHNldCB0byB0aGUgcmVhY3QgaG9vayBhYm92ZSBjYWxsZWQgJ3NlYXJjaFF1ZXJ5J1xuICAgIC8vIHRoaXMgdmFsdWUgY2FuIHRoZW4gYmUgdXNlZCB0byBnZXQgdGhlIGlucHV0dGVkIHN0cmluZyBmcm9tIHRoZSB1c2VyLlxuICAgIGNvbnN0IGhhbmRsZVNlYXJjaCA9IGFzeW5jICAoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAvLyBoYW5kbGUgYmFzZSBhZGRyZXNzZXMgLS0gY29udGFpbmluZyBzdGFrZSBrZXlcbiAgICAgICAgLy8gZG9lc250IGluY2x1ZGUgZW50ZXJwcmlzZSBhZGRyZXNzZXNcbiAgICAgICAgaWYoc2VhcmNoUXVlcnkuc3RhcnRzV2l0aCgnYWRkJykpe1xuXG4gICAgICAgICAgLy8gZmV0Y2ggc3Rha2UgYWRkcmVzcyBmcm9tIGJsb2NrZnJvc3QgQVBJXG4gICAgICAgICAgbGV0IHN0YWtlQWRkcmVzcyA9IGF3YWl0IGdldFN0YWtlRnJvbUFkZHJlc3Moc2VhcmNoUXVlcnkpO1xuXG4gICAgICAgICAgLy8gcmVkaXJlY3QgdXNlciB0byB3YWxsZXQgcGFnZSB3aXRoIHdhbGxldCBpZGVudGlmeWluZyBzdGFrZSBhZGRyZXNzXG4gICAgICAgICAgaWYoc3Rha2VBZGRyZXNzICE9IG51bGwpe1xuICAgICAgICAgICAgcm91dGVyLnB1c2goYC93YWxsZXQvJHtzdGFrZUFkZHJlc3N9YCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gaGFuZGxlIHN0YWtlIGFkZHJlc3Mgb3IgYWRhIGhhbmRsZSBpbnB1dHNcbiAgICAgICAgLy8gc3Rha2UgYWRkcmVzc2VzIGFsd2F5cyBiZWdpbiB3aXRoICdzdGFrZScgYW5kIEFEQSBIYW5kbGVzIGJlZ2luIHdpdGggJyQnIGUuZy4gJGphbWVzXG4gICAgICAgIGVsc2UgaWYgKHNlYXJjaFF1ZXJ5LnN0YXJ0c1dpdGgoJ3N0YWtlJykgfHwgc2VhcmNoUXVlcnkuc3RhcnRzV2l0aCgnJCcpKXtcblxuICAgICAgICAgIC8vIGhhbmRsZXMgbXVzdCBjb250YWluIGF0bGVhc3QgMiBjaGFycyBlLmcuICckYSdcbiAgICAgICAgICBpZihzZWFyY2hRdWVyeS5sZW5ndGggPjEpe1xuXG4gICAgICAgICAgICAvLyByb3V0ZSB0byB3YWxsZXQgcGFnZSB3aXRoIGhhbmRsZSBvciBzdGFrZSBhZGRyZXNzXG4gICAgICAgICAgICAvLyBzdGFrZSBhZGRyZXNzIGlzIGZldGNoZWQgZnJvbSBoYW5kbGUgb24gd2FsbGV0IHBhZ2VcbiAgICAgICAgICAgIHJvdXRlci5wdXNoKGAvd2FsbGV0LyR7c2VhcmNoUXVlcnl9YCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgLy8gaWYgbmVpdGhlciBvZiBhYm92ZSwgaW5wdXR0ZWQgdGV4dCBtYXkgYmUgJ2Fzc2V0IElEJ1xuICAgICAgICAgIC8vIHRoZW4gcm91dGUgdG8gdG9rZW4gcGFnZSB3aXRoICdhc3NldElEJyBhbmQgc3Rha2UgYWRkcmVzcyBpZiB3YWxsZXQgaXMgY29ubmVjdGVkLlxuICAgICAgICAgIHJvdXRlci5wdXNoKGAvdG9rZW4vJHtzZWFyY2hRdWVyeX0vP3N0YWtlPWArcHJvcHMuc3Rha2UpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIHRoaXMgbWV0aG9kIGZldGNoZXMgdGhlIHN0YWtlIGFkZHJlc3MgZm9yIGFueSBnaXZlbiBiYXNlIGFkZHJlc3MuXG4gICAgICAvLyBpdCB1c2VzIGEgQmxvY2tmcm9zdCBBUEkgd2hpY2ggcmV0dXJucyBkYXRhIGZvciBzcGVjaWZpYyBhZGRyZXNzZXMuXG5cbiAgICAgIC8vIEBwYXJhbSAtIGEgYmFzZSBhZGRyZXNzLCBjb250YWluaW5nIHRoZSBzdGFrZSBrZXkgZm9yIGl0cyB3YWxsZXQuXG4gICAgICAvLyBAcmV0dXJuIGEgc3Rha2UgYWRkcmVzcywgYW4gYWNjb3VudCBhZGRyZXNzIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGZldGNoIGRhdGEgZm9yIGl0cyBjb3JyZXNwb25kaW5nIHdhbGxldFxuICAgICAgYXN5bmMgZnVuY3Rpb24gZ2V0U3Rha2VGcm9tQWRkcmVzcyhhZGRyZXNzKXtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgIC8vIGZldGNoIGRhdGEgcmVsYXRpbmcgdG8gYWRkcmVzc1xuICAgICAgICAgIGNvbnN0IHJlcSA9IGF3YWl0IGZldGNoKCdodHRwczovL2NhcmRhbm8tbWFpbm5ldC5ibG9ja2Zyb3N0LmlvL2FwaS92MC9hZGRyZXNzZXMvJythZGRyZXNzLCBcbiAgICAgICAgICAgIHtoZWFkZXJzOntwcm9qZWN0X2lkOiAnbWFpbm5ldG9XNjFZWVNpT29MU2FOUTZkelRya0FHNGF6WFZJcnZoJywgJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0zMTUzNjAwMCd9fSk7XG5cbiAgICAgICAgICAgIC8vIEpTT04gcmV0dXJuZWQgY29udGFpbnMgc3Rha2UgYWRkcmVzcyBmb3IgZ2l2ZW4gYmFzZSBhZGRyZXNzLlxuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3Rha2VfYWRkcmVzcztcbiAgICAgICAgfWNhdGNoKGVycm9yKXsgXG5cbiAgICAgICAgICAgIC8vIGhhbmRsZSBlcnJvclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgfVxuXG4gICAgcmV0dXJuKFxuICAgICAgICA8Zm9ybSBjbGFzc05hbWU9XCJzZWFyY2hGb3JtXCIgb25TdWJtaXQ9e2hhbmRsZVNlYXJjaH0+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzc05hbWUgPSBcInNlYXJjaC1pbnB1dFwiIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGZvciBhbiBhZGRyZXNzIG9yIGEgc3BlY2lmaWMgdG9rZW4uLi5cIiAgdmFsdWU9e3NlYXJjaFF1ZXJ5fSBvbkNoYW5nZT17KGV2ZW50KSA9PiBzZXRTZWFyY2hRdWVyeShldmVudC50YXJnZXQudmFsdWUpfS8+XG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJzZWFyY2gtYnV0dG9uXCI+U2VhcmNoPC9idXR0b24+XG4gICAgICAgIDwvZm9ybT5cbiAgICApXG59Il0sIm5hbWVzIjpbInVzZVJvdXRlciIsInVzZVN0YXRlIiwiU2VhcmNoQmFyIiwicHJvcHMiLCJzZWFyY2hRdWVyeSIsInNldFNlYXJjaFF1ZXJ5Iiwicm91dGVyIiwiaGFuZGxlU2VhcmNoIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInN0YXJ0c1dpdGgiLCJzdGFrZUFkZHJlc3MiLCJnZXRTdGFrZUZyb21BZGRyZXNzIiwicHVzaCIsImxlbmd0aCIsInN0YWtlIiwiYWRkcmVzcyIsInJlcSIsImZldGNoIiwiaGVhZGVycyIsInByb2plY3RfaWQiLCJyZXMiLCJqc29uIiwic3Rha2VfYWRkcmVzcyIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImZvcm0iLCJjbGFzc05hbWUiLCJvblN1Ym1pdCIsImlucHV0IiwidHlwZSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsInRhcmdldCIsImJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/searchbar.js\n"));

/***/ }),

/***/ "./src/pages/token.js":
/*!****************************!*\
  !*** ./src/pages/token.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Token; }\n/* harmony export */ });\nclass Token {\n    // returns price data for the token from coin gecko\n    // if available\n    async getPrice() {\n        // coin ids fetched from downloaded json \n        let request = await fetch(\"/coin-gecko.json\");\n        let geckoData = await request.json();\n        let ticker = \"\";\n        // get ticker to find id in json doc\n        try {\n            ticker = this.metadata.ticker;\n        } catch (error) {\n            ticker = null;\n        }\n        // match ticker to id\n        if (ticker != null) {\n            let foundGeckoCoin = geckoData.find((item)=>item.symbol == ticker.toLowerCase());\n            if (foundGeckoCoin != null) {\n                this.id = foundGeckoCoin.id;\n            } else {\n                this.id = null;\n            }\n        }\n        // if found id, then price data exists on coin gecko\n        // fetch price data to be used in Fts\n        let prices = \"\";\n        if (this.id != null) {\n            let req = await fetch(\"https://api.coingecko.com/api/v3/coins/\" + this.id);\n            let res = await req.json();\n            // get price data and price change data\n            // used in fts\n            if (res.asset_platform_id == \"cardano\") {\n                let _currentPrice = res.market_data.current_price.usd.toFixed(2);\n                let _24change = res.market_data.price_change_percentage_24h.toFixed(2);\n                let _7dchange = res.market_data.price_change_percentage_7d.toFixed(2);\n                let _30dchange = res.market_data.price_change_percentage_30d.toFixed(2);\n                let _1ychange = res.market_data.price_change_percentage_1y.toFixed(2);\n                prices = {\n                    current: _currentPrice,\n                    change24h: _24change,\n                    change7d: _7dchange,\n                    change30d: _30dchange,\n                    change1y: _1ychange\n                };\n            }\n        } else {}\n        return prices;\n    }\n    // fetches token metadata from asset id\n    // is customised by the author according to metadata standards\n    async getMetadata() {\n        try {\n            // fetch asset metadata from blockfrost using concat of policy and name\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\" + this.policy_id + this.asset_name, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            // some nft authors use the 'metadata' tag to store metadata\n            // 'on_chain_metadata' is also used instead\n            this.metadata = await data.json();\n            if (this.metadata.metadata != null) {\n                return this.metadata.metadata;\n            } else if (this.metadata.onchain_metadata != null) {\n                return this.metadata.onchain_metadata;\n            } else {\n                return null;\n            }\n        } catch (error) {\n            return null;\n        }\n    }\n    // if metadata has been fetched\n    // find the ipfs link under 'image' metadata tag and store it\n    getIpfsFromMetadata() {\n        const keys = Object.keys(this.metadata);\n        const values = Object.values(this.metadata);\n        let ipfs = \"\";\n        for(let i = 0; i < keys.length; i++){\n            if (keys[i] == \"image\") {\n                ipfs = values[i];\n            }\n            // fungible tokens will have a 'logo' instead of 'image' tag\n            if (keys[i] == \"logo\") {\n                ipfs = \"data:image/png;base64,\" + values[i];\n            }\n        }\n        // convert all ipfs formats to the a searchable format that can be fetched in a <img> tag\n        try {\n            // links are sometimes stored in arrays\n            // this finds ipfs links in the array\n            if (Array.isArray(ipfs)) {\n                let newipfs = \"\";\n                for (const element of ipfs){\n                    newipfs = newipfs + element;\n                }\n                if (newipfs.startsWith(\"ba\")) {\n                    newipfs = \"http://dweb.link/ipfs/\" + ipfs;\n                    newipfs = newipfs.replace(/,/g, \"\");\n                }\n                return newipfs;\n            }\n            // normal ipfs in image tags\n            if (ipfs.startsWith(\"ipfs://\")) {\n                ipfs = ipfs.slice(7);\n                if (ipfs.startsWith(\"ipfs/\")) {\n                    ipfs = ipfs.slice(5);\n                }\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            } else if (ipfs.startsWith(\"ipfs/\")) {\n                ipfs = ipfs.slice(5);\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            } else if (ipfs.startsWith(\"Qm\")) {\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            }\n        } catch (e) {\n            return null;\n        }\n        return ipfs;\n    }\n    // nfts and fts are of type token and have these three attributes\n    // when list of assets in wallet is fetched, only simple metadata is paired\n    constructor(asset_name, policy_id, quantity){\n        this.asset_name = asset_name;\n        this.policy_id = policy_id;\n        this.quantity = quantity;\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/token.js\n"));

/***/ }),

/***/ "./src/pages/token/[policy].js":
/*!*************************************!*\
  !*** ./src/pages/token/[policy].js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _policyData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../policyData */ \"./src/pages/policyData.js\");\n/* harmony import */ var _searchbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../searchbar */ \"./src/pages/searchbar.js\");\n/* harmony import */ var _tokenData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tokenData */ \"./src/pages/tokenData.js\");\n/* harmony import */ var _walletButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../walletButton */ \"./src/pages/walletButton.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_walletButton__WEBPACK_IMPORTED_MODULE_6__]);\n_walletButton__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Policy() {\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const { policy , stake  } = router.query;\n    const [display, setDisplay] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();\n    const [walletText, setWalletText] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"Connect\");\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        async function func() {\n            if (policy != null && stake != null) {\n                setWalletText(stake.substring(0, 7));\n                if (policy.length == 56) {\n                    setDisplay(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_policyData__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        policy: policy,\n                        stake: stake\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                        lineNumber: 21,\n                        columnNumber: 24\n                    }, this));\n                } else if (policy.length < 56) {\n                    setDisplay(\"invalid policy Id or assetID\");\n                } else {\n                    // is asset + policy = assetId\n                    setDisplay(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tokenData__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        assetId: policy,\n                        stake: stake\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                        lineNumber: 28,\n                        columnNumber: 24\n                    }, this));\n                }\n            }\n        }\n        func();\n    }, [\n        policy,\n        stake\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"main-label\",\n                        children: \"✥ Explorer\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                        lineNumber: 37,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_searchbar__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        stake: stake\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                        lineNumber: 38,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_walletButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        stake: stake\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                        lineNumber: 39,\n                        columnNumber: 7\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n                lineNumber: 36,\n                columnNumber: 7\n            }, this),\n            display\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/token/[policy].js\",\n        lineNumber: 35,\n        columnNumber: 12\n    }, this);\n}\n_s(Policy, \"PxR8dQbF7trLqtULbQaH7a3OLCk=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter\n    ];\n});\n_c = Policy;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Policy);\nvar _c;\n$RefreshReg$(_c, \"Policy\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvdG9rZW4vW3BvbGljeV0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNJO0FBQ0w7QUFDRjtBQUNBO0FBQ007QUFFM0MsU0FBU08sU0FBUTs7SUFFYixNQUFNQyxTQUFTUixzREFBU0E7SUFFeEIsTUFBTSxFQUFDUyxPQUFNLEVBQUVDLE1BQUssRUFBQyxHQUFHRixPQUFPRyxLQUFLO0lBQ3BDLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHWCwrQ0FBUUE7SUFDdEMsTUFBTSxDQUFDWSxZQUFZQyxjQUFjLEdBQUdiLCtDQUFRQSxDQUFDO0lBRTdDRCxnREFBU0EsQ0FBQyxJQUFNO1FBQ2QsZUFBZWUsT0FBTTtZQUNuQixJQUFHUCxVQUFVLElBQUksSUFBSUMsU0FBUyxJQUFJLEVBQUM7Z0JBQ2pDSyxjQUFjTCxNQUFNTyxTQUFTLENBQUMsR0FBRTtnQkFDaEMsSUFBR1IsT0FBT1MsTUFBTSxJQUFJLElBQUc7b0JBQ3JCTCx5QkFBVyw4REFBQ1YsbURBQVVBO3dCQUFDTSxRQUFRQTt3QkFBUUMsT0FBU0E7Ozs7OztnQkFDbEQsT0FDSyxJQUFHRCxPQUFPUyxNQUFNLEdBQUcsSUFBRztvQkFDekJMLFdBQVc7Z0JBQ2IsT0FDSTtvQkFDRiw4QkFBOEI7b0JBQzlCQSx5QkFBVyw4REFBQ1Isa0RBQVNBO3dCQUFDYyxTQUFXVjt3QkFBUUMsT0FBUUE7Ozs7OztnQkFDbkQsQ0FBQztZQUNILENBQUM7UUFDSDtRQUNBTTtJQUNGLEdBQUc7UUFBQ1A7UUFBUUM7S0FBTTtJQUVsQixxQkFBTyw4REFBQ1U7OzBCQUNOLDhEQUFDQzs7a0NBQ0QsOERBQUNDO3dCQUFNQyxXQUFVO2tDQUFhOzs7Ozs7a0NBQzlCLDhEQUFDbkIsa0RBQVNBO3dCQUFDTSxPQUFTQTs7Ozs7O2tDQUNwQiw4REFBQ0oscURBQVlBO3dCQUFDSSxPQUFTQTs7Ozs7Ozs7Ozs7O1lBQ2ZFOzs7Ozs7O0FBRWQ7R0FsQ1NMOztRQUVVUCxrREFBU0E7OztLQUZuQk87O0FBMERULCtEQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy90b2tlbi9bcG9saWN5XS5qcz84NmM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFBvbGljeURhdGEgZnJvbSBcIi4uL3BvbGljeURhdGFcIjtcbmltcG9ydCBTZWFyY2hCYXIgZnJvbSBcIi4uL3NlYXJjaGJhclwiO1xuaW1wb3J0IFRva2VuRGF0YSBmcm9tIFwiLi4vdG9rZW5EYXRhXCI7XG5pbXBvcnQgV2FsbGV0QnV0dG9uIGZyb20gXCIuLi93YWxsZXRCdXR0b25cIjtcblxuZnVuY3Rpb24gUG9saWN5KCl7XG5cbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICAgIGNvbnN0IHtwb2xpY3ksIHN0YWtlfSA9IHJvdXRlci5xdWVyeTtcbiAgICBjb25zdCBbZGlzcGxheSwgc2V0RGlzcGxheV0gPSB1c2VTdGF0ZSgpO1xuICAgIGNvbnN0IFt3YWxsZXRUZXh0LCBzZXRXYWxsZXRUZXh0XSA9IHVzZVN0YXRlKCdDb25uZWN0JylcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBhc3luYyBmdW5jdGlvbiBmdW5jKCl7XG4gICAgICAgIGlmKHBvbGljeSAhPSBudWxsICYmIHN0YWtlICE9IG51bGwpe1xuICAgICAgICAgIHNldFdhbGxldFRleHQoc3Rha2Uuc3Vic3RyaW5nKDAsNykpO1xuICAgICAgICAgIGlmKHBvbGljeS5sZW5ndGggPT0gNTYpe1xuICAgICAgICAgICAgc2V0RGlzcGxheSg8UG9saWN5RGF0YSBwb2xpY3k9e3BvbGljeX0gc3Rha2UgPSB7c3Rha2V9Lz4pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIGlmKHBvbGljeS5sZW5ndGggPCA1Nil7XG4gICAgICAgICAgICBzZXREaXNwbGF5KCdpbnZhbGlkIHBvbGljeSBJZCBvciBhc3NldElEJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAvLyBpcyBhc3NldCArIHBvbGljeSA9IGFzc2V0SWRcbiAgICAgICAgICAgIHNldERpc3BsYXkoPFRva2VuRGF0YSBhc3NldElkID0ge3BvbGljeX0gc3Rha2U9IHtzdGFrZX0vPik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jKCk7XG4gICAgfSwgW3BvbGljeSwgc3Rha2VdKVxuXG4gICAgcmV0dXJuKDxkaXY+ICAgICAgXG4gICAgICA8aGVhZGVyPlxuICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cIm1haW4tbGFiZWxcIj7inKUgRXhwbG9yZXI8L2xhYmVsPlxuICAgICAgPFNlYXJjaEJhciBzdGFrZSA9IHtzdGFrZX0vPlxuICAgICAgPFdhbGxldEJ1dHRvbiBzdGFrZSA9IHtzdGFrZX0vPlxuICAgIDwvaGVhZGVyPntkaXNwbGF5fVxuICAgIDwvZGl2Pilcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0YXRpY1BhdGhzKCkge1xuICAgIC8vIFRoaXMgZnVuY3Rpb24gY3JlYXRlcyB0aGUgZHluYW1pYyBwYXRocyBmb3IgdGhlIHBhZ2UuXG4gICAgLy8gSW4gdGhpcyBjYXNlLCB3ZSBoYXZlIGEgbGlzdCBvZiBhbGwgcG9zc2libGUgbnVtYmVycyBiZXR3ZWVuIDEgYW5kIDUgdGhhdCB3ZSBjYW4gdXNlIHRvIGNyZWF0ZSB0aGUgcGF0aHNcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aHM6IFtdLFxuICAgICAgZmFsbGJhY2s6IHRydWVcbiAgICB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdGljUHJvcHMoeyBwYXJhbXMgfSkge1xuICAgIC8vIFRoaXMgZnVuY3Rpb24gZmV0Y2hlcyB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UuXG4gICAgLy8gSW4gdGhpcyBjYXNlLCB3ZSBkb24ndCBuZWVkIHRvIGZldGNoIGFueSBkYXRhIGJlY2F1c2UgdGhlIG51bWJlciBpcyBhbHJlYWR5IGF2YWlsYWJsZSBpbiB0aGUgcGFyYW1zIG9iamVjdC5cbiAgICBjb25zdCBwb2xpY3k9IHBhcmFtcy5wb2xpY3k7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvcHM6IHtcbiAgICAgICAgcG9saWN5XG4gICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb2xpY3k7Il0sIm5hbWVzIjpbInVzZVJvdXRlciIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiUG9saWN5RGF0YSIsIlNlYXJjaEJhciIsIlRva2VuRGF0YSIsIldhbGxldEJ1dHRvbiIsIlBvbGljeSIsInJvdXRlciIsInBvbGljeSIsInN0YWtlIiwicXVlcnkiLCJkaXNwbGF5Iiwic2V0RGlzcGxheSIsIndhbGxldFRleHQiLCJzZXRXYWxsZXRUZXh0IiwiZnVuYyIsInN1YnN0cmluZyIsImxlbmd0aCIsImFzc2V0SWQiLCJkaXYiLCJoZWFkZXIiLCJsYWJlbCIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/token/[policy].js\n"));

/***/ }),

/***/ "./src/pages/tokenData.js":
/*!********************************!*\
  !*** ./src/pages/tokenData.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next.config */ \"./next.config.js\");\n/* harmony import */ var next_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _policy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policy */ \"./src/pages/policy.js\");\n/* harmony import */ var _prices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./prices */ \"./src/pages/prices.js\");\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./token */ \"./src/pages/token.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nfunction TokenData(props) {\n    _s();\n    const [ipfs, setIpfs] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"/black.jpeg\");\n    const [metadata, setMetadata] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)({\n        name: \"\",\n        policy: \"\",\n        created: \"\",\n        assetName: \"\",\n        fingerprint: \"\",\n        rarityRank: \"\",\n        rarityScore: \"\",\n        statisticalRank: \"\",\n        statisticalScore: \"\",\n        assetId: \"\"\n    });\n    const [policy, setPolicy] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [prices, setPrices] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [tokenInfo, setTokenInfo] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const getTokenData = async ()=>{\n            if (props.assetId == null) {\n                console.log(\"asset ID was undefined\");\n            } else {\n                // from url in [token].jsx\n                let assetId = props.assetId;\n                // fetch asset data from blockfrost\n                let assetData = await loadTokenData(assetId);\n                if (assetData == null) {\n                    setDisplay(\"invalid asset id\");\n                } else {\n                    let token = await createToken(assetData);\n                    setTokenInfo(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        children: [\n                            \"Asset name:\",\n                            token.asset_name,\n                            \" Policy ID: \",\n                            token.policy_id\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                        lineNumber: 35,\n                        columnNumber: 30\n                    }, this));\n                    setPolicy(token.policy_id);\n                    let _assetData = await getCnftAssetData(props.assetId);\n                    let createdData = _assetData.created_at.substring(0, 10);\n                    let fingerprint = _assetData.fingerprint;\n                    let assetName = _assetData.name;\n                    let rarityRank = _assetData.rarity_rank;\n                    let rarityScore = _assetData.rarity_score;\n                    let statisticalRank = _assetData.statistical_rank;\n                    let statisticalScore = _assetData.statistical_score;\n                    let decryptName = Buffer.from(token.asset_name, \"hex\").toString();\n                    console.log(decryptName);\n                    let obj = {\n                        name: decryptName,\n                        policy: token.policy_id,\n                        created: createdData,\n                        assetName: token.asset_name,\n                        fingerprint: fingerprint,\n                        rarityRank: rarityRank,\n                        rarityScore: rarityScore,\n                        statisticalRank: statisticalRank,\n                        statisticalScore,\n                        assetId: assetId\n                    };\n                    setData(obj);\n                    let price = prices;\n                    let ipfs = \"\";\n                    if (token.metadata != null) {\n                        ipfs = token.getIpfsFromMetadata();\n                        token.ipfs = ipfs;\n                    }\n                    let txs = await getPrevTxs(assetId);\n                    // metadata displayed in table\n                    setMetadata(JSON.stringify(token.metadata));\n                    if (token.ipfs != null) {\n                        // nft image\n                        setIpfs(token.ipfs);\n                    }\n                }\n            }\n        };\n        getTokenData();\n    }, [\n        props\n    ]);\n    function copyText(event, text) {\n        navigator.clipboard.writeText(text).then(()=>{\n            // Update the button text to \"Copied!\"\n            const button = event.target;\n            event.target.innerText = \"Copied\";\n            setTimeout(()=>{\n                // Reset the button text after 1 second\n                button.textContent = \"Copy\";\n            }, 1000);\n        });\n    }\n    async function createToken(assetData) {\n        let assetName = assetData.asset_name;\n        let policy = assetData.policy_id;\n        let quantity = assetData.quantity;\n        let token = new _token__WEBPACK_IMPORTED_MODULE_7__[\"default\"](assetName, policy, quantity);\n        let tokenMetadata = await token.getMetadata();\n        token.metadata = tokenMetadata;\n        return token;\n    }\n    // fetch token metadata from blockfrost\n    async function loadTokenData(assetId) {\n        try {\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\" + assetId, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            const res = await data.json();\n            if (data.status != 200) {\n                return null;\n            }\n            return res;\n        } catch (error) {\n            return null;\n        }\n    }\n    async function getCnftAssetData(asset) {\n        try {\n            const data = await fetch(\"https://api.opencnft.io/1/asset/\" + asset, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            const res = await data.json();\n            if (data.status != 200) {\n                return null;\n            }\n            return res;\n        } catch (error) {\n            return null;\n        }\n    }\n    // fetch token metadata from blockfrost\n    async function getPrevTxs(assetId) {\n        try {\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\" + assetId + \"/transactions\", {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            const res = await data.json();\n            if (data.status != 200) {\n                return null;\n            }\n            return res;\n        } catch (error) {\n            return null;\n        }\n    }\n    function setPriceData(data) {\n        setPrices(data);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"token-main\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_prices__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                data: setPriceData\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                lineNumber: 161,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_policy__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                policy: policy,\n                prices: prices,\n                stake: props.stake\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                lineNumber: 162,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"token-box\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"token-image\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                            className: \"main-img\",\n                            alt: \"no image\",\n                            src: ipfs,\n                            width: 500,\n                            height: 500\n                        }, void 0, false, {\n                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                            lineNumber: 164,\n                            columnNumber: 44\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                        lineNumber: 164,\n                        columnNumber: 15\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"token-data\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Name: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: data.name\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 167,\n                                        columnNumber: 23\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 166,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Created: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: data.created\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 170,\n                                        columnNumber: 26\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 169,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Asset Id: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: [\n                                            data.assetId.substring(0, 10),\n                                            \"...\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 173,\n                                        columnNumber: 27\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"policy-button\",\n                                        onClick: (e)=>copyText(e, data.assetId),\n                                        children: \"Copy\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 174,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 172,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Rarity Rank: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: data.rarityRank\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 183,\n                                        columnNumber: 30\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 182,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Statistical Rank: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: data.statisticalRank\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 186,\n                                        columnNumber: 35\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 185,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"token-data-item\",\n                                children: [\n                                    \"Fingerprint: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"value\",\n                                        children: [\n                                            data.fingerprint.substring(0, 15),\n                                            \"...\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 189,\n                                        columnNumber: 30\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"policy-button\",\n                                        onClick: (e)=>copyText(e, data.fingerprint),\n                                        children: \"Copy\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                        lineNumber: 190,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 188,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                className: \"policy-button\",\n                                href: \"https://www.jpg.store/asset/\" + data.assetId,\n                                children: \"JPG.store\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                                lineNumber: 197,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                        lineNumber: 165,\n                        columnNumber: 15\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                lineNumber: 163,\n                columnNumber: 11\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metadata\",\n                children: [\n                    \"Metadata: \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                        lineNumber: 202,\n                        columnNumber: 45\n                    }, this),\n                    metadata\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n                lineNumber: 202,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/tokenData.js\",\n        lineNumber: 160,\n        columnNumber: 7\n    }, this);\n}\n_s(TokenData, \"97xrr643uluN/wPGqe23xY0+aXQ=\");\n_c = TokenData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TokenData);\nvar _c;\n$RefreshReg$(_c, \"TokenData\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/tokenData.js\n"));

/***/ }),

/***/ "./src/pages/walletButton.js":
/*!***********************************!*\
  !*** ./src/pages/walletButton.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WalletButton; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lucid_cardano__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lucid-cardano */ \"./node_modules/lucid-cardano/esm/mod.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _colorPicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./colorPicker */ \"./src/pages/colorPicker.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([lucid_cardano__WEBPACK_IMPORTED_MODULE_1__]);\nlucid_cardano__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction WalletButton(props) {\n    _s();\n    const [buttonText, setButtonText] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"Connect\");\n    const [colors, setColors] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n    const [isVisable, setIsVisable] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    // checks browser local storage for wallet data of key : stake on each page load.\n    // used to pass stake address to\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        function checkStorage() {\n            if (props.stake == null) {\n            //base case\n            } else {\n                // stake = router query\n                // stake.stake = query as string\n                // button text to identify wallet\n                setButtonText(props.stake.substring(0, 9));\n            }\n        }\n        checkStorage();\n    }, [\n        props\n    ]);\n    async function getStakeFromAddressKoios(address) {\n        // returns stake address from base address\n        const req = await fetch(\"https://api.koios.rest/api/v0/address_info\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                \"_addresses\": [\n                    address\n                ]\n            })\n        });\n        const res = await req.json();\n        return res[0].stake_address;\n    }\n    const getAddressFromHandle = async (handle)=>{\n        // code from ada handle webnsite\n        // uses blockfrost to get address of handle location\n        let policyID = \"f0ff48bbb7bbe9d59a40f1ce90e9e9d0ff5002ec48f232b49ca0fb9a\";\n        // A blank Handle name should always be ignored.\n        if (handle.length === 0) {\n            return null;\n        } else {\n            // Convert handleName to hex encoding.\n            let assetName = Buffer.from(handle).toString(\"hex\");\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\".concat(policyID).concat(assetName, \"/addresses\"), {\n                headers: {\n                    // Your Blockfrost API key\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then((res)=>res.json());\n            let stake1 = await getStakeFromAddressKoios(data[0].address);\n            return stake1;\n        }\n    };\n    const handleSelect = async (wallet)=>{\n        // used to show dropdown options list \n        let stake1 = await getStakeAddressFromWallet(wallet);\n        router.push(\"/wallet/\".concat(stake1));\n    };\n    async function getStakeAddressFromWallet(wallet) {\n        // connects to wallet using cip-30 \n        // uses lucid to get return address\n        const lucid = await lucid_cardano__WEBPACK_IMPORTED_MODULE_1__.Lucid[\"new\"]();\n        var api = \"\";\n        if (wallet == \"Typhon Wallet\") {\n            api = await window.cardano.typhoncip30.enable();\n        }\n        if (wallet == \"eternl\") {\n            api = await window.cardano.eternl.enable();\n        }\n        if (wallet == \"Nami\") {\n            api = await window.cardano.nami.enable();\n        }\n        if (wallet == \"Flint Wallet\") {\n            api = await window.cardano.flint.enable();\n        }\n        lucid.selectWallet(api);\n        let stake1 = await lucid.wallet.rewardAddress();\n        return stake1;\n    }\n    const refreshWallet = async ()=>{\n        // removes stake data from local storage\n        // refreshes page\n        // loads new token data from blockfrost /koios\n        let stakeAdd = \"\";\n        if (props.stake.startsWith(\"$\")) {\n            stakeAdd = await getAddressFromHandle(props.stake.slice(1));\n        } else {\n            stakeAdd = props.stake;\n        }\n        if (stakeAdd != null) {\n            localStorage.removeItem(stakeAdd);\n            router.reload();\n        } else {\n        //r refresh error\n        }\n    };\n    const disconnectWallet = async ()=>{\n        // removes stake data from local storage\n        // routes to start page\n        let stakeAdd = \"\";\n        if (stake.stake.startsWith(\"$\")) {\n            stakeAdd = await getAddressFromHandle(props.stake.slice(1));\n        } else {\n            stakeAdd = props.stake;\n        }\n        if (stakeAdd != null) {\n            localStorage.removeItem(stakeAdd);\n            router.push(\"/\");\n        } else {\n        // disconnect  error\n        }\n    };\n    function setColorData(data) {\n        setColors(data);\n    }\n    function showMenu() {\n        setIsVisable(true);\n    }\n    function hideMenu() {\n        setIsVisable(false);\n    }\n    // need options to still be present but hidden so color picker will work\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"connect-wallet\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"connect-wallet-button\",\n                onMouseEnter: showMenu,\n                onMouseLeave: hideMenu,\n                onClick: ()=>router.push(\"/wallet/\" + props.stake),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        src: \"/wallet.svg\",\n                        width: 30,\n                        height: 30,\n                        alt: \"no-img\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                        lineNumber: 172,\n                        columnNumber: 61\n                    }, this),\n                    buttonText\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                lineNumber: 171,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"dropdown\",\n                style: {\n                    display: isVisable ? \"block\" : \"none\"\n                },\n                onMouseEnter: showMenu,\n                onMouseLeave: hideMenu,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"options\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>handleSelect(\"Typhon Wallet\"),\n                                    children: [\n                                        \"Typhon\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            className: \"connect-wallet-img\",\n                                            src: \"/typhon.svg\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                            lineNumber: 176,\n                                            columnNumber: 107\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 176,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 175,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>handleSelect(\"eternl\"),\n                                    children: [\n                                        \"Eternl\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            className: \"connect-wallet-img\",\n                                            src: \"/eternl.png\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                            lineNumber: 179,\n                                            columnNumber: 100\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 179,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 178,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>handleSelect(\"Nami\"),\n                                    children: [\n                                        \"Nami\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            className: \"connect-wallet-img\",\n                                            src: \"/nami.svg\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                            lineNumber: 182,\n                                            columnNumber: 96\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 182,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 181,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>handleSelect(\"Flint Wallet\"),\n                                    children: [\n                                        \"Flint\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            className: \"connect-wallet-img\",\n                                            src: \"/flint.png\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                            lineNumber: 185,\n                                            columnNumber: 105\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 185,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 184,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>refreshWallet(),\n                                    children: \"↺ Refresh\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 188,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 187,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"option\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"option-button\",\n                                    onClick: ()=>disconnectWallet(),\n                                    children: \"✗ Disconnect\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                    lineNumber: 191,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                                lineNumber: 190,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                        lineNumber: 174,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_colorPicker__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        data: setColorData,\n                        stake: props\n                    }, void 0, false, {\n                        fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                        lineNumber: 194,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n                lineNumber: 173,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/src/pages/walletButton.js\",\n        lineNumber: 170,\n        columnNumber: 12\n    }, this);\n}\n_s(WalletButton, \"0Fy7UT5M7O9wOu528UsKH9/9SRI=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = WalletButton;\nvar _c;\n$RefreshReg$(_c, \"WalletButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/walletButton.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/micromatch/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/micromatch/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(()=>{\"use strict\";var e={333:(e,t,r)=>{const n=r(137);const u=r(179);const s=r(13);const o=r(719);const braces=(e,t={})=>{let r=[];if(Array.isArray(e)){for(let n of e){let e=braces.create(n,t);if(Array.isArray(e)){r.push(...e)}else{r.push(e)}}}else{r=[].concat(braces.create(e,t))}if(t&&t.expand===true&&t.nodupes===true){r=[...new Set(r)]}return r};braces.parse=(e,t={})=>o(e,t);braces.stringify=(e,t={})=>{if(typeof e===\"string\"){return n(braces.parse(e,t),t)}return n(e,t)};braces.compile=(e,t={})=>{if(typeof e===\"string\"){e=braces.parse(e,t)}return u(e,t)};braces.expand=(e,t={})=>{if(typeof e===\"string\"){e=braces.parse(e,t)}let r=s(e,t);if(t.noempty===true){r=r.filter(Boolean)}if(t.nodupes===true){r=[...new Set(r)]}return r};braces.create=(e,t={})=>{if(e===\"\"||e.length<3){return[e]}return t.expand!==true?braces.compile(e,t):braces.expand(e,t)};e.exports=braces},179:(e,t,r)=>{const n=r(783);const u=r(617);const compile=(e,t={})=>{let walk=(e,r={})=>{let s=u.isInvalidBrace(r);let o=e.invalid===true&&t.escapeInvalid===true;let i=s===true||o===true;let a=t.escapeInvalid===true?\"\\\\\":\"\";let l=\"\";if(e.isOpen===true){return a+e.value}if(e.isClose===true){return a+e.value}if(e.type===\"open\"){return i?a+e.value:\"(\"}if(e.type===\"close\"){return i?a+e.value:\")\"}if(e.type===\"comma\"){return e.prev.type===\"comma\"?\"\":i?e.value:\"|\"}if(e.value){return e.value}if(e.nodes&&e.ranges>0){let r=u.reduce(e.nodes);let s=n(...r,{...t,wrap:false,toRegex:true});if(s.length!==0){return r.length>1&&s.length>1?`(${s})`:s}}if(e.nodes){for(let t of e.nodes){l+=walk(t,e)}}return l};return walk(e)};e.exports=compile},457:e=>{e.exports={MAX_LENGTH:1024*64,CHAR_0:\"0\",CHAR_9:\"9\",CHAR_UPPERCASE_A:\"A\",CHAR_LOWERCASE_A:\"a\",CHAR_UPPERCASE_Z:\"Z\",CHAR_LOWERCASE_Z:\"z\",CHAR_LEFT_PARENTHESES:\"(\",CHAR_RIGHT_PARENTHESES:\")\",CHAR_ASTERISK:\"*\",CHAR_AMPERSAND:\"&\",CHAR_AT:\"@\",CHAR_BACKSLASH:\"\\\\\",CHAR_BACKTICK:\"`\",CHAR_CARRIAGE_RETURN:\"\\r\",CHAR_CIRCUMFLEX_ACCENT:\"^\",CHAR_COLON:\":\",CHAR_COMMA:\",\",CHAR_DOLLAR:\"$\",CHAR_DOT:\".\",CHAR_DOUBLE_QUOTE:'\"',CHAR_EQUAL:\"=\",CHAR_EXCLAMATION_MARK:\"!\",CHAR_FORM_FEED:\"\\f\",CHAR_FORWARD_SLASH:\"/\",CHAR_HASH:\"#\",CHAR_HYPHEN_MINUS:\"-\",CHAR_LEFT_ANGLE_BRACKET:\"<\",CHAR_LEFT_CURLY_BRACE:\"{\",CHAR_LEFT_SQUARE_BRACKET:\"[\",CHAR_LINE_FEED:\"\\n\",CHAR_NO_BREAK_SPACE:\" \",CHAR_PERCENT:\"%\",CHAR_PLUS:\"+\",CHAR_QUESTION_MARK:\"?\",CHAR_RIGHT_ANGLE_BRACKET:\">\",CHAR_RIGHT_CURLY_BRACE:\"}\",CHAR_RIGHT_SQUARE_BRACKET:\"]\",CHAR_SEMICOLON:\";\",CHAR_SINGLE_QUOTE:\"'\",CHAR_SPACE:\" \",CHAR_TAB:\"\\t\",CHAR_UNDERSCORE:\"_\",CHAR_VERTICAL_LINE:\"|\",CHAR_ZERO_WIDTH_NOBREAK_SPACE:\"\\ufeff\"}},13:(e,t,r)=>{const n=r(783);const u=r(137);const s=r(617);const append=(e=\"\",t=\"\",r=false)=>{let n=[];e=[].concat(e);t=[].concat(t);if(!t.length)return e;if(!e.length){return r?s.flatten(t).map((e=>`{${e}}`)):t}for(let u of e){if(Array.isArray(u)){for(let e of u){n.push(append(e,t,r))}}else{for(let e of t){if(r===true&&typeof e===\"string\")e=`{${e}}`;n.push(Array.isArray(e)?append(u,e,r):u+e)}}}return s.flatten(n)};const expand=(e,t={})=>{let r=t.rangeLimit===void 0?1e3:t.rangeLimit;let walk=(e,o={})=>{e.queue=[];let i=o;let a=o.queue;while(i.type!==\"brace\"&&i.type!==\"root\"&&i.parent){i=i.parent;a=i.queue}if(e.invalid||e.dollar){a.push(append(a.pop(),u(e,t)));return}if(e.type===\"brace\"&&e.invalid!==true&&e.nodes.length===2){a.push(append(a.pop(),[\"{}\"]));return}if(e.nodes&&e.ranges>0){let o=s.reduce(e.nodes);if(s.exceedsLimit(...o,t.step,r)){throw new RangeError(\"expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.\")}let i=n(...o,t);if(i.length===0){i=u(e,t)}a.push(append(a.pop(),i));e.nodes=[];return}let l=s.encloseBrace(e);let c=e.queue;let p=e;while(p.type!==\"brace\"&&p.type!==\"root\"&&p.parent){p=p.parent;c=p.queue}for(let t=0;t<e.nodes.length;t++){let r=e.nodes[t];if(r.type===\"comma\"&&e.type===\"brace\"){if(t===1)c.push(\"\");c.push(\"\");continue}if(r.type===\"close\"){a.push(append(a.pop(),c,l));continue}if(r.value&&r.type!==\"open\"){c.push(append(c.pop(),r.value));continue}if(r.nodes){walk(r,e)}}return c};return s.flatten(walk(e))};e.exports=expand},719:(e,t,r)=>{const n=r(137);const{MAX_LENGTH:u,CHAR_BACKSLASH:s,CHAR_BACKTICK:o,CHAR_COMMA:i,CHAR_DOT:a,CHAR_LEFT_PARENTHESES:l,CHAR_RIGHT_PARENTHESES:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_RIGHT_CURLY_BRACE:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_RIGHT_SQUARE_BRACKET:R,CHAR_DOUBLE_QUOTE:_,CHAR_SINGLE_QUOTE:h,CHAR_NO_BREAK_SPACE:g,CHAR_ZERO_WIDTH_NOBREAK_SPACE:E}=r(457);const parse=(e,t={})=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected a string\")}let r=t||{};let C=typeof r.maxLength===\"number\"?Math.min(u,r.maxLength):u;if(e.length>C){throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${C})`)}let y={type:\"root\",input:e,nodes:[]};let d=[y];let x=y;let b=y;let S=0;let H=e.length;let v=0;let $=0;let m;let T={};const advance=()=>e[v++];const push=e=>{if(e.type===\"text\"&&b.type===\"dot\"){b.type=\"text\"}if(b&&b.type===\"text\"&&e.type===\"text\"){b.value+=e.value;return}x.nodes.push(e);e.parent=x;e.prev=b;b=e;return e};push({type:\"bos\"});while(v<H){x=d[d.length-1];m=advance();if(m===E||m===g){continue}if(m===s){push({type:\"text\",value:(t.keepEscaping?m:\"\")+advance()});continue}if(m===R){push({type:\"text\",value:\"\\\\\"+m});continue}if(m===A){S++;let e=true;let t;while(v<H&&(t=advance())){m+=t;if(t===A){S++;continue}if(t===s){m+=advance();continue}if(t===R){S--;if(S===0){break}}}push({type:\"text\",value:m});continue}if(m===l){x=push({type:\"paren\",nodes:[]});d.push(x);push({type:\"text\",value:m});continue}if(m===c){if(x.type!==\"paren\"){push({type:\"text\",value:m});continue}x=d.pop();push({type:\"text\",value:m});x=d[d.length-1];continue}if(m===_||m===h||m===o){let e=m;let r;if(t.keepQuotes!==true){m=\"\"}while(v<H&&(r=advance())){if(r===s){m+=r+advance();continue}if(r===e){if(t.keepQuotes===true)m+=r;break}m+=r}push({type:\"text\",value:m});continue}if(m===p){$++;let e=b.value&&b.value.slice(-1)===\"$\"||x.dollar===true;let t={type:\"brace\",open:true,close:false,dollar:e,depth:$,commas:0,ranges:0,nodes:[]};x=push(t);d.push(x);push({type:\"open\",value:m});continue}if(m===f){if(x.type!==\"brace\"){push({type:\"text\",value:m});continue}let e=\"close\";x=d.pop();x.close=true;push({type:e,value:m});$--;x=d[d.length-1];continue}if(m===i&&$>0){if(x.ranges>0){x.ranges=0;let e=x.nodes.shift();x.nodes=[e,{type:\"text\",value:n(x)}]}push({type:\"comma\",value:m});x.commas++;continue}if(m===a&&$>0&&x.commas===0){let e=x.nodes;if($===0||e.length===0){push({type:\"text\",value:m});continue}if(b.type===\"dot\"){x.range=[];b.value+=m;b.type=\"range\";if(x.nodes.length!==3&&x.nodes.length!==5){x.invalid=true;x.ranges=0;b.type=\"text\";continue}x.ranges++;x.args=[];continue}if(b.type===\"range\"){e.pop();let t=e[e.length-1];t.value+=b.value+m;b=t;x.ranges--;continue}push({type:\"dot\",value:m});continue}push({type:\"text\",value:m})}do{x=d.pop();if(x.type!==\"root\"){x.nodes.forEach((e=>{if(!e.nodes){if(e.type===\"open\")e.isOpen=true;if(e.type===\"close\")e.isClose=true;if(!e.nodes)e.type=\"text\";e.invalid=true}}));let e=d[d.length-1];let t=e.nodes.indexOf(x);e.nodes.splice(t,1,...x.nodes)}}while(d.length>0);push({type:\"eos\"});return y};e.exports=parse},137:(e,t,r)=>{const n=r(617);e.exports=(e,t={})=>{let stringify=(e,r={})=>{let u=t.escapeInvalid&&n.isInvalidBrace(r);let s=e.invalid===true&&t.escapeInvalid===true;let o=\"\";if(e.value){if((u||s)&&n.isOpenOrClose(e)){return\"\\\\\"+e.value}return e.value}if(e.value){return e.value}if(e.nodes){for(let t of e.nodes){o+=stringify(t)}}return o};return stringify(e)}},617:(e,t)=>{t.isInteger=e=>{if(typeof e===\"number\"){return Number.isInteger(e)}if(typeof e===\"string\"&&e.trim()!==\"\"){return Number.isInteger(Number(e))}return false};t.find=(e,t)=>e.nodes.find((e=>e.type===t));t.exceedsLimit=(e,r,n=1,u)=>{if(u===false)return false;if(!t.isInteger(e)||!t.isInteger(r))return false;return(Number(r)-Number(e))/Number(n)>=u};t.escapeNode=(e,t=0,r)=>{let n=e.nodes[t];if(!n)return;if(r&&n.type===r||n.type===\"open\"||n.type===\"close\"){if(n.escaped!==true){n.value=\"\\\\\"+n.value;n.escaped=true}}};t.encloseBrace=e=>{if(e.type!==\"brace\")return false;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}return false};t.isInvalidBrace=e=>{if(e.type!==\"brace\")return false;if(e.invalid===true||e.dollar)return true;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}if(e.open!==true||e.close!==true){e.invalid=true;return true}return false};t.isOpenOrClose=e=>{if(e.type===\"open\"||e.type===\"close\"){return true}return e.open===true||e.close===true};t.reduce=e=>e.reduce(((e,t)=>{if(t.type===\"text\")e.push(t.value);if(t.type===\"range\")t.type=\"text\";return e}),[]);t.flatten=(...e)=>{const t=[];const flat=e=>{for(let r=0;r<e.length;r++){let n=e[r];Array.isArray(n)?flat(n,t):n!==void 0&&t.push(n)}return t};flat(e);return t}},783:(e,t,r)=>{\n/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\nconst n=r(837);const u=r(492);const isObject=e=>e!==null&&typeof e===\"object\"&&!Array.isArray(e);const transform=e=>t=>e===true?Number(t):String(t);const isValidValue=e=>typeof e===\"number\"||typeof e===\"string\"&&e!==\"\";const isNumber=e=>Number.isInteger(+e);const zeros=e=>{let t=`${e}`;let r=-1;if(t[0]===\"-\")t=t.slice(1);if(t===\"0\")return false;while(t[++r]===\"0\");return r>0};const stringify=(e,t,r)=>{if(typeof e===\"string\"||typeof t===\"string\"){return true}return r.stringify===true};const pad=(e,t,r)=>{if(t>0){let r=e[0]===\"-\"?\"-\":\"\";if(r)e=e.slice(1);e=r+e.padStart(r?t-1:t,\"0\")}if(r===false){return String(e)}return e};const toMaxLen=(e,t)=>{let r=e[0]===\"-\"?\"-\":\"\";if(r){e=e.slice(1);t--}while(e.length<t)e=\"0\"+e;return r?\"-\"+e:e};const toSequence=(e,t)=>{e.negatives.sort(((e,t)=>e<t?-1:e>t?1:0));e.positives.sort(((e,t)=>e<t?-1:e>t?1:0));let r=t.capture?\"\":\"?:\";let n=\"\";let u=\"\";let s;if(e.positives.length){n=e.positives.join(\"|\")}if(e.negatives.length){u=`-(${r}${e.negatives.join(\"|\")})`}if(n&&u){s=`${n}|${u}`}else{s=n||u}if(t.wrap){return`(${r}${s})`}return s};const toRange=(e,t,r,n)=>{if(r){return u(e,t,{wrap:false,...n})}let s=String.fromCharCode(e);if(e===t)return s;let o=String.fromCharCode(t);return`[${s}-${o}]`};const toRegex=(e,t,r)=>{if(Array.isArray(e)){let t=r.wrap===true;let n=r.capture?\"\":\"?:\";return t?`(${n}${e.join(\"|\")})`:e.join(\"|\")}return u(e,t,r)};const rangeError=(...e)=>new RangeError(\"Invalid range arguments: \"+n.inspect(...e));const invalidRange=(e,t,r)=>{if(r.strictRanges===true)throw rangeError([e,t]);return[]};const invalidStep=(e,t)=>{if(t.strictRanges===true){throw new TypeError(`Expected step \"${e}\" to be a number`)}return[]};const fillNumbers=(e,t,r=1,n={})=>{let u=Number(e);let s=Number(t);if(!Number.isInteger(u)||!Number.isInteger(s)){if(n.strictRanges===true)throw rangeError([e,t]);return[]}if(u===0)u=0;if(s===0)s=0;let o=u>s;let i=String(e);let a=String(t);let l=String(r);r=Math.max(Math.abs(r),1);let c=zeros(i)||zeros(a)||zeros(l);let p=c?Math.max(i.length,a.length,l.length):0;let f=c===false&&stringify(e,t,n)===false;let A=n.transform||transform(f);if(n.toRegex&&r===1){return toRange(toMaxLen(e,p),toMaxLen(t,p),true,n)}let R={negatives:[],positives:[]};let push=e=>R[e<0?\"negatives\":\"positives\"].push(Math.abs(e));let _=[];let h=0;while(o?u>=s:u<=s){if(n.toRegex===true&&r>1){push(u)}else{_.push(pad(A(u,h),p,f))}u=o?u-r:u+r;h++}if(n.toRegex===true){return r>1?toSequence(R,n):toRegex(_,null,{wrap:false,...n})}return _};const fillLetters=(e,t,r=1,n={})=>{if(!isNumber(e)&&e.length>1||!isNumber(t)&&t.length>1){return invalidRange(e,t,n)}let u=n.transform||(e=>String.fromCharCode(e));let s=`${e}`.charCodeAt(0);let o=`${t}`.charCodeAt(0);let i=s>o;let a=Math.min(s,o);let l=Math.max(s,o);if(n.toRegex&&r===1){return toRange(a,l,false,n)}let c=[];let p=0;while(i?s>=o:s<=o){c.push(u(s,p));s=i?s-r:s+r;p++}if(n.toRegex===true){return toRegex(c,null,{wrap:false,options:n})}return c};const fill=(e,t,r,n={})=>{if(t==null&&isValidValue(e)){return[e]}if(!isValidValue(e)||!isValidValue(t)){return invalidRange(e,t,n)}if(typeof r===\"function\"){return fill(e,t,1,{transform:r})}if(isObject(r)){return fill(e,t,0,r)}let u={...n};if(u.capture===true)u.wrap=true;r=r||u.step||1;if(!isNumber(r)){if(r!=null&&!isObject(r))return invalidStep(r,u);return fill(e,t,1,r)}if(isNumber(e)&&isNumber(t)){return fillNumbers(e,t,r,u)}return fillLetters(e,t,Math.max(Math.abs(r),1),u)};e.exports=fill},357:e=>{\n/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\ne.exports=function(e){if(typeof e===\"number\"){return e-e===0}if(typeof e===\"string\"&&e.trim()!==\"\"){return Number.isFinite?Number.isFinite(+e):isFinite(+e)}return false}},971:(e,t,r)=>{const n=r(837);const u=r(333);const s=r(251);const o=r(513);const isEmptyString=e=>e===\"\"||e===\"./\";const micromatch=(e,t,r)=>{t=[].concat(t);e=[].concat(e);let n=new Set;let u=new Set;let o=new Set;let i=0;let onResult=e=>{o.add(e.output);if(r&&r.onResult){r.onResult(e)}};for(let o=0;o<t.length;o++){let a=s(String(t[o]),{...r,onResult:onResult},true);let l=a.state.negated||a.state.negatedExtglob;if(l)i++;for(let t of e){let e=a(t,true);let r=l?!e.isMatch:e.isMatch;if(!r)continue;if(l){n.add(e.output)}else{n.delete(e.output);u.add(e.output)}}}let a=i===t.length?[...o]:[...u];let l=a.filter((e=>!n.has(e)));if(r&&l.length===0){if(r.failglob===true){throw new Error(`No matches found for \"${t.join(\", \")}\"`)}if(r.nonull===true||r.nullglob===true){return r.unescape?t.map((e=>e.replace(/\\\\/g,\"\"))):t}}return l};micromatch.match=micromatch;micromatch.matcher=(e,t)=>s(e,t);micromatch.isMatch=(e,t,r)=>s(t,r)(e);micromatch.any=micromatch.isMatch;micromatch.not=(e,t,r={})=>{t=[].concat(t).map(String);let n=new Set;let u=[];let onResult=e=>{if(r.onResult)r.onResult(e);u.push(e.output)};let s=micromatch(e,t,{...r,onResult:onResult});for(let e of u){if(!s.includes(e)){n.add(e)}}return[...n]};micromatch.contains=(e,t,r)=>{if(typeof e!==\"string\"){throw new TypeError(`Expected a string: \"${n.inspect(e)}\"`)}if(Array.isArray(t)){return t.some((t=>micromatch.contains(e,t,r)))}if(typeof t===\"string\"){if(isEmptyString(e)||isEmptyString(t)){return false}if(e.includes(t)||e.startsWith(\"./\")&&e.slice(2).includes(t)){return true}}return micromatch.isMatch(e,t,{...r,contains:true})};micromatch.matchKeys=(e,t,r)=>{if(!o.isObject(e)){throw new TypeError(\"Expected the first argument to be an object\")}let n=micromatch(Object.keys(e),t,r);let u={};for(let t of n)u[t]=e[t];return u};micromatch.some=(e,t,r)=>{let n=[].concat(e);for(let e of[].concat(t)){let t=s(String(e),r);if(n.some((e=>t(e)))){return true}}return false};micromatch.every=(e,t,r)=>{let n=[].concat(e);for(let e of[].concat(t)){let t=s(String(e),r);if(!n.every((e=>t(e)))){return false}}return true};micromatch.all=(e,t,r)=>{if(typeof e!==\"string\"){throw new TypeError(`Expected a string: \"${n.inspect(e)}\"`)}return[].concat(t).every((t=>s(t,r)(e)))};micromatch.capture=(e,t,r)=>{let n=o.isWindows(r);let u=s.makeRe(String(e),{...r,capture:true});let i=u.exec(n?o.toPosixSlashes(t):t);if(i){return i.slice(1).map((e=>e===void 0?\"\":e))}};micromatch.makeRe=(...e)=>s.makeRe(...e);micromatch.scan=(...e)=>s.scan(...e);micromatch.parse=(e,t)=>{let r=[];for(let n of[].concat(e||[])){for(let e of u(String(n),t)){r.push(s.parse(e,t))}}return r};micromatch.braces=(e,t)=>{if(typeof e!==\"string\")throw new TypeError(\"Expected a string\");if(t&&t.nobrace===true||!/\\{.*\\}/.test(e)){return[e]}return u(e,t)};micromatch.braceExpand=(e,t)=>{if(typeof e!==\"string\")throw new TypeError(\"Expected a string\");return micromatch.braces(e,{...t,expand:true})};e.exports=micromatch},251:(e,t,r)=>{e.exports=r(683)},356:(e,t,r)=>{const n=r(17);const u=\"\\\\\\\\/\";const s=`[^${u}]`;const o=\"\\\\.\";const i=\"\\\\+\";const a=\"\\\\?\";const l=\"\\\\/\";const c=\"(?=.)\";const p=\"[^/]\";const f=`(?:${l}|$)`;const A=`(?:^|${l})`;const R=`${o}{1,2}${f}`;const _=`(?!${o})`;const h=`(?!${A}${R})`;const g=`(?!${o}{0,1}${f})`;const E=`(?!${R})`;const C=`[^.${l}]`;const y=`${p}*?`;const d={DOT_LITERAL:o,PLUS_LITERAL:i,QMARK_LITERAL:a,SLASH_LITERAL:l,ONE_CHAR:c,QMARK:p,END_ANCHOR:f,DOTS_SLASH:R,NO_DOT:_,NO_DOTS:h,NO_DOT_SLASH:g,NO_DOTS_SLASH:E,QMARK_NO_DOT:C,STAR:y,START_ANCHOR:A};const x={...d,SLASH_LITERAL:`[${u}]`,QMARK:s,STAR:`${s}*?`,DOTS_SLASH:`${o}{1,2}(?:[${u}]|$)`,NO_DOT:`(?!${o})`,NO_DOTS:`(?!(?:^|[${u}])${o}{1,2}(?:[${u}]|$))`,NO_DOT_SLASH:`(?!${o}{0,1}(?:[${u}]|$))`,NO_DOTS_SLASH:`(?!${o}{1,2}(?:[${u}]|$))`,QMARK_NO_DOT:`[^.${u}]`,START_ANCHOR:`(?:^|[${u}])`,END_ANCHOR:`(?:[${u}]|$)`};const b={alnum:\"a-zA-Z0-9\",alpha:\"a-zA-Z\",ascii:\"\\\\x00-\\\\x7F\",blank:\" \\\\t\",cntrl:\"\\\\x00-\\\\x1F\\\\x7F\",digit:\"0-9\",graph:\"\\\\x21-\\\\x7E\",lower:\"a-z\",print:\"\\\\x20-\\\\x7E \",punct:\"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",space:\" \\\\t\\\\r\\\\n\\\\v\\\\f\",upper:\"A-Z\",word:\"A-Za-z0-9_\",xdigit:\"A-Fa-f0-9\"};e.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:b,REGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\\].,$*+?^{}()|\\\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,REPLACEMENTS:{\"***\":\"*\",\"**/**\":\"**\",\"**/**/**\":\"**\"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:n.sep,extglobChars(e){return{\"!\":{type:\"negate\",open:\"(?:(?!(?:\",close:`))${e.STAR})`},\"?\":{type:\"qmark\",open:\"(?:\",close:\")?\"},\"+\":{type:\"plus\",open:\"(?:\",close:\")+\"},\"*\":{type:\"star\",open:\"(?:\",close:\")*\"},\"@\":{type:\"at\",open:\"(?:\",close:\")\"}}},globChars(e){return e===true?x:d}}},754:(e,t,r)=>{const n=r(356);const u=r(513);const{MAX_LENGTH:s,POSIX_REGEX_SOURCE:o,REGEX_NON_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_BACKREF:a,REPLACEMENTS:l}=n;const expandRange=(e,t)=>{if(typeof t.expandRange===\"function\"){return t.expandRange(...e,t)}e.sort();const r=`[${e.join(\"-\")}]`;try{new RegExp(r)}catch(t){return e.map((e=>u.escapeRegex(e))).join(\"..\")}return r};const syntaxError=(e,t)=>`Missing ${e}: \"${t}\" - use \"\\\\\\\\${t}\" to match literal characters`;const parse=(e,t)=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected a string\")}e=l[e]||e;const r={...t};const c=typeof r.maxLength===\"number\"?Math.min(s,r.maxLength):s;let p=e.length;if(p>c){throw new SyntaxError(`Input length: ${p}, exceeds maximum allowed length: ${c}`)}const f={type:\"bos\",value:\"\",output:r.prepend||\"\"};const A=[f];const R=r.capture?\"\":\"?:\";const _=u.isWindows(t);const h=n.globChars(_);const g=n.extglobChars(h);const{DOT_LITERAL:E,PLUS_LITERAL:C,SLASH_LITERAL:y,ONE_CHAR:d,DOTS_SLASH:x,NO_DOT:b,NO_DOT_SLASH:S,NO_DOTS_SLASH:H,QMARK:v,QMARK_NO_DOT:$,STAR:m,START_ANCHOR:T}=h;const globstar=e=>`(${R}(?:(?!${T}${e.dot?x:E}).)*?)`;const L=r.dot?\"\":b;const O=r.dot?v:$;let w=r.bash===true?globstar(r):m;if(r.capture){w=`(${w})`}if(typeof r.noext===\"boolean\"){r.noextglob=r.noext}const N={input:e,index:-1,start:0,dot:r.dot===true,consumed:\"\",output:\"\",prefix:\"\",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};e=u.removePrefix(e,N);p=e.length;const k=[];const I=[];const M=[];let P=f;let B;const eos=()=>N.index===p-1;const G=N.peek=(t=1)=>e[N.index+t];const D=N.advance=()=>e[++N.index];const remaining=()=>e.slice(N.index+1);const consume=(e=\"\",t=0)=>{N.consumed+=e;N.index+=t};const append=e=>{N.output+=e.output!=null?e.output:e.value;consume(e.value)};const negate=()=>{let e=1;while(G()===\"!\"&&(G(2)!==\"(\"||G(3)===\"?\")){D();N.start++;e++}if(e%2===0){return false}N.negated=true;N.start++;return true};const increment=e=>{N[e]++;M.push(e)};const decrement=e=>{N[e]--;M.pop()};const push=e=>{if(P.type===\"globstar\"){const t=N.braces>0&&(e.type===\"comma\"||e.type===\"brace\");const r=e.extglob===true||k.length&&(e.type===\"pipe\"||e.type===\"paren\");if(e.type!==\"slash\"&&e.type!==\"paren\"&&!t&&!r){N.output=N.output.slice(0,-P.output.length);P.type=\"star\";P.value=\"*\";P.output=w;N.output+=P.output}}if(k.length&&e.type!==\"paren\"&&!g[e.value]){k[k.length-1].inner+=e.value}if(e.value||e.output)append(e);if(P&&P.type===\"text\"&&e.type===\"text\"){P.value+=e.value;P.output=(P.output||\"\")+e.value;return}e.prev=P;A.push(e);P=e};const extglobOpen=(e,t)=>{const n={...g[t],conditions:1,inner:\"\"};n.prev=P;n.parens=N.parens;n.output=N.output;const u=(r.capture?\"(\":\"\")+n.open;increment(\"parens\");push({type:e,value:t,output:N.output?\"\":d});push({type:\"paren\",extglob:true,value:D(),output:u});k.push(n)};const extglobClose=e=>{let t=e.close+(r.capture?\")\":\"\");if(e.type===\"negate\"){let n=w;if(e.inner&&e.inner.length>1&&e.inner.includes(\"/\")){n=globstar(r)}if(n!==w||eos()||/^\\)+$/.test(remaining())){t=e.close=`)$))${n}`}if(e.prev.type===\"bos\"){N.negatedExtglob=true}}push({type:\"paren\",extglob:true,value:B,output:t});decrement(\"parens\")};if(r.fastpaths!==false&&!/(^[*!]|[/()[\\]{}\"])/.test(e)){let n=false;let s=e.replace(a,((e,t,r,u,s,o)=>{if(u===\"\\\\\"){n=true;return e}if(u===\"?\"){if(t){return t+u+(s?v.repeat(s.length):\"\")}if(o===0){return O+(s?v.repeat(s.length):\"\")}return v.repeat(r.length)}if(u===\".\"){return E.repeat(r.length)}if(u===\"*\"){if(t){return t+u+(s?w:\"\")}return w}return t?e:`\\\\${e}`}));if(n===true){if(r.unescape===true){s=s.replace(/\\\\/g,\"\")}else{s=s.replace(/\\\\+/g,(e=>e.length%2===0?\"\\\\\\\\\":e?\"\\\\\":\"\"))}}if(s===e&&r.contains===true){N.output=e;return N}N.output=u.wrapOutput(s,N,t);return N}while(!eos()){B=D();if(B===\"\\0\"){continue}if(B===\"\\\\\"){const e=G();if(e===\"/\"&&r.bash!==true){continue}if(e===\".\"||e===\";\"){continue}if(!e){B+=\"\\\\\";push({type:\"text\",value:B});continue}const t=/^\\\\+/.exec(remaining());let n=0;if(t&&t[0].length>2){n=t[0].length;N.index+=n;if(n%2!==0){B+=\"\\\\\"}}if(r.unescape===true){B=D()||\"\"}else{B+=D()||\"\"}if(N.brackets===0){push({type:\"text\",value:B});continue}}if(N.brackets>0&&(B!==\"]\"||P.value===\"[\"||P.value===\"[^\")){if(r.posix!==false&&B===\":\"){const e=P.value.slice(1);if(e.includes(\"[\")){P.posix=true;if(e.includes(\":\")){const e=P.value.lastIndexOf(\"[\");const t=P.value.slice(0,e);const r=P.value.slice(e+2);const n=o[r];if(n){P.value=t+n;N.backtrack=true;D();if(!f.output&&A.indexOf(P)===1){f.output=d}continue}}}}if(B===\"[\"&&G()!==\":\"||B===\"-\"&&G()===\"]\"){B=`\\\\${B}`}if(B===\"]\"&&(P.value===\"[\"||P.value===\"[^\")){B=`\\\\${B}`}if(r.posix===true&&B===\"!\"&&P.value===\"[\"){B=\"^\"}P.value+=B;append({value:B});continue}if(N.quotes===1&&B!=='\"'){B=u.escapeRegex(B);P.value+=B;append({value:B});continue}if(B==='\"'){N.quotes=N.quotes===1?0:1;if(r.keepQuotes===true){push({type:\"text\",value:B})}continue}if(B===\"(\"){increment(\"parens\");push({type:\"paren\",value:B});continue}if(B===\")\"){if(N.parens===0&&r.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"(\"))}const e=k[k.length-1];if(e&&N.parens===e.parens+1){extglobClose(k.pop());continue}push({type:\"paren\",value:B,output:N.parens?\")\":\"\\\\)\"});decrement(\"parens\");continue}if(B===\"[\"){if(r.nobracket===true||!remaining().includes(\"]\")){if(r.nobracket!==true&&r.strictBrackets===true){throw new SyntaxError(syntaxError(\"closing\",\"]\"))}B=`\\\\${B}`}else{increment(\"brackets\")}push({type:\"bracket\",value:B});continue}if(B===\"]\"){if(r.nobracket===true||P&&P.type===\"bracket\"&&P.value.length===1){push({type:\"text\",value:B,output:`\\\\${B}`});continue}if(N.brackets===0){if(r.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"[\"))}push({type:\"text\",value:B,output:`\\\\${B}`});continue}decrement(\"brackets\");const e=P.value.slice(1);if(P.posix!==true&&e[0]===\"^\"&&!e.includes(\"/\")){B=`/${B}`}P.value+=B;append({value:B});if(r.literalBrackets===false||u.hasRegexChars(e)){continue}const t=u.escapeRegex(P.value);N.output=N.output.slice(0,-P.value.length);if(r.literalBrackets===true){N.output+=t;P.value=t;continue}P.value=`(${R}${t}|${P.value})`;N.output+=P.value;continue}if(B===\"{\"&&r.nobrace!==true){increment(\"braces\");const e={type:\"brace\",value:B,output:\"(\",outputIndex:N.output.length,tokensIndex:N.tokens.length};I.push(e);push(e);continue}if(B===\"}\"){const e=I[I.length-1];if(r.nobrace===true||!e){push({type:\"text\",value:B,output:B});continue}let t=\")\";if(e.dots===true){const e=A.slice();const n=[];for(let t=e.length-1;t>=0;t--){A.pop();if(e[t].type===\"brace\"){break}if(e[t].type!==\"dots\"){n.unshift(e[t].value)}}t=expandRange(n,r);N.backtrack=true}if(e.comma!==true&&e.dots!==true){const r=N.output.slice(0,e.outputIndex);const n=N.tokens.slice(e.tokensIndex);e.value=e.output=\"\\\\{\";B=t=\"\\\\}\";N.output=r;for(const e of n){N.output+=e.output||e.value}}push({type:\"brace\",value:B,output:t});decrement(\"braces\");I.pop();continue}if(B===\"|\"){if(k.length>0){k[k.length-1].conditions++}push({type:\"text\",value:B});continue}if(B===\",\"){let e=B;const t=I[I.length-1];if(t&&M[M.length-1]===\"braces\"){t.comma=true;e=\"|\"}push({type:\"comma\",value:B,output:e});continue}if(B===\"/\"){if(P.type===\"dot\"&&N.index===N.start+1){N.start=N.index+1;N.consumed=\"\";N.output=\"\";A.pop();P=f;continue}push({type:\"slash\",value:B,output:y});continue}if(B===\".\"){if(N.braces>0&&P.type===\"dot\"){if(P.value===\".\")P.output=E;const e=I[I.length-1];P.type=\"dots\";P.output+=B;P.value+=B;e.dots=true;continue}if(N.braces+N.parens===0&&P.type!==\"bos\"&&P.type!==\"slash\"){push({type:\"text\",value:B,output:E});continue}push({type:\"dot\",value:B,output:E});continue}if(B===\"?\"){const e=P&&P.value===\"(\";if(!e&&r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){extglobOpen(\"qmark\",B);continue}if(P&&P.type===\"paren\"){const e=G();let t=B;if(e===\"<\"&&!u.supportsLookbehinds()){throw new Error(\"Node.js v10 or higher is required for regex lookbehinds\")}if(P.value===\"(\"&&!/[!=<:]/.test(e)||e===\"<\"&&!/<([!=]|\\w+>)/.test(remaining())){t=`\\\\${B}`}push({type:\"text\",value:B,output:t});continue}if(r.dot!==true&&(P.type===\"slash\"||P.type===\"bos\")){push({type:\"qmark\",value:B,output:$});continue}push({type:\"qmark\",value:B,output:v});continue}if(B===\"!\"){if(r.noextglob!==true&&G()===\"(\"){if(G(2)!==\"?\"||!/[!=<:]/.test(G(3))){extglobOpen(\"negate\",B);continue}}if(r.nonegate!==true&&N.index===0){negate();continue}}if(B===\"+\"){if(r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){extglobOpen(\"plus\",B);continue}if(P&&P.value===\"(\"||r.regex===false){push({type:\"plus\",value:B,output:C});continue}if(P&&(P.type===\"bracket\"||P.type===\"paren\"||P.type===\"brace\")||N.parens>0){push({type:\"plus\",value:B});continue}push({type:\"plus\",value:C});continue}if(B===\"@\"){if(r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){push({type:\"at\",extglob:true,value:B,output:\"\"});continue}push({type:\"text\",value:B});continue}if(B!==\"*\"){if(B===\"$\"||B===\"^\"){B=`\\\\${B}`}const e=i.exec(remaining());if(e){B+=e[0];N.index+=e[0].length}push({type:\"text\",value:B});continue}if(P&&(P.type===\"globstar\"||P.star===true)){P.type=\"star\";P.star=true;P.value+=B;P.output=w;N.backtrack=true;N.globstar=true;consume(B);continue}let t=remaining();if(r.noextglob!==true&&/^\\([^?]/.test(t)){extglobOpen(\"star\",B);continue}if(P.type===\"star\"){if(r.noglobstar===true){consume(B);continue}const n=P.prev;const u=n.prev;const s=n.type===\"slash\"||n.type===\"bos\";const o=u&&(u.type===\"star\"||u.type===\"globstar\");if(r.bash===true&&(!s||t[0]&&t[0]!==\"/\")){push({type:\"star\",value:B,output:\"\"});continue}const i=N.braces>0&&(n.type===\"comma\"||n.type===\"brace\");const a=k.length&&(n.type===\"pipe\"||n.type===\"paren\");if(!s&&n.type!==\"paren\"&&!i&&!a){push({type:\"star\",value:B,output:\"\"});continue}while(t.slice(0,3)===\"/**\"){const r=e[N.index+4];if(r&&r!==\"/\"){break}t=t.slice(3);consume(\"/**\",3)}if(n.type===\"bos\"&&eos()){P.type=\"globstar\";P.value+=B;P.output=globstar(r);N.output=P.output;N.globstar=true;consume(B);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&!o&&eos()){N.output=N.output.slice(0,-(n.output+P.output).length);n.output=`(?:${n.output}`;P.type=\"globstar\";P.output=globstar(r)+(r.strictSlashes?\")\":\"|$)\");P.value+=B;N.globstar=true;N.output+=n.output+P.output;consume(B);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&t[0]===\"/\"){const e=t[1]!==void 0?\"|$\":\"\";N.output=N.output.slice(0,-(n.output+P.output).length);n.output=`(?:${n.output}`;P.type=\"globstar\";P.output=`${globstar(r)}${y}|${y}${e})`;P.value+=B;N.output+=n.output+P.output;N.globstar=true;consume(B+D());push({type:\"slash\",value:\"/\",output:\"\"});continue}if(n.type===\"bos\"&&t[0]===\"/\"){P.type=\"globstar\";P.value+=B;P.output=`(?:^|${y}|${globstar(r)}${y})`;N.output=P.output;N.globstar=true;consume(B+D());push({type:\"slash\",value:\"/\",output:\"\"});continue}N.output=N.output.slice(0,-P.output.length);P.type=\"globstar\";P.output=globstar(r);P.value+=B;N.output+=P.output;N.globstar=true;consume(B);continue}const n={type:\"star\",value:B,output:w};if(r.bash===true){n.output=\".*?\";if(P.type===\"bos\"||P.type===\"slash\"){n.output=L+n.output}push(n);continue}if(P&&(P.type===\"bracket\"||P.type===\"paren\")&&r.regex===true){n.output=B;push(n);continue}if(N.index===N.start||P.type===\"slash\"||P.type===\"dot\"){if(P.type===\"dot\"){N.output+=S;P.output+=S}else if(r.dot===true){N.output+=H;P.output+=H}else{N.output+=L;P.output+=L}if(G()!==\"*\"){N.output+=d;P.output+=d}}push(n)}while(N.brackets>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"]\"));N.output=u.escapeLast(N.output,\"[\");decrement(\"brackets\")}while(N.parens>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\")\"));N.output=u.escapeLast(N.output,\"(\");decrement(\"parens\")}while(N.braces>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"}\"));N.output=u.escapeLast(N.output,\"{\");decrement(\"braces\")}if(r.strictSlashes!==true&&(P.type===\"star\"||P.type===\"bracket\")){push({type:\"maybe_slash\",value:\"\",output:`${y}?`})}if(N.backtrack===true){N.output=\"\";for(const e of N.tokens){N.output+=e.output!=null?e.output:e.value;if(e.suffix){N.output+=e.suffix}}}return N};parse.fastpaths=(e,t)=>{const r={...t};const o=typeof r.maxLength===\"number\"?Math.min(s,r.maxLength):s;const i=e.length;if(i>o){throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${o}`)}e=l[e]||e;const a=u.isWindows(t);const{DOT_LITERAL:c,SLASH_LITERAL:p,ONE_CHAR:f,DOTS_SLASH:A,NO_DOT:R,NO_DOTS:_,NO_DOTS_SLASH:h,STAR:g,START_ANCHOR:E}=n.globChars(a);const C=r.dot?_:R;const y=r.dot?h:R;const d=r.capture?\"\":\"?:\";const x={negated:false,prefix:\"\"};let b=r.bash===true?\".*?\":g;if(r.capture){b=`(${b})`}const globstar=e=>{if(e.noglobstar===true)return b;return`(${d}(?:(?!${E}${e.dot?A:c}).)*?)`};const create=e=>{switch(e){case\"*\":return`${C}${f}${b}`;case\".*\":return`${c}${f}${b}`;case\"*.*\":return`${C}${b}${c}${f}${b}`;case\"*/*\":return`${C}${b}${p}${f}${y}${b}`;case\"**\":return C+globstar(r);case\"**/*\":return`(?:${C}${globstar(r)}${p})?${y}${f}${b}`;case\"**/*.*\":return`(?:${C}${globstar(r)}${p})?${y}${b}${c}${f}${b}`;case\"**/.*\":return`(?:${C}${globstar(r)}${p})?${c}${f}${b}`;default:{const t=/^(.*?)\\.(\\w+)$/.exec(e);if(!t)return;const r=create(t[1]);if(!r)return;return r+c+t[2]}}};const S=u.removePrefix(e,x);let H=create(S);if(H&&r.strictSlashes!==true){H+=`${p}?`}return H};e.exports=parse},683:(e,t,r)=>{const n=r(17);const u=r(700);const s=r(754);const o=r(513);const i=r(356);const isObject=e=>e&&typeof e===\"object\"&&!Array.isArray(e);const picomatch=(e,t,r=false)=>{if(Array.isArray(e)){const n=e.map((e=>picomatch(e,t,r)));const arrayMatcher=e=>{for(const t of n){const r=t(e);if(r)return r}return false};return arrayMatcher}const n=isObject(e)&&e.tokens&&e.input;if(e===\"\"||typeof e!==\"string\"&&!n){throw new TypeError(\"Expected pattern to be a non-empty string\")}const u=t||{};const s=o.isWindows(t);const i=n?picomatch.compileRe(e,t):picomatch.makeRe(e,t,false,true);const a=i.state;delete i.state;let isIgnored=()=>false;if(u.ignore){const e={...t,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(u.ignore,e,r)}const matcher=(r,n=false)=>{const{isMatch:o,match:l,output:c}=picomatch.test(r,i,t,{glob:e,posix:s});const p={glob:e,state:a,regex:i,posix:s,input:r,output:c,match:l,isMatch:o};if(typeof u.onResult===\"function\"){u.onResult(p)}if(o===false){p.isMatch=false;return n?p:false}if(isIgnored(r)){if(typeof u.onIgnore===\"function\"){u.onIgnore(p)}p.isMatch=false;return n?p:false}if(typeof u.onMatch===\"function\"){u.onMatch(p)}return n?p:true};if(r){matcher.state=a}return matcher};picomatch.test=(e,t,r,{glob:n,posix:u}={})=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected input to be a string\")}if(e===\"\"){return{isMatch:false,output:\"\"}}const s=r||{};const i=s.format||(u?o.toPosixSlashes:null);let a=e===n;let l=a&&i?i(e):e;if(a===false){l=i?i(e):e;a=l===n}if(a===false||s.capture===true){if(s.matchBase===true||s.basename===true){a=picomatch.matchBase(e,t,r,u)}else{a=t.exec(l)}}return{isMatch:Boolean(a),match:a,output:l}};picomatch.matchBase=(e,t,r,u=o.isWindows(r))=>{const s=t instanceof RegExp?t:picomatch.makeRe(t,r);return s.test(n.basename(e))};picomatch.isMatch=(e,t,r)=>picomatch(t,r)(e);picomatch.parse=(e,t)=>{if(Array.isArray(e))return e.map((e=>picomatch.parse(e,t)));return s(e,{...t,fastpaths:false})};picomatch.scan=(e,t)=>u(e,t);picomatch.compileRe=(e,t,r=false,n=false)=>{if(r===true){return e.output}const u=t||{};const s=u.contains?\"\":\"^\";const o=u.contains?\"\":\"$\";let i=`${s}(?:${e.output})${o}`;if(e&&e.negated===true){i=`^(?!${i}).*$`}const a=picomatch.toRegex(i,t);if(n===true){a.state=e}return a};picomatch.makeRe=(e,t,r=false,n=false)=>{if(!e||typeof e!==\"string\"){throw new TypeError(\"Expected a non-empty string\")}const u=t||{};let o={negated:false,fastpaths:true};let i=\"\";let a;if(e.startsWith(\"./\")){e=e.slice(2);i=o.prefix=\"./\"}if(u.fastpaths!==false&&(e[0]===\".\"||e[0]===\"*\")){a=s.fastpaths(e,t)}if(a===undefined){o=s(e,t);o.prefix=i+(o.prefix||\"\")}else{o.output=a}return picomatch.compileRe(o,t,r,n)};picomatch.toRegex=(e,t)=>{try{const r=t||{};return new RegExp(e,r.flags||(r.nocase?\"i\":\"\"))}catch(e){if(t&&t.debug===true)throw e;return/$^/}};picomatch.constants=i;e.exports=picomatch},700:(e,t,r)=>{const n=r(513);const{CHAR_ASTERISK:u,CHAR_AT:s,CHAR_BACKWARD_SLASH:o,CHAR_COMMA:i,CHAR_DOT:a,CHAR_EXCLAMATION_MARK:l,CHAR_FORWARD_SLASH:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:R,CHAR_QUESTION_MARK:_,CHAR_RIGHT_CURLY_BRACE:h,CHAR_RIGHT_PARENTHESES:g,CHAR_RIGHT_SQUARE_BRACKET:E}=r(356);const isPathSeparator=e=>e===c||e===o;const depth=e=>{if(e.isPrefix!==true){e.depth=e.isGlobstar?Infinity:1}};const scan=(e,t)=>{const r=t||{};const C=e.length-1;const y=r.parts===true||r.scanToEnd===true;const d=[];const x=[];const b=[];let S=e;let H=-1;let v=0;let $=0;let m=false;let T=false;let L=false;let O=false;let w=false;let N=false;let k=false;let I=false;let M=false;let P=0;let B;let G;let D={value:\"\",depth:0,isGlob:false};const eos=()=>H>=C;const peek=()=>S.charCodeAt(H+1);const advance=()=>{B=G;return S.charCodeAt(++H)};while(H<C){G=advance();let e;if(G===o){k=D.backslashes=true;G=advance();if(G===p){N=true}continue}if(N===true||G===p){P++;while(eos()!==true&&(G=advance())){if(G===o){k=D.backslashes=true;advance();continue}if(G===p){P++;continue}if(N!==true&&G===a&&(G=advance())===a){m=D.isBrace=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(N!==true&&G===i){m=D.isBrace=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===h){P--;if(P===0){N=false;m=D.isBrace=true;M=true;break}}}if(y===true){continue}break}if(G===c){d.push(H);x.push(D);D={value:\"\",depth:0,isGlob:false};if(M===true)continue;if(B===a&&H===v+1){v+=2;continue}$=H+1;continue}if(r.noext!==true){const e=G===R||G===s||G===u||G===_||G===l;if(e===true&&peek()===f){L=D.isGlob=true;O=D.isExtglob=true;M=true;if(y===true){while(eos()!==true&&(G=advance())){if(G===o){k=D.backslashes=true;G=advance();continue}if(G===g){L=D.isGlob=true;M=true;break}}continue}break}}if(G===u){if(B===u)w=D.isGlobstar=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===_){L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===A){while(eos()!==true&&(e=advance())){if(e===o){k=D.backslashes=true;advance();continue}if(e===E){T=D.isBracket=true;L=D.isGlob=true;M=true;break}}if(y===true){continue}break}if(r.nonegate!==true&&G===l&&H===v){I=D.negated=true;v++;continue}if(r.noparen!==true&&G===f){L=D.isGlob=true;if(y===true){while(eos()!==true&&(G=advance())){if(G===f){k=D.backslashes=true;G=advance();continue}if(G===g){M=true;break}}continue}break}if(L===true){M=true;if(y===true){continue}break}}if(r.noext===true){O=false;L=false}let U=S;let K=\"\";let F=\"\";if(v>0){K=S.slice(0,v);S=S.slice(v);$-=v}if(U&&L===true&&$>0){U=S.slice(0,$);F=S.slice($)}else if(L===true){U=\"\";F=S}else{U=S}if(U&&U!==\"\"&&U!==\"/\"&&U!==S){if(isPathSeparator(U.charCodeAt(U.length-1))){U=U.slice(0,-1)}}if(r.unescape===true){if(F)F=n.removeBackslashes(F);if(U&&k===true){U=n.removeBackslashes(U)}}const Q={prefix:K,input:e,start:v,base:U,glob:F,isBrace:m,isBracket:T,isGlob:L,isExtglob:O,isGlobstar:w,negated:I};if(r.tokens===true){Q.maxDepth=0;if(!isPathSeparator(G)){x.push(D)}Q.tokens=x}if(r.parts===true||r.tokens===true){let t;for(let n=0;n<d.length;n++){const u=t?t+1:v;const s=d[n];const o=e.slice(u,s);if(r.tokens){if(n===0&&v!==0){x[n].isPrefix=true;x[n].value=K}else{x[n].value=o}depth(x[n]);Q.maxDepth+=x[n].depth}if(n!==0||o!==\"\"){b.push(o)}t=s}if(t&&t+1<e.length){const n=e.slice(t+1);b.push(n);if(r.tokens){x[x.length-1].value=n;depth(x[x.length-1]);Q.maxDepth+=x[x.length-1].depth}}Q.slashes=d;Q.parts=b}return Q};e.exports=scan},513:(e,t,r)=>{const n=r(17);const u=process.platform===\"win32\";const{REGEX_BACKSLASH:s,REGEX_REMOVE_BACKSLASH:o,REGEX_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_GLOBAL:a}=r(356);t.isObject=e=>e!==null&&typeof e===\"object\"&&!Array.isArray(e);t.hasRegexChars=e=>i.test(e);t.isRegexChar=e=>e.length===1&&t.hasRegexChars(e);t.escapeRegex=e=>e.replace(a,\"\\\\$1\");t.toPosixSlashes=e=>e.replace(s,\"/\");t.removeBackslashes=e=>e.replace(o,(e=>e===\"\\\\\"?\"\":e));t.supportsLookbehinds=()=>{const e=process.version.slice(1).split(\".\").map(Number);if(e.length===3&&e[0]>=9||e[0]===8&&e[1]>=10){return true}return false};t.isWindows=e=>{if(e&&typeof e.windows===\"boolean\"){return e.windows}return u===true||n.sep===\"\\\\\"};t.escapeLast=(e,r,n)=>{const u=e.lastIndexOf(r,n);if(u===-1)return e;if(e[u-1]===\"\\\\\")return t.escapeLast(e,r,u-1);return`${e.slice(0,u)}\\\\${e.slice(u)}`};t.removePrefix=(e,t={})=>{let r=e;if(r.startsWith(\"./\")){r=r.slice(2);t.prefix=\"./\"}return r};t.wrapOutput=(e,t={},r={})=>{const n=r.contains?\"\":\"^\";const u=r.contains?\"\":\"$\";let s=`${n}(?:${e})${u}`;if(t.negated===true){s=`(?:^(?!${s}).*$)`}return s}},492:(e,t,r)=>{\n/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\nconst n=r(357);const toRegexRange=(e,t,r)=>{if(n(e)===false){throw new TypeError(\"toRegexRange: expected the first argument to be a number\")}if(t===void 0||e===t){return String(e)}if(n(t)===false){throw new TypeError(\"toRegexRange: expected the second argument to be a number.\")}let u={relaxZeros:true,...r};if(typeof u.strictZeros===\"boolean\"){u.relaxZeros=u.strictZeros===false}let s=String(u.relaxZeros);let o=String(u.shorthand);let i=String(u.capture);let a=String(u.wrap);let l=e+\":\"+t+\"=\"+s+o+i+a;if(toRegexRange.cache.hasOwnProperty(l)){return toRegexRange.cache[l].result}let c=Math.min(e,t);let p=Math.max(e,t);if(Math.abs(c-p)===1){let r=e+\"|\"+t;if(u.capture){return`(${r})`}if(u.wrap===false){return r}return`(?:${r})`}let f=hasPadding(e)||hasPadding(t);let A={min:e,max:t,a:c,b:p};let R=[];let _=[];if(f){A.isPadded=f;A.maxLen=String(A.max).length}if(c<0){let e=p<0?Math.abs(p):1;_=splitToPatterns(e,Math.abs(c),A,u);c=A.a=0}if(p>=0){R=splitToPatterns(c,p,A,u)}A.negatives=_;A.positives=R;A.result=collatePatterns(_,R,u);if(u.capture===true){A.result=`(${A.result})`}else if(u.wrap!==false&&R.length+_.length>1){A.result=`(?:${A.result})`}toRegexRange.cache[l]=A;return A.result};function collatePatterns(e,t,r){let n=filterPatterns(e,t,\"-\",false,r)||[];let u=filterPatterns(t,e,\"\",false,r)||[];let s=filterPatterns(e,t,\"-?\",true,r)||[];let o=n.concat(s).concat(u);return o.join(\"|\")}function splitToRanges(e,t){let r=1;let n=1;let u=countNines(e,r);let s=new Set([t]);while(e<=u&&u<=t){s.add(u);r+=1;u=countNines(e,r)}u=countZeros(t+1,n)-1;while(e<u&&u<=t){s.add(u);n+=1;u=countZeros(t+1,n)-1}s=[...s];s.sort(compare);return s}function rangeToPattern(e,t,r){if(e===t){return{pattern:e,count:[],digits:0}}let n=zip(e,t);let u=n.length;let s=\"\";let o=0;for(let e=0;e<u;e++){let[t,u]=n[e];if(t===u){s+=t}else if(t!==\"0\"||u!==\"9\"){s+=toCharacterClass(t,u,r)}else{o++}}if(o){s+=r.shorthand===true?\"\\\\d\":\"[0-9]\"}return{pattern:s,count:[o],digits:u}}function splitToPatterns(e,t,r,n){let u=splitToRanges(e,t);let s=[];let o=e;let i;for(let e=0;e<u.length;e++){let t=u[e];let a=rangeToPattern(String(o),String(t),n);let l=\"\";if(!r.isPadded&&i&&i.pattern===a.pattern){if(i.count.length>1){i.count.pop()}i.count.push(a.count[0]);i.string=i.pattern+toQuantifier(i.count);o=t+1;continue}if(r.isPadded){l=padZeros(t,r,n)}a.string=l+a.pattern+toQuantifier(a.count);s.push(a);o=t+1;i=a}return s}function filterPatterns(e,t,r,n,u){let s=[];for(let u of e){let{string:e}=u;if(!n&&!contains(t,\"string\",e)){s.push(r+e)}if(n&&contains(t,\"string\",e)){s.push(r+e)}}return s}function zip(e,t){let r=[];for(let n=0;n<e.length;n++)r.push([e[n],t[n]]);return r}function compare(e,t){return e>t?1:t>e?-1:0}function contains(e,t,r){return e.some((e=>e[t]===r))}function countNines(e,t){return Number(String(e).slice(0,-t)+\"9\".repeat(t))}function countZeros(e,t){return e-e%Math.pow(10,t)}function toQuantifier(e){let[t=0,r=\"\"]=e;if(r||t>1){return`{${t+(r?\",\"+r:\"\")}}`}return\"\"}function toCharacterClass(e,t,r){return`[${e}${t-e===1?\"\":\"-\"}${t}]`}function hasPadding(e){return/^-?(0+)\\d/.test(e)}function padZeros(e,t,r){if(!t.isPadded){return e}let n=Math.abs(t.maxLen-String(e).length);let u=r.relaxZeros!==false;switch(n){case 0:return\"\";case 1:return u?\"0?\":\"0\";case 2:return u?\"0{0,2}\":\"00\";default:{return u?`0{0,${n}}`:`0{${n}}`}}}toRegexRange.cache={};toRegexRange.clearCache=()=>toRegexRange.cache={};e.exports=toRegexRange},17:e=>{e.exports=__webpack_require__(/*! path */ \"./node_modules/next/dist/compiled/path-browserify/index.js\")},837:e=>{e.exports=__webpack_require__(/*! util */ \"./node_modules/next/dist/compiled/util/util.js\")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var u=t[r]={exports:{}};var s=true;try{e[r](u,u.exports,__nccwpck_require__);s=false}finally{if(s)delete t[r]}return u.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(971);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/micromatch/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-browserify/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-browserify/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/path-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/util/util.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/compiled/util/util.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var r={992:function(r){r.exports=function(r,t,n){if(r.filter)return r.filter(t,n);if(void 0===r||null===r)throw new TypeError;if(\"function\"!=typeof t)throw new TypeError;var o=[];for(var i=0;i<r.length;i++){if(!e.call(r,i))continue;var a=r[i];if(t.call(n,a,i,r))o.push(a)}return o};var e=Object.prototype.hasOwnProperty},256:function(r,e,t){\"use strict\";var n=t(500);var o=t(139);var i=o(n(\"String.prototype.indexOf\"));r.exports=function callBoundIntrinsic(r,e){var t=n(r,!!e);if(typeof t===\"function\"&&i(r,\".prototype.\")>-1){return o(t)}return t}},139:function(r,e,t){\"use strict\";var n=t(174);var o=t(500);var i=o(\"%Function.prototype.apply%\");var a=o(\"%Function.prototype.call%\");var f=o(\"%Reflect.apply%\",true)||n.call(a,i);var u=o(\"%Object.getOwnPropertyDescriptor%\",true);var s=o(\"%Object.defineProperty%\",true);var y=o(\"%Math.max%\");if(s){try{s({},\"a\",{value:1})}catch(r){s=null}}r.exports=function callBind(r){var e=f(n,a,arguments);if(u&&s){var t=u(e,\"length\");if(t.configurable){s(e,\"length\",{value:1+y(0,r.length-(arguments.length-1))})}}return e};var c=function applyBind(){return f(n,i,arguments)};if(s){s(r.exports,\"apply\",{value:c})}else{r.exports.apply=c}},144:function(r){var e=Object.prototype.hasOwnProperty;var t=Object.prototype.toString;r.exports=function forEach(r,n,o){if(t.call(n)!==\"[object Function]\"){throw new TypeError(\"iterator must be a function\")}var i=r.length;if(i===+i){for(var a=0;a<i;a++){n.call(o,r[a],a,r)}}else{for(var f in r){if(e.call(r,f)){n.call(o,r[f],f,r)}}}}},426:function(r){\"use strict\";var e=\"Function.prototype.bind called on incompatible \";var t=Array.prototype.slice;var n=Object.prototype.toString;var o=\"[object Function]\";r.exports=function bind(r){var i=this;if(typeof i!==\"function\"||n.call(i)!==o){throw new TypeError(e+i)}var a=t.call(arguments,1);var f;var binder=function(){if(this instanceof f){var e=i.apply(this,a.concat(t.call(arguments)));if(Object(e)===e){return e}return this}else{return i.apply(r,a.concat(t.call(arguments)))}};var u=Math.max(0,i.length-a.length);var s=[];for(var y=0;y<u;y++){s.push(\"$\"+y)}f=Function(\"binder\",\"return function (\"+s.join(\",\")+\"){ return binder.apply(this,arguments); }\")(binder);if(i.prototype){var c=function Empty(){};c.prototype=i.prototype;f.prototype=new c;c.prototype=null}return f}},174:function(r,e,t){\"use strict\";var n=t(426);r.exports=Function.prototype.bind||n},500:function(r,e,t){\"use strict\";var n;var o=SyntaxError;var i=Function;var a=TypeError;var getEvalledConstructor=function(r){try{return i('\"use strict\"; return ('+r+\").constructor;\")()}catch(r){}};var f=Object.getOwnPropertyDescriptor;if(f){try{f({},\"\")}catch(r){f=null}}var throwTypeError=function(){throw new a};var u=f?function(){try{arguments.callee;return throwTypeError}catch(r){try{return f(arguments,\"callee\").get}catch(r){return throwTypeError}}}():throwTypeError;var s=t(115)();var y=Object.getPrototypeOf||function(r){return r.__proto__};var c={};var p=typeof Uint8Array===\"undefined\"?n:y(Uint8Array);var l={\"%AggregateError%\":typeof AggregateError===\"undefined\"?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":s?y([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":c,\"%AsyncGenerator%\":c,\"%AsyncGeneratorFunction%\":c,\"%AsyncIteratorPrototype%\":c,\"%Atomics%\":typeof Atomics===\"undefined\"?n:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?n:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?n:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?n:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?n:FinalizationRegistry,\"%Function%\":i,\"%GeneratorFunction%\":c,\"%Int8Array%\":typeof Int8Array===\"undefined\"?n:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?n:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":s?y(y([][Symbol.iterator]())):n,\"%JSON%\":typeof JSON===\"object\"?JSON:n,\"%Map%\":typeof Map===\"undefined\"?n:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!s?n:y((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?n:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?n:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?n:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!s?n:y((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":s?y(\"\"[Symbol.iterator]()):n,\"%Symbol%\":s?Symbol:n,\"%SyntaxError%\":o,\"%ThrowTypeError%\":u,\"%TypedArray%\":p,\"%TypeError%\":a,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?n:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?n:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?n:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?n:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?n:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?n:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?n:WeakSet};var g=function doEval(r){var e;if(r===\"%AsyncFunction%\"){e=getEvalledConstructor(\"async function () {}\")}else if(r===\"%GeneratorFunction%\"){e=getEvalledConstructor(\"function* () {}\")}else if(r===\"%AsyncGeneratorFunction%\"){e=getEvalledConstructor(\"async function* () {}\")}else if(r===\"%AsyncGenerator%\"){var t=doEval(\"%AsyncGeneratorFunction%\");if(t){e=t.prototype}}else if(r===\"%AsyncIteratorPrototype%\"){var n=doEval(\"%AsyncGenerator%\");if(n){e=y(n.prototype)}}l[r]=e;return e};var b={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var d=t(174);var v=t(101);var m=d.call(Function.call,Array.prototype.concat);var S=d.call(Function.apply,Array.prototype.splice);var A=d.call(Function.call,String.prototype.replace);var h=d.call(Function.call,String.prototype.slice);var O=d.call(Function.call,RegExp.prototype.exec);var j=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var w=/\\\\(\\\\)?/g;var P=function stringToPath(r){var e=h(r,0,1);var t=h(r,-1);if(e===\"%\"&&t!==\"%\"){throw new o(\"invalid intrinsic syntax, expected closing `%`\")}else if(t===\"%\"&&e!==\"%\"){throw new o(\"invalid intrinsic syntax, expected opening `%`\")}var n=[];A(r,j,(function(r,e,t,o){n[n.length]=t?A(o,w,\"$1\"):e||r}));return n};var E=function getBaseIntrinsic(r,e){var t=r;var n;if(v(b,t)){n=b[t];t=\"%\"+n[0]+\"%\"}if(v(l,t)){var i=l[t];if(i===c){i=g(t)}if(typeof i===\"undefined\"&&!e){throw new a(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\")}return{alias:n,name:t,value:i}}throw new o(\"intrinsic \"+r+\" does not exist!\")};r.exports=function GetIntrinsic(r,e){if(typeof r!==\"string\"||r.length===0){throw new a(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof e!==\"boolean\"){throw new a('\"allowMissing\" argument must be a boolean')}if(O(/^%?[^%]*%?$/g,r)===null){throw new o(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\")}var t=P(r);var i=t.length>0?t[0]:\"\";var u=E(\"%\"+i+\"%\",e);var s=u.name;var y=u.value;var c=false;var p=u.alias;if(p){i=p[0];S(t,m([0,1],p))}for(var g=1,b=true;g<t.length;g+=1){var d=t[g];var A=h(d,0,1);var j=h(d,-1);if((A==='\"'||A===\"'\"||A===\"`\"||(j==='\"'||j===\"'\"||j===\"`\"))&&A!==j){throw new o(\"property names with quotes must have matching quotes\")}if(d===\"constructor\"||!b){c=true}i+=\".\"+d;s=\"%\"+i+\"%\";if(v(l,s)){y=l[s]}else if(y!=null){if(!(d in y)){if(!e){throw new a(\"base intrinsic for \"+r+\" exists, but the property is not available.\")}return void n}if(f&&g+1>=t.length){var w=f(y,d);b=!!w;if(b&&\"get\"in w&&!(\"originalValue\"in w.get)){y=w.get}else{y=y[d]}}else{b=v(y,d);y=y[d]}if(b&&!c){l[s]=y}}}return y}},942:function(r,e,t){\"use strict\";var n=typeof Symbol!==\"undefined\"&&Symbol;var o=t(773);r.exports=function hasNativeSymbols(){if(typeof n!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof n(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return o()}},773:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var n=42;r[e]=n;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var o=Object.getOwnPropertySymbols(r);if(o.length!==1||o[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==n||i.enumerable!==true){return false}}return true}},115:function(r,e,t){\"use strict\";var n=typeof Symbol!==\"undefined\"&&Symbol;var o=t(832);r.exports=function hasNativeSymbols(){if(typeof n!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof n(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return o()}},832:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var n=42;r[e]=n;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var o=Object.getOwnPropertySymbols(r);if(o.length!==1||o[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==n||i.enumerable!==true){return false}}return true}},101:function(r,e,t){\"use strict\";var n=t(174);r.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},782:function(r){if(typeof Object.create===\"function\"){r.exports=function inherits(r,e){if(e){r.super_=e;r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:false,writable:true,configurable:true}})}}}else{r.exports=function inherits(r,e){if(e){r.super_=e;var TempCtor=function(){};TempCtor.prototype=e.prototype;r.prototype=new TempCtor;r.prototype.constructor=r}}}},157:function(r){\"use strict\";var e=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var t=Object.prototype.toString;var n=function isArguments(r){if(e&&r&&typeof r===\"object\"&&Symbol.toStringTag in r){return false}return t.call(r)===\"[object Arguments]\"};var o=function isArguments(r){if(n(r)){return true}return r!==null&&typeof r===\"object\"&&typeof r.length===\"number\"&&r.length>=0&&t.call(r)!==\"[object Array]\"&&t.call(r.callee)===\"[object Function]\"};var i=function(){return n(arguments)}();n.isLegacyArguments=o;r.exports=i?n:o},391:function(r){\"use strict\";var e=Object.prototype.toString;var t=Function.prototype.toString;var n=/^\\s*(?:function)?\\*/;var o=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var i=Object.getPrototypeOf;var getGeneratorFunc=function(){if(!o){return false}try{return Function(\"return function*() {}\")()}catch(r){}};var a=getGeneratorFunc();var f=a?i(a):{};r.exports=function isGeneratorFunction(r){if(typeof r!==\"function\"){return false}if(n.test(t.call(r))){return true}if(!o){var a=e.call(r);return a===\"[object GeneratorFunction]\"}return i(r)===f}},994:function(r,e,t){\"use strict\";var n=t(144);var o=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var f=t(942)();var u=f&&typeof Symbol.toStringTag===\"symbol\";var s=o();var y=i(\"Array.prototype.indexOf\",true)||function indexOf(r,e){for(var t=0;t<r.length;t+=1){if(r[t]===e){return t}}return-1};var c=i(\"String.prototype.slice\");var p={};var l=t(466);var g=Object.getPrototypeOf;if(u&&l&&g){n(s,(function(r){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=g(e);var n=l(t,Symbol.toStringTag);if(!n){var o=g(t);n=l(o,Symbol.toStringTag)}p[r]=n.get}))}var b=function tryAllTypedArrays(r){var e=false;n(p,(function(t,n){if(!e){try{e=t.call(r)===n}catch(r){}}}));return e};r.exports=function isTypedArray(r){if(!r||typeof r!==\"object\"){return false}if(!u){var e=c(a(r),8,-1);return y(s,e)>-1}if(!l){return false}return b(r)}},369:function(r){r.exports=function isBuffer(r){return r instanceof Buffer}},584:function(r,e,t){\"use strict\";var n=t(157);var o=t(391);var i=t(490);var a=t(994);function uncurryThis(r){return r.call.bind(r)}var f=typeof BigInt!==\"undefined\";var u=typeof Symbol!==\"undefined\";var s=uncurryThis(Object.prototype.toString);var y=uncurryThis(Number.prototype.valueOf);var c=uncurryThis(String.prototype.valueOf);var p=uncurryThis(Boolean.prototype.valueOf);if(f){var l=uncurryThis(BigInt.prototype.valueOf)}if(u){var g=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(r,e){if(typeof r!==\"object\"){return false}try{e(r);return true}catch(r){return false}}e.isArgumentsObject=n;e.isGeneratorFunction=o;e.isTypedArray=a;function isPromise(r){return typeof Promise!==\"undefined\"&&r instanceof Promise||r!==null&&typeof r===\"object\"&&typeof r.then===\"function\"&&typeof r.catch===\"function\"}e.isPromise=isPromise;function isArrayBufferView(r){if(typeof ArrayBuffer!==\"undefined\"&&ArrayBuffer.isView){return ArrayBuffer.isView(r)}return a(r)||isDataView(r)}e.isArrayBufferView=isArrayBufferView;function isUint8Array(r){return i(r)===\"Uint8Array\"}e.isUint8Array=isUint8Array;function isUint8ClampedArray(r){return i(r)===\"Uint8ClampedArray\"}e.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(r){return i(r)===\"Uint16Array\"}e.isUint16Array=isUint16Array;function isUint32Array(r){return i(r)===\"Uint32Array\"}e.isUint32Array=isUint32Array;function isInt8Array(r){return i(r)===\"Int8Array\"}e.isInt8Array=isInt8Array;function isInt16Array(r){return i(r)===\"Int16Array\"}e.isInt16Array=isInt16Array;function isInt32Array(r){return i(r)===\"Int32Array\"}e.isInt32Array=isInt32Array;function isFloat32Array(r){return i(r)===\"Float32Array\"}e.isFloat32Array=isFloat32Array;function isFloat64Array(r){return i(r)===\"Float64Array\"}e.isFloat64Array=isFloat64Array;function isBigInt64Array(r){return i(r)===\"BigInt64Array\"}e.isBigInt64Array=isBigInt64Array;function isBigUint64Array(r){return i(r)===\"BigUint64Array\"}e.isBigUint64Array=isBigUint64Array;function isMapToString(r){return s(r)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(r){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(r):r instanceof Map}e.isMap=isMap;function isSetToString(r){return s(r)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(r){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(r):r instanceof Set}e.isSet=isSet;function isWeakMapToString(r){return s(r)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(r){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(r):r instanceof WeakMap}e.isWeakMap=isWeakMap;function isWeakSetToString(r){return s(r)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(r){return isWeakSetToString(r)}e.isWeakSet=isWeakSet;function isArrayBufferToString(r){return s(r)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(r){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(r):r instanceof ArrayBuffer}e.isArrayBuffer=isArrayBuffer;function isDataViewToString(r){return s(r)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(r){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(r):r instanceof DataView}e.isDataView=isDataView;var b=typeof SharedArrayBuffer!==\"undefined\"?SharedArrayBuffer:undefined;function isSharedArrayBufferToString(r){return s(r)===\"[object SharedArrayBuffer]\"}function isSharedArrayBuffer(r){if(typeof b===\"undefined\"){return false}if(typeof isSharedArrayBufferToString.working===\"undefined\"){isSharedArrayBufferToString.working=isSharedArrayBufferToString(new b)}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(r):r instanceof b}e.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(r){return s(r)===\"[object AsyncFunction]\"}e.isAsyncFunction=isAsyncFunction;function isMapIterator(r){return s(r)===\"[object Map Iterator]\"}e.isMapIterator=isMapIterator;function isSetIterator(r){return s(r)===\"[object Set Iterator]\"}e.isSetIterator=isSetIterator;function isGeneratorObject(r){return s(r)===\"[object Generator]\"}e.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(r){return s(r)===\"[object WebAssembly.Module]\"}e.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(r){return checkBoxedPrimitive(r,y)}e.isNumberObject=isNumberObject;function isStringObject(r){return checkBoxedPrimitive(r,c)}e.isStringObject=isStringObject;function isBooleanObject(r){return checkBoxedPrimitive(r,p)}e.isBooleanObject=isBooleanObject;function isBigIntObject(r){return f&&checkBoxedPrimitive(r,l)}e.isBigIntObject=isBigIntObject;function isSymbolObject(r){return u&&checkBoxedPrimitive(r,g)}e.isSymbolObject=isSymbolObject;function isBoxedPrimitive(r){return isNumberObject(r)||isStringObject(r)||isBooleanObject(r)||isBigIntObject(r)||isSymbolObject(r)}e.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(r){return typeof Uint8Array!==\"undefined\"&&(isArrayBuffer(r)||isSharedArrayBuffer(r))}e.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(r){Object.defineProperty(e,r,{enumerable:false,value:function(){throw new Error(r+\" is not supported in userland\")}})}))},177:function(r,e,t){var n=Object.getOwnPropertyDescriptors||function getOwnPropertyDescriptors(r){var e=Object.keys(r);var t={};for(var n=0;n<e.length;n++){t[e[n]]=Object.getOwnPropertyDescriptor(r,e[n])}return t};var o=/%[sdj%]/g;e.format=function(r){if(!isString(r)){var e=[];for(var t=0;t<arguments.length;t++){e.push(inspect(arguments[t]))}return e.join(\" \")}var t=1;var n=arguments;var i=n.length;var a=String(r).replace(o,(function(r){if(r===\"%%\")return\"%\";if(t>=i)return r;switch(r){case\"%s\":return String(n[t++]);case\"%d\":return Number(n[t++]);case\"%j\":try{return JSON.stringify(n[t++])}catch(r){return\"[Circular]\"}default:return r}}));for(var f=n[t];t<i;f=n[++t]){if(isNull(f)||!isObject(f)){a+=\" \"+f}else{a+=\" \"+inspect(f)}}return a};e.deprecate=function(r,t){if(typeof process!==\"undefined\"&&process.noDeprecation===true){return r}if(typeof process===\"undefined\"){return function(){return e.deprecate(r,t).apply(this,arguments)}}var n=false;function deprecated(){if(!n){if(process.throwDeprecation){throw new Error(t)}else if(process.traceDeprecation){console.trace(t)}else{console.error(t)}n=true}return r.apply(this,arguments)}return deprecated};var i={};var a=/^$/;if(process.env.NODE_DEBUG){var f=process.env.NODE_DEBUG;f=f.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase();a=new RegExp(\"^\"+f+\"$\",\"i\")}e.debuglog=function(r){r=r.toUpperCase();if(!i[r]){if(a.test(r)){var t=process.pid;i[r]=function(){var n=e.format.apply(e,arguments);console.error(\"%s %d: %s\",r,t,n)}}else{i[r]=function(){}}}return i[r]};function inspect(r,t){var n={seen:[],stylize:stylizeNoColor};if(arguments.length>=3)n.depth=arguments[2];if(arguments.length>=4)n.colors=arguments[3];if(isBoolean(t)){n.showHidden=t}else if(t){e._extend(n,t)}if(isUndefined(n.showHidden))n.showHidden=false;if(isUndefined(n.depth))n.depth=2;if(isUndefined(n.colors))n.colors=false;if(isUndefined(n.customInspect))n.customInspect=true;if(n.colors)n.stylize=stylizeWithColor;return formatValue(n,r,n.depth)}e.inspect=inspect;inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]};inspect.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};function stylizeWithColor(r,e){var t=inspect.styles[e];if(t){return\"\u001b[\"+inspect.colors[t][0]+\"m\"+r+\"\u001b[\"+inspect.colors[t][1]+\"m\"}else{return r}}function stylizeNoColor(r,e){return r}function arrayToHash(r){var e={};r.forEach((function(r,t){e[r]=true}));return e}function formatValue(r,t,n){if(r.customInspect&&t&&isFunction(t.inspect)&&t.inspect!==e.inspect&&!(t.constructor&&t.constructor.prototype===t)){var o=t.inspect(n,r);if(!isString(o)){o=formatValue(r,o,n)}return o}var i=formatPrimitive(r,t);if(i){return i}var a=Object.keys(t);var f=arrayToHash(a);if(r.showHidden){a=Object.getOwnPropertyNames(t)}if(isError(t)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0)){return formatError(t)}if(a.length===0){if(isFunction(t)){var u=t.name?\": \"+t.name:\"\";return r.stylize(\"[Function\"+u+\"]\",\"special\")}if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}if(isDate(t)){return r.stylize(Date.prototype.toString.call(t),\"date\")}if(isError(t)){return formatError(t)}}var s=\"\",y=false,c=[\"{\",\"}\"];if(isArray(t)){y=true;c=[\"[\",\"]\"]}if(isFunction(t)){var p=t.name?\": \"+t.name:\"\";s=\" [Function\"+p+\"]\"}if(isRegExp(t)){s=\" \"+RegExp.prototype.toString.call(t)}if(isDate(t)){s=\" \"+Date.prototype.toUTCString.call(t)}if(isError(t)){s=\" \"+formatError(t)}if(a.length===0&&(!y||t.length==0)){return c[0]+s+c[1]}if(n<0){if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}else{return r.stylize(\"[Object]\",\"special\")}}r.seen.push(t);var l;if(y){l=formatArray(r,t,n,f,a)}else{l=a.map((function(e){return formatProperty(r,t,n,f,e,y)}))}r.seen.pop();return reduceToSingleString(l,s,c)}function formatPrimitive(r,e){if(isUndefined(e))return r.stylize(\"undefined\",\"undefined\");if(isString(e)){var t=\"'\"+JSON.stringify(e).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return r.stylize(t,\"string\")}if(isNumber(e))return r.stylize(\"\"+e,\"number\");if(isBoolean(e))return r.stylize(\"\"+e,\"boolean\");if(isNull(e))return r.stylize(\"null\",\"null\")}function formatError(r){return\"[\"+Error.prototype.toString.call(r)+\"]\"}function formatArray(r,e,t,n,o){var i=[];for(var a=0,f=e.length;a<f;++a){if(hasOwnProperty(e,String(a))){i.push(formatProperty(r,e,t,n,String(a),true))}else{i.push(\"\")}}o.forEach((function(o){if(!o.match(/^\\d+$/)){i.push(formatProperty(r,e,t,n,o,true))}}));return i}function formatProperty(r,e,t,n,o,i){var a,f,u;u=Object.getOwnPropertyDescriptor(e,o)||{value:e[o]};if(u.get){if(u.set){f=r.stylize(\"[Getter/Setter]\",\"special\")}else{f=r.stylize(\"[Getter]\",\"special\")}}else{if(u.set){f=r.stylize(\"[Setter]\",\"special\")}}if(!hasOwnProperty(n,o)){a=\"[\"+o+\"]\"}if(!f){if(r.seen.indexOf(u.value)<0){if(isNull(t)){f=formatValue(r,u.value,null)}else{f=formatValue(r,u.value,t-1)}if(f.indexOf(\"\\n\")>-1){if(i){f=f.split(\"\\n\").map((function(r){return\"  \"+r})).join(\"\\n\").substr(2)}else{f=\"\\n\"+f.split(\"\\n\").map((function(r){return\"   \"+r})).join(\"\\n\")}}}else{f=r.stylize(\"[Circular]\",\"special\")}}if(isUndefined(a)){if(i&&o.match(/^\\d+$/)){return f}a=JSON.stringify(\"\"+o);if(a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){a=a.substr(1,a.length-2);a=r.stylize(a,\"name\")}else{a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\");a=r.stylize(a,\"string\")}}return a+\": \"+f}function reduceToSingleString(r,e,t){var n=0;var o=r.reduce((function(r,e){n++;if(e.indexOf(\"\\n\")>=0)n++;return r+e.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(o>60){return t[0]+(e===\"\"?\"\":e+\"\\n \")+\" \"+r.join(\",\\n  \")+\" \"+t[1]}return t[0]+e+\" \"+r.join(\", \")+\" \"+t[1]}e.types=t(584);function isArray(r){return Array.isArray(r)}e.isArray=isArray;function isBoolean(r){return typeof r===\"boolean\"}e.isBoolean=isBoolean;function isNull(r){return r===null}e.isNull=isNull;function isNullOrUndefined(r){return r==null}e.isNullOrUndefined=isNullOrUndefined;function isNumber(r){return typeof r===\"number\"}e.isNumber=isNumber;function isString(r){return typeof r===\"string\"}e.isString=isString;function isSymbol(r){return typeof r===\"symbol\"}e.isSymbol=isSymbol;function isUndefined(r){return r===void 0}e.isUndefined=isUndefined;function isRegExp(r){return isObject(r)&&objectToString(r)===\"[object RegExp]\"}e.isRegExp=isRegExp;e.types.isRegExp=isRegExp;function isObject(r){return typeof r===\"object\"&&r!==null}e.isObject=isObject;function isDate(r){return isObject(r)&&objectToString(r)===\"[object Date]\"}e.isDate=isDate;e.types.isDate=isDate;function isError(r){return isObject(r)&&(objectToString(r)===\"[object Error]\"||r instanceof Error)}e.isError=isError;e.types.isNativeError=isError;function isFunction(r){return typeof r===\"function\"}e.isFunction=isFunction;function isPrimitive(r){return r===null||typeof r===\"boolean\"||typeof r===\"number\"||typeof r===\"string\"||typeof r===\"symbol\"||typeof r===\"undefined\"}e.isPrimitive=isPrimitive;e.isBuffer=t(369);function objectToString(r){return Object.prototype.toString.call(r)}function pad(r){return r<10?\"0\"+r.toString(10):r.toString(10)}var u=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function timestamp(){var r=new Date;var e=[pad(r.getHours()),pad(r.getMinutes()),pad(r.getSeconds())].join(\":\");return[r.getDate(),u[r.getMonth()],e].join(\" \")}e.log=function(){console.log(\"%s - %s\",timestamp(),e.format.apply(e,arguments))};e.inherits=t(782);e._extend=function(r,e){if(!e||!isObject(e))return r;var t=Object.keys(e);var n=t.length;while(n--){r[t[n]]=e[t[n]]}return r};function hasOwnProperty(r,e){return Object.prototype.hasOwnProperty.call(r,e)}var s=typeof Symbol!==\"undefined\"?Symbol(\"util.promisify.custom\"):undefined;e.promisify=function promisify(r){if(typeof r!==\"function\")throw new TypeError('The \"original\" argument must be of type Function');if(s&&r[s]){var e=r[s];if(typeof e!==\"function\"){throw new TypeError('The \"util.promisify.custom\" argument must be of type Function')}Object.defineProperty(e,s,{value:e,enumerable:false,writable:false,configurable:true});return e}function e(){var e,t;var n=new Promise((function(r,n){e=r;t=n}));var o=[];for(var i=0;i<arguments.length;i++){o.push(arguments[i])}o.push((function(r,n){if(r){t(r)}else{e(n)}}));try{r.apply(this,o)}catch(r){t(r)}return n}Object.setPrototypeOf(e,Object.getPrototypeOf(r));if(s)Object.defineProperty(e,s,{value:e,enumerable:false,writable:false,configurable:true});return Object.defineProperties(e,n(r))};e.promisify.custom=s;function callbackifyOnRejected(r,e){if(!r){var t=new Error(\"Promise was rejected with a falsy value\");t.reason=r;r=t}return e(r)}function callbackify(r){if(typeof r!==\"function\"){throw new TypeError('The \"original\" argument must be of type Function')}function callbackified(){var e=[];for(var t=0;t<arguments.length;t++){e.push(arguments[t])}var n=e.pop();if(typeof n!==\"function\"){throw new TypeError(\"The last argument must be of type Function\")}var o=this;var cb=function(){return n.apply(o,arguments)};r.apply(this,e).then((function(r){process.nextTick(cb.bind(null,null,r))}),(function(r){process.nextTick(callbackifyOnRejected.bind(null,r,cb))}))}Object.setPrototypeOf(callbackified,Object.getPrototypeOf(r));Object.defineProperties(callbackified,n(r));return callbackified}e.callbackify=callbackify},490:function(r,e,t){\"use strict\";var n=t(144);var o=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var f=t(942)();var u=f&&typeof Symbol.toStringTag===\"symbol\";var s=o();var y=i(\"String.prototype.slice\");var c={};var p=t(466);var l=Object.getPrototypeOf;if(u&&p&&l){n(s,(function(r){if(typeof __webpack_require__.g[r]===\"function\"){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=l(e);var n=p(t,Symbol.toStringTag);if(!n){var o=l(t);n=p(o,Symbol.toStringTag)}c[r]=n.get}}))}var g=function tryAllTypedArrays(r){var e=false;n(c,(function(t,n){if(!e){try{var o=t.call(r);if(o===n){e=o}}catch(r){}}}));return e};var b=t(994);r.exports=function whichTypedArray(r){if(!b(r)){return false}if(!u){return y(a(r),8,-1)}return g(r)}},349:function(r,e,t){\"use strict\";var n=t(992);r.exports=function availableTypedArrays(){return n([\"BigInt64Array\",\"BigUint64Array\",\"Float32Array\",\"Float64Array\",\"Int16Array\",\"Int32Array\",\"Int8Array\",\"Uint16Array\",\"Uint32Array\",\"Uint8Array\",\"Uint8ClampedArray\"],(function(r){return typeof __webpack_require__.g[r]===\"function\"}))}},466:function(r,e,t){\"use strict\";var n=t(500);var o=n(\"%Object.getOwnPropertyDescriptor%\",true);if(o){try{o([],\"length\")}catch(r){o=null}}r.exports=o}};var e={};function __nccwpck_require__(t){var n=e[t];if(n!==undefined){return n.exports}var o=e[t]={exports:{}};var i=true;try{r[t](o,o.exports,__nccwpck_require__);i=false}finally{if(i)delete e[t]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(177);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/util/util.js\n"));

/***/ }),

/***/ "./node_modules/next/image.js":
/*!************************************!*\
  !*** ./node_modules/next/image.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/image */ \"./node_modules/next/dist/client/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyR0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvaW1hZ2UuanM/MDUzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvaW1hZ2UnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/image.js\n"));

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_message_signing_web/cardano_message_signing_bg.wasm":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_message_signing_web/cardano_message_signing_bg.wasm ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/cardano_message_signing_bg.70a5ad8e.wasm";

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib_bg.wasm":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib_bg.wasm ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/cardano_multiplatform_lib_bg.64b1d112.wasm";

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/deps/deno.land/std@0.100.0/encoding/hex.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/deps/deno.land/std@0.100.0/encoding/hex.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"decodeString\": function() { return /* binding */ decodeString; },\n/* harmony export */   \"decodedLen\": function() { return /* binding */ decodedLen; },\n/* harmony export */   \"encode\": function() { return /* binding */ encode; },\n/* harmony export */   \"encodeToString\": function() { return /* binding */ encodeToString; },\n/* harmony export */   \"encodedLen\": function() { return /* binding */ encodedLen; },\n/* harmony export */   \"errInvalidByte\": function() { return /* binding */ errInvalidByte; },\n/* harmony export */   \"errLength\": function() { return /* binding */ errLength; }\n/* harmony export */ });\n// Ported from Go\n// https://github.com/golang/go/blob/go1.12.5/src/encoding/hex/hex.go\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\nconst hexTable = new TextEncoder().encode(\"0123456789abcdef\");\n/**\n * ErrInvalidByte takes an invalid byte and returns an Error.\n * @param byte\n */\nfunction errInvalidByte(byte) {\n    return new Error(\"encoding/hex: invalid byte: \" +\n        new TextDecoder().decode(new Uint8Array([byte])));\n}\n/** ErrLength returns an error about odd string length. */\nfunction errLength() {\n    return new Error(\"encoding/hex: odd length hex string\");\n}\n// fromHexChar converts a hex character into its value.\nfunction fromHexChar(byte) {\n    // '0' <= byte && byte <= '9'\n    if (48 <= byte && byte <= 57)\n        return byte - 48;\n    // 'a' <= byte && byte <= 'f'\n    if (97 <= byte && byte <= 102)\n        return byte - 97 + 10;\n    // 'A' <= byte && byte <= 'F'\n    if (65 <= byte && byte <= 70)\n        return byte - 65 + 10;\n    throw errInvalidByte(byte);\n}\n/**\n * EncodedLen returns the length of an encoding of n source bytes. Specifically,\n * it returns n * 2.\n * @param n\n */\nfunction encodedLen(n) {\n    return n * 2;\n}\n/**\n * Encode encodes `src` into `encodedLen(src.length)` bytes.\n * @param src\n */\nfunction encode(src) {\n    const dst = new Uint8Array(encodedLen(src.length));\n    for (let i = 0; i < dst.length; i++) {\n        const v = src[i];\n        dst[i * 2] = hexTable[v >> 4];\n        dst[i * 2 + 1] = hexTable[v & 0x0f];\n    }\n    return dst;\n}\n/**\n * EncodeToString returns the hexadecimal encoding of `src`.\n * @param src\n */\nfunction encodeToString(src) {\n    return new TextDecoder().decode(encode(src));\n}\n/**\n * Decode decodes `src` into `decodedLen(src.length)` bytes\n * If the input is malformed an error will be thrown\n * the error.\n * @param src\n */\nfunction decode(src) {\n    const dst = new Uint8Array(decodedLen(src.length));\n    for (let i = 0; i < dst.length; i++) {\n        const a = fromHexChar(src[i * 2]);\n        const b = fromHexChar(src[i * 2 + 1]);\n        dst[i] = (a << 4) | b;\n    }\n    if (src.length % 2 == 1) {\n        // Check for invalid char before reporting bad length,\n        // since the invalid char (if present) is an earlier problem.\n        fromHexChar(src[dst.length * 2]);\n        throw errLength();\n    }\n    return dst;\n}\n/**\n * DecodedLen returns the length of decoding `x` source bytes.\n * Specifically, it returns `x / 2`.\n * @param x\n */\nfunction decodedLen(x) {\n    return x >>> 1;\n}\n/**\n * DecodeString returns the bytes represented by the hexadecimal string `s`.\n * DecodeString expects that src contains only hexadecimal characters and that\n * src has even length.\n * If the input is malformed, DecodeString will throw an error.\n * @param s the `string` to decode to `Uint8Array`\n */\nfunction decodeString(s) {\n    return decode(new TextEncoder().encode(s));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vZGVwcy9kZW5vLmxhbmQvc3RkQDAuMTAwLjAvZW5jb2RpbmcvaGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZC1jYXJkYW5vL2VzbS9kZXBzL2Rlbm8ubGFuZC9zdGRAMC4xMDAuMC9lbmNvZGluZy9oZXguanM/YjE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQb3J0ZWQgZnJvbSBHb1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iL2dvMS4xMi41L3NyYy9lbmNvZGluZy9oZXgvaGV4LmdvXG4vLyBDb3B5cmlnaHQgMjAwOSBUaGUgR28gQXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGEgQlNELXN0eWxlXG4vLyBsaWNlbnNlIHRoYXQgY2FuIGJlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUuXG4vLyBDb3B5cmlnaHQgMjAxOC0yMDIxIHRoZSBEZW5vIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuY29uc3QgaGV4VGFibGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoXCIwMTIzNDU2Nzg5YWJjZGVmXCIpO1xuLyoqXG4gKiBFcnJJbnZhbGlkQnl0ZSB0YWtlcyBhbiBpbnZhbGlkIGJ5dGUgYW5kIHJldHVybnMgYW4gRXJyb3IuXG4gKiBAcGFyYW0gYnl0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXJySW52YWxpZEJ5dGUoYnl0ZSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJlbmNvZGluZy9oZXg6IGludmFsaWQgYnl0ZTogXCIgK1xuICAgICAgICBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUobmV3IFVpbnQ4QXJyYXkoW2J5dGVdKSkpO1xufVxuLyoqIEVyckxlbmd0aCByZXR1cm5zIGFuIGVycm9yIGFib3V0IG9kZCBzdHJpbmcgbGVuZ3RoLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVyckxlbmd0aCgpIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKFwiZW5jb2RpbmcvaGV4OiBvZGQgbGVuZ3RoIGhleCBzdHJpbmdcIik7XG59XG4vLyBmcm9tSGV4Q2hhciBjb252ZXJ0cyBhIGhleCBjaGFyYWN0ZXIgaW50byBpdHMgdmFsdWUuXG5mdW5jdGlvbiBmcm9tSGV4Q2hhcihieXRlKSB7XG4gICAgLy8gJzAnIDw9IGJ5dGUgJiYgYnl0ZSA8PSAnOSdcbiAgICBpZiAoNDggPD0gYnl0ZSAmJiBieXRlIDw9IDU3KVxuICAgICAgICByZXR1cm4gYnl0ZSAtIDQ4O1xuICAgIC8vICdhJyA8PSBieXRlICYmIGJ5dGUgPD0gJ2YnXG4gICAgaWYgKDk3IDw9IGJ5dGUgJiYgYnl0ZSA8PSAxMDIpXG4gICAgICAgIHJldHVybiBieXRlIC0gOTcgKyAxMDtcbiAgICAvLyAnQScgPD0gYnl0ZSAmJiBieXRlIDw9ICdGJ1xuICAgIGlmICg2NSA8PSBieXRlICYmIGJ5dGUgPD0gNzApXG4gICAgICAgIHJldHVybiBieXRlIC0gNjUgKyAxMDtcbiAgICB0aHJvdyBlcnJJbnZhbGlkQnl0ZShieXRlKTtcbn1cbi8qKlxuICogRW5jb2RlZExlbiByZXR1cm5zIHRoZSBsZW5ndGggb2YgYW4gZW5jb2Rpbmcgb2YgbiBzb3VyY2UgYnl0ZXMuIFNwZWNpZmljYWxseSxcbiAqIGl0IHJldHVybnMgbiAqIDIuXG4gKiBAcGFyYW0gblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlZExlbihuKSB7XG4gICAgcmV0dXJuIG4gKiAyO1xufVxuLyoqXG4gKiBFbmNvZGUgZW5jb2RlcyBgc3JjYCBpbnRvIGBlbmNvZGVkTGVuKHNyYy5sZW5ndGgpYCBieXRlcy5cbiAqIEBwYXJhbSBzcmNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShzcmMpIHtcbiAgICBjb25zdCBkc3QgPSBuZXcgVWludDhBcnJheShlbmNvZGVkTGVuKHNyYy5sZW5ndGgpKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB2ID0gc3JjW2ldO1xuICAgICAgICBkc3RbaSAqIDJdID0gaGV4VGFibGVbdiA+PiA0XTtcbiAgICAgICAgZHN0W2kgKiAyICsgMV0gPSBoZXhUYWJsZVt2ICYgMHgwZl07XG4gICAgfVxuICAgIHJldHVybiBkc3Q7XG59XG4vKipcbiAqIEVuY29kZVRvU3RyaW5nIHJldHVybnMgdGhlIGhleGFkZWNpbWFsIGVuY29kaW5nIG9mIGBzcmNgLlxuICogQHBhcmFtIHNyY1xuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVG9TdHJpbmcoc3JjKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShlbmNvZGUoc3JjKSk7XG59XG4vKipcbiAqIERlY29kZSBkZWNvZGVzIGBzcmNgIGludG8gYGRlY29kZWRMZW4oc3JjLmxlbmd0aClgIGJ5dGVzXG4gKiBJZiB0aGUgaW5wdXQgaXMgbWFsZm9ybWVkIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXG4gKiB0aGUgZXJyb3IuXG4gKiBAcGFyYW0gc3JjXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoc3JjKSB7XG4gICAgY29uc3QgZHN0ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZExlbihzcmMubGVuZ3RoKSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgYSA9IGZyb21IZXhDaGFyKHNyY1tpICogMl0pO1xuICAgICAgICBjb25zdCBiID0gZnJvbUhleENoYXIoc3JjW2kgKiAyICsgMV0pO1xuICAgICAgICBkc3RbaV0gPSAoYSA8PCA0KSB8IGI7XG4gICAgfVxuICAgIGlmIChzcmMubGVuZ3RoICUgMiA9PSAxKSB7XG4gICAgICAgIC8vIENoZWNrIGZvciBpbnZhbGlkIGNoYXIgYmVmb3JlIHJlcG9ydGluZyBiYWQgbGVuZ3RoLFxuICAgICAgICAvLyBzaW5jZSB0aGUgaW52YWxpZCBjaGFyIChpZiBwcmVzZW50KSBpcyBhbiBlYXJsaWVyIHByb2JsZW0uXG4gICAgICAgIGZyb21IZXhDaGFyKHNyY1tkc3QubGVuZ3RoICogMl0pO1xuICAgICAgICB0aHJvdyBlcnJMZW5ndGgoKTtcbiAgICB9XG4gICAgcmV0dXJuIGRzdDtcbn1cbi8qKlxuICogRGVjb2RlZExlbiByZXR1cm5zIHRoZSBsZW5ndGggb2YgZGVjb2RpbmcgYHhgIHNvdXJjZSBieXRlcy5cbiAqIFNwZWNpZmljYWxseSwgaXQgcmV0dXJucyBgeCAvIDJgLlxuICogQHBhcmFtIHhcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZWRMZW4oeCkge1xuICAgIHJldHVybiB4ID4+PiAxO1xufVxuLyoqXG4gKiBEZWNvZGVTdHJpbmcgcmV0dXJucyB0aGUgYnl0ZXMgcmVwcmVzZW50ZWQgYnkgdGhlIGhleGFkZWNpbWFsIHN0cmluZyBgc2AuXG4gKiBEZWNvZGVTdHJpbmcgZXhwZWN0cyB0aGF0IHNyYyBjb250YWlucyBvbmx5IGhleGFkZWNpbWFsIGNoYXJhY3RlcnMgYW5kIHRoYXRcbiAqIHNyYyBoYXMgZXZlbiBsZW5ndGguXG4gKiBJZiB0aGUgaW5wdXQgaXMgbWFsZm9ybWVkLCBEZWNvZGVTdHJpbmcgd2lsbCB0aHJvdyBhbiBlcnJvci5cbiAqIEBwYXJhbSBzIHRoZSBgc3RyaW5nYCB0byBkZWNvZGUgdG8gYFVpbnQ4QXJyYXlgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmcocykge1xuICAgIHJldHVybiBkZWNvZGUobmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHMpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/deps/deno.land/std@0.100.0/encoding/hex.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/equals.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/equals.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"equals\": function() { return /* binding */ equals; },\n/* harmony export */   \"equals32Bit\": function() { return /* binding */ equals32Bit; },\n/* harmony export */   \"equalsNaive\": function() { return /* binding */ equalsNaive; }\n/* harmony export */ });\n// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n/** Check whether binary arrays are equal to each other using 8-bit comparisons.\n * @private\n * @param a first array to check equality\n * @param b second array to check equality\n */\nfunction equalsNaive(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < b.length; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\n/** Check whether binary arrays are equal to each other using 32-bit comparisons.\n * @private\n * @param a first array to check equality\n * @param b second array to check equality\n */\nfunction equals32Bit(a, b) {\n    if (a.length !== b.length)\n        return false;\n    const len = a.length;\n    const compressable = Math.floor(len / 4);\n    const compressedA = new Uint32Array(a.buffer, 0, compressable);\n    const compressedB = new Uint32Array(b.buffer, 0, compressable);\n    for (let i = compressable * 4; i < len; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    for (let i = 0; i < compressedA.length; i++) {\n        if (compressedA[i] !== compressedB[i])\n            return false;\n    }\n    return true;\n}\n/** Check whether binary arrays are equal to each other.\n * @param a first array to check equality\n * @param b second array to check equality\n */\nfunction equals(a, b) {\n    if (a.length < 1000)\n        return equalsNaive(a, b);\n    return equals32Bit(a, b);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vZGVwcy9kZW5vLmxhbmQvc3RkQDAuMTQ4LjAvYnl0ZXMvZXF1YWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vZGVwcy9kZW5vLmxhbmQvc3RkQDAuMTQ4LjAvYnl0ZXMvZXF1YWxzLmpzP2MzMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMiB0aGUgRGVubyBhdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBNSVQgbGljZW5zZS5cbi8vIFRoaXMgbW9kdWxlIGlzIGJyb3dzZXIgY29tcGF0aWJsZS5cbi8qKiBDaGVjayB3aGV0aGVyIGJpbmFyeSBhcnJheXMgYXJlIGVxdWFsIHRvIGVhY2ggb3RoZXIgdXNpbmcgOC1iaXQgY29tcGFyaXNvbnMuXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIGEgZmlyc3QgYXJyYXkgdG8gY2hlY2sgZXF1YWxpdHlcbiAqIEBwYXJhbSBiIHNlY29uZCBhcnJheSB0byBjaGVjayBlcXVhbGl0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzTmFpdmUoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqIENoZWNrIHdoZXRoZXIgYmluYXJ5IGFycmF5cyBhcmUgZXF1YWwgdG8gZWFjaCBvdGhlciB1c2luZyAzMi1iaXQgY29tcGFyaXNvbnMuXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIGEgZmlyc3QgYXJyYXkgdG8gY2hlY2sgZXF1YWxpdHlcbiAqIEBwYXJhbSBiIHNlY29uZCBhcnJheSB0byBjaGVjayBlcXVhbGl0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzMzJCaXQoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCBsZW4gPSBhLmxlbmd0aDtcbiAgICBjb25zdCBjb21wcmVzc2FibGUgPSBNYXRoLmZsb29yKGxlbiAvIDQpO1xuICAgIGNvbnN0IGNvbXByZXNzZWRBID0gbmV3IFVpbnQzMkFycmF5KGEuYnVmZmVyLCAwLCBjb21wcmVzc2FibGUpO1xuICAgIGNvbnN0IGNvbXByZXNzZWRCID0gbmV3IFVpbnQzMkFycmF5KGIuYnVmZmVyLCAwLCBjb21wcmVzc2FibGUpO1xuICAgIGZvciAobGV0IGkgPSBjb21wcmVzc2FibGUgKiA0OyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29tcHJlc3NlZEEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGNvbXByZXNzZWRBW2ldICE9PSBjb21wcmVzc2VkQltpXSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKiogQ2hlY2sgd2hldGhlciBiaW5hcnkgYXJyYXlzIGFyZSBlcXVhbCB0byBlYWNoIG90aGVyLlxuICogQHBhcmFtIGEgZmlyc3QgYXJyYXkgdG8gY2hlY2sgZXF1YWxpdHlcbiAqIEBwYXJhbSBiIHNlY29uZCBhcnJheSB0byBjaGVjayBlcXVhbGl0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggPCAxMDAwKVxuICAgICAgICByZXR1cm4gZXF1YWxzTmFpdmUoYSwgYik7XG4gICAgcmV0dXJuIGVxdWFsczMyQml0KGEsIGIpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/equals.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/mod.js":
/*!********************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/mod.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat\": function() { return /* binding */ concat; },\n/* harmony export */   \"copy\": function() { return /* binding */ copy; },\n/* harmony export */   \"endsWith\": function() { return /* binding */ endsWith; },\n/* harmony export */   \"equals\": function() { return /* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_0__.equals; },\n/* harmony export */   \"includesNeedle\": function() { return /* binding */ includesNeedle; },\n/* harmony export */   \"indexOfNeedle\": function() { return /* binding */ indexOfNeedle; },\n/* harmony export */   \"lastIndexOfNeedle\": function() { return /* binding */ lastIndexOfNeedle; },\n/* harmony export */   \"repeat\": function() { return /* binding */ repeat; },\n/* harmony export */   \"startsWith\": function() { return /* binding */ startsWith; }\n/* harmony export */ });\n/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./equals.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/equals.js\");\n// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n/**\n * Provides helper functions to manipulate `Uint8Array` byte slices that are not\n * included on the `Uint8Array` prototype.\n *\n * @module\n */\n/** Returns the index of the first occurrence of the needle array in the source\n * array, or -1 if it is not present.\n *\n * A start index can be specified as the third argument that begins the search\n * at that given index. The start index defaults to the start of the array.\n *\n * The complexity of this function is O(source.lenth * needle.length).\n *\n * ```ts\n * import { indexOfNeedle } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2, 1, 2, 1, 2, 3]);\n * const needle = new Uint8Array([1, 2]);\n * console.log(indexOfNeedle(source, needle)); // 1\n * console.log(indexOfNeedle(source, needle, 2)); // 3\n * ```\n */\nfunction indexOfNeedle(source, needle, start = 0) {\n    if (start >= source.length) {\n        return -1;\n    }\n    if (start < 0) {\n        start = Math.max(0, source.length + start);\n    }\n    const s = needle[0];\n    for (let i = start; i < source.length; i++) {\n        if (source[i] !== s)\n            continue;\n        const pin = i;\n        let matched = 1;\n        let j = i;\n        while (matched < needle.length) {\n            j++;\n            if (source[j] !== needle[j - pin]) {\n                break;\n            }\n            matched++;\n        }\n        if (matched === needle.length) {\n            return pin;\n        }\n    }\n    return -1;\n}\n/** Returns the index of the last occurrence of the needle array in the source\n * array, or -1 if it is not present.\n *\n * A start index can be specified as the third argument that begins the search\n * at that given index. The start index defaults to the end of the array.\n *\n * The complexity of this function is O(source.lenth * needle.length).\n *\n * ```ts\n * import { lastIndexOfNeedle } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2, 1, 2, 1, 2, 3]);\n * const needle = new Uint8Array([1, 2]);\n * console.log(lastIndexOfNeedle(source, needle)); // 5\n * console.log(lastIndexOfNeedle(source, needle, 4)); // 3\n * ```\n */\nfunction lastIndexOfNeedle(source, needle, start = source.length - 1) {\n    if (start < 0) {\n        return -1;\n    }\n    if (start >= source.length) {\n        start = source.length - 1;\n    }\n    const e = needle[needle.length - 1];\n    for (let i = start; i >= 0; i--) {\n        if (source[i] !== e)\n            continue;\n        const pin = i;\n        let matched = 1;\n        let j = i;\n        while (matched < needle.length) {\n            j--;\n            if (source[j] !== needle[needle.length - 1 - (pin - j)]) {\n                break;\n            }\n            matched++;\n        }\n        if (matched === needle.length) {\n            return pin - needle.length + 1;\n        }\n    }\n    return -1;\n}\n/** Returns true if the prefix array appears at the start of the source array,\n * false otherwise.\n *\n * The complexity of this function is O(prefix.length).\n *\n * ```ts\n * import { startsWith } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2, 1, 2, 1, 2, 3]);\n * const prefix = new Uint8Array([0, 1, 2]);\n * console.log(startsWith(source, prefix)); // true\n * ```\n */\nfunction startsWith(source, prefix) {\n    for (let i = 0, max = prefix.length; i < max; i++) {\n        if (source[i] !== prefix[i])\n            return false;\n    }\n    return true;\n}\n/** Returns true if the suffix array appears at the end of the source array,\n * false otherwise.\n *\n * The complexity of this function is O(suffix.length).\n *\n * ```ts\n * import { endsWith } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2, 1, 2, 1, 2, 3]);\n * const suffix = new Uint8Array([1, 2, 3]);\n * console.log(endsWith(source, suffix)); // true\n * ```\n */\nfunction endsWith(source, suffix) {\n    for (let srci = source.length - 1, sfxi = suffix.length - 1; sfxi >= 0; srci--, sfxi--) {\n        if (source[srci] !== suffix[sfxi])\n            return false;\n    }\n    return true;\n}\n/** Returns a new Uint8Array composed of `count` repetitions of the `source`\n * array.\n *\n * If `count` is negative, a `RangeError` is thrown.\n *\n * ```ts\n * import { repeat } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2]);\n * console.log(repeat(source, 3)); // [0, 1, 2, 0, 1, 2, 0, 1, 2]\n * console.log(repeat(source, 0)); // []\n * console.log(repeat(source, -1)); // RangeError\n * ```\n */\nfunction repeat(source, count) {\n    if (count === 0) {\n        return new Uint8Array();\n    }\n    if (count < 0) {\n        throw new RangeError(\"bytes: negative repeat count\");\n    }\n    else if ((source.length * count) / count !== source.length) {\n        throw new Error(\"bytes: repeat count causes overflow\");\n    }\n    const int = Math.floor(count);\n    if (int !== count) {\n        throw new Error(\"bytes: repeat count must be an integer\");\n    }\n    const nb = new Uint8Array(source.length * count);\n    let bp = copy(source, nb);\n    for (; bp < nb.length; bp *= 2) {\n        copy(nb.slice(0, bp), nb, bp);\n    }\n    return nb;\n}\n/** Concatenate the given arrays into a new Uint8Array.\n *\n * ```ts\n * import { concat } from \"./mod.ts\";\n * const a = new Uint8Array([0, 1, 2]);\n * const b = new Uint8Array([3, 4, 5]);\n * console.log(concat(a, b)); // [0, 1, 2, 3, 4, 5]\n */\nfunction concat(...buf) {\n    let length = 0;\n    for (const b of buf) {\n        length += b.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const b of buf) {\n        output.set(b, index);\n        index += b.length;\n    }\n    return output;\n}\n/** Returns true if the source array contains the needle array, false otherwise.\n *\n * A start index can be specified as the third argument that begins the search\n * at that given index. The start index defaults to the beginning of the array.\n *\n * The complexity of this function is O(source.length * needle.length).\n *\n * ```ts\n * import { includesNeedle } from \"./mod.ts\";\n * const source = new Uint8Array([0, 1, 2, 1, 2, 1, 2, 3]);\n * const needle = new Uint8Array([1, 2]);\n * console.log(includesNeedle(source, needle)); // true\n * console.log(includesNeedle(source, needle, 6)); // false\n * ```\n */\nfunction includesNeedle(source, needle, start = 0) {\n    return indexOfNeedle(source, needle, start) !== -1;\n}\n/** Copy bytes from the `src` array to the `dst` array. Returns the number of\n * bytes copied.\n *\n * If the `src` array is larger than what the `dst` array can hold, only the\n * amount of bytes that fit in the `dst` array are copied.\n *\n * An offset can be specified as the third argument that begins the copy at\n * that given index in the `dst` array. The offset defaults to the beginning of\n * the array.\n *\n * ```ts\n * import { copy } from \"./mod.ts\";\n * const src = new Uint8Array([9, 8, 7]);\n * const dst = new Uint8Array([0, 1, 2, 3, 4, 5]);\n * console.log(copy(src, dst)); // 3\n * console.log(dst); // [9, 8, 7, 3, 4, 5]\n * ```\n *\n * ```ts\n * import { copy } from \"./mod.ts\";\n * const src = new Uint8Array([1, 1, 1, 1]);\n * const dst = new Uint8Array([0, 0, 0, 0]);\n * console.log(copy(src, dst, 1)); // 3\n * console.log(dst); // [0, 1, 1, 1]\n * ```\n */\nfunction copy(src, dst, off = 0) {\n    off = Math.max(0, Math.min(off, dst.byteLength));\n    const dstBytesAvailable = dst.byteLength - off;\n    if (src.byteLength > dstBytesAvailable) {\n        src = src.subarray(0, dstBytesAvailable);\n    }\n    dst.set(src, off);\n    return src.byteLength;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HmacSha256\": function() { return /* binding */ HmacSha256; },\n/* harmony export */   \"Sha256\": function() { return /* binding */ Sha256; }\n/* harmony export */ });\n// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Sha256_block, _Sha256_blocks, _Sha256_bytes, _Sha256_finalized, _Sha256_first, _Sha256_h0, _Sha256_h1, _Sha256_h2, _Sha256_h3, _Sha256_h4, _Sha256_h5, _Sha256_h6, _Sha256_h7, _Sha256_hashed, _Sha256_hBytes, _Sha256_is224, _Sha256_lastByteIndex, _Sha256_start, _HmacSha256_inner, _HmacSha256_is224, _HmacSha256_oKeyPad, _HmacSha256_sharedMemory;\nconst HEX_CHARS = \"0123456789abcdef\".split(\"\");\nconst EXTRA = [-2147483648, 8388608, 32768, 128];\nconst SHIFT = [24, 16, 8, 0];\nconst K = [\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2,\n];\nconst blocks = [];\nclass Sha256 {\n    constructor(is224 = false, sharedMemory = false) {\n        _Sha256_block.set(this, void 0);\n        _Sha256_blocks.set(this, void 0);\n        _Sha256_bytes.set(this, void 0);\n        _Sha256_finalized.set(this, void 0);\n        _Sha256_first.set(this, void 0);\n        _Sha256_h0.set(this, void 0);\n        _Sha256_h1.set(this, void 0);\n        _Sha256_h2.set(this, void 0);\n        _Sha256_h3.set(this, void 0);\n        _Sha256_h4.set(this, void 0);\n        _Sha256_h5.set(this, void 0);\n        _Sha256_h6.set(this, void 0);\n        _Sha256_h7.set(this, void 0);\n        _Sha256_hashed.set(this, void 0);\n        _Sha256_hBytes.set(this, void 0);\n        _Sha256_is224.set(this, void 0);\n        _Sha256_lastByteIndex.set(this, 0);\n        _Sha256_start.set(this, void 0);\n        this.init(is224, sharedMemory);\n    }\n    init(is224, sharedMemory) {\n        if (sharedMemory) {\n            blocks[0] =\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n            __classPrivateFieldSet(this, _Sha256_blocks, blocks, \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _Sha256_blocks, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"f\");\n        }\n        if (is224) {\n            __classPrivateFieldSet(this, _Sha256_h0, 0xc1059ed8, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h1, 0x367cd507, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h2, 0x3070dd17, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h3, 0xf70e5939, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h4, 0xffc00b31, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h5, 0x68581511, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h6, 0x64f98fa7, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h7, 0xbefa4fa4, \"f\");\n        }\n        else {\n            // 256\n            __classPrivateFieldSet(this, _Sha256_h0, 0x6a09e667, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h1, 0xbb67ae85, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h2, 0x3c6ef372, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h3, 0xa54ff53a, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h4, 0x510e527f, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h5, 0x9b05688c, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h6, 0x1f83d9ab, \"f\");\n            __classPrivateFieldSet(this, _Sha256_h7, 0x5be0cd19, \"f\");\n        }\n        __classPrivateFieldSet(this, _Sha256_block, __classPrivateFieldSet(this, _Sha256_start, __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldSet(this, _Sha256_hBytes, 0, \"f\"), \"f\"), \"f\"), \"f\");\n        __classPrivateFieldSet(this, _Sha256_finalized, __classPrivateFieldSet(this, _Sha256_hashed, false, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _Sha256_first, true, \"f\");\n        __classPrivateFieldSet(this, _Sha256_is224, is224, \"f\");\n    }\n    /** Update hash\n     *\n     * @param message The message you want to hash.\n     */\n    update(message) {\n        if (__classPrivateFieldGet(this, _Sha256_finalized, \"f\")) {\n            return this;\n        }\n        let msg;\n        if (message instanceof ArrayBuffer) {\n            msg = new Uint8Array(message);\n        }\n        else {\n            msg = message;\n        }\n        let index = 0;\n        const length = msg.length;\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        while (index < length) {\n            let i;\n            if (__classPrivateFieldGet(this, _Sha256_hashed, \"f\")) {\n                __classPrivateFieldSet(this, _Sha256_hashed, false, \"f\");\n                blocks[0] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n            }\n            if (typeof msg !== \"string\") {\n                for (i = __classPrivateFieldGet(this, _Sha256_start, \"f\"); index < length && i < 64; ++index) {\n                    blocks[i >> 2] |= msg[index] << SHIFT[i++ & 3];\n                }\n            }\n            else {\n                for (i = __classPrivateFieldGet(this, _Sha256_start, \"f\"); index < length && i < 64; ++index) {\n                    let code = msg.charCodeAt(index);\n                    if (code < 0x80) {\n                        blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0x800) {\n                        blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0xd800 || code >= 0xe000) {\n                        blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                    else {\n                        code = 0x10000 +\n                            (((code & 0x3ff) << 10) | (msg.charCodeAt(++index) & 0x3ff));\n                        blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                    }\n                }\n            }\n            __classPrivateFieldSet(this, _Sha256_lastByteIndex, i, \"f\");\n            __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldGet(this, _Sha256_bytes, \"f\") + (i - __classPrivateFieldGet(this, _Sha256_start, \"f\")), \"f\");\n            if (i >= 64) {\n                __classPrivateFieldSet(this, _Sha256_block, blocks[16], \"f\");\n                __classPrivateFieldSet(this, _Sha256_start, i - 64, \"f\");\n                this.hash();\n                __classPrivateFieldSet(this, _Sha256_hashed, true, \"f\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Sha256_start, i, \"f\");\n            }\n        }\n        if (__classPrivateFieldGet(this, _Sha256_bytes, \"f\") > 4294967295) {\n            __classPrivateFieldSet(this, _Sha256_hBytes, __classPrivateFieldGet(this, _Sha256_hBytes, \"f\") + ((__classPrivateFieldGet(this, _Sha256_bytes, \"f\") / 4294967296) << 0), \"f\");\n            __classPrivateFieldSet(this, _Sha256_bytes, __classPrivateFieldGet(this, _Sha256_bytes, \"f\") % 4294967296, \"f\");\n        }\n        return this;\n    }\n    finalize() {\n        if (__classPrivateFieldGet(this, _Sha256_finalized, \"f\")) {\n            return;\n        }\n        __classPrivateFieldSet(this, _Sha256_finalized, true, \"f\");\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        const i = __classPrivateFieldGet(this, _Sha256_lastByteIndex, \"f\");\n        blocks[16] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n        blocks[i >> 2] |= EXTRA[i & 3];\n        __classPrivateFieldSet(this, _Sha256_block, blocks[16], \"f\");\n        if (i >= 56) {\n            if (!__classPrivateFieldGet(this, _Sha256_hashed, \"f\")) {\n                this.hash();\n            }\n            blocks[0] = __classPrivateFieldGet(this, _Sha256_block, \"f\");\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        blocks[14] = (__classPrivateFieldGet(this, _Sha256_hBytes, \"f\") << 3) | (__classPrivateFieldGet(this, _Sha256_bytes, \"f\") >>> 29);\n        blocks[15] = __classPrivateFieldGet(this, _Sha256_bytes, \"f\") << 3;\n        this.hash();\n    }\n    hash() {\n        let a = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        let b = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        let c = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        let d = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        let e = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        let f = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        let g = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        let h = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        const blocks = __classPrivateFieldGet(this, _Sha256_blocks, \"f\");\n        let s0;\n        let s1;\n        let maj;\n        let t1;\n        let t2;\n        let ch;\n        let ab;\n        let da;\n        let cd;\n        let bc;\n        for (let j = 16; j < 64; ++j) {\n            // rightrotate\n            t1 = blocks[j - 15];\n            s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n            t1 = blocks[j - 2];\n            s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^\n                (t1 >>> 10);\n            blocks[j] = (blocks[j - 16] + s0 + blocks[j - 7] + s1) << 0;\n        }\n        bc = b & c;\n        for (let j = 0; j < 64; j += 4) {\n            if (__classPrivateFieldGet(this, _Sha256_first, \"f\")) {\n                if (__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n                    ab = 300032;\n                    t1 = blocks[0] - 1413257819;\n                    h = (t1 - 150054599) << 0;\n                    d = (t1 + 24177077) << 0;\n                }\n                else {\n                    ab = 704751109;\n                    t1 = blocks[0] - 210244248;\n                    h = (t1 - 1521486534) << 0;\n                    d = (t1 + 143694565) << 0;\n                }\n                __classPrivateFieldSet(this, _Sha256_first, false, \"f\");\n            }\n            else {\n                s0 = ((a >>> 2) | (a << 30)) ^\n                    ((a >>> 13) | (a << 19)) ^\n                    ((a >>> 22) | (a << 10));\n                s1 = ((e >>> 6) | (e << 26)) ^\n                    ((e >>> 11) | (e << 21)) ^\n                    ((e >>> 25) | (e << 7));\n                ab = a & b;\n                maj = ab ^ (a & c) ^ bc;\n                ch = (e & f) ^ (~e & g);\n                t1 = h + s1 + ch + K[j] + blocks[j];\n                t2 = s0 + maj;\n                h = (d + t1) << 0;\n                d = (t1 + t2) << 0;\n            }\n            s0 = ((d >>> 2) | (d << 30)) ^\n                ((d >>> 13) | (d << 19)) ^\n                ((d >>> 22) | (d << 10));\n            s1 = ((h >>> 6) | (h << 26)) ^\n                ((h >>> 11) | (h << 21)) ^\n                ((h >>> 25) | (h << 7));\n            da = d & a;\n            maj = da ^ (d & b) ^ ab;\n            ch = (h & e) ^ (~h & f);\n            t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n            t2 = s0 + maj;\n            g = (c + t1) << 0;\n            c = (t1 + t2) << 0;\n            s0 = ((c >>> 2) | (c << 30)) ^\n                ((c >>> 13) | (c << 19)) ^\n                ((c >>> 22) | (c << 10));\n            s1 = ((g >>> 6) | (g << 26)) ^\n                ((g >>> 11) | (g << 21)) ^\n                ((g >>> 25) | (g << 7));\n            cd = c & d;\n            maj = cd ^ (c & a) ^ da;\n            ch = (g & h) ^ (~g & e);\n            t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n            t2 = s0 + maj;\n            f = (b + t1) << 0;\n            b = (t1 + t2) << 0;\n            s0 = ((b >>> 2) | (b << 30)) ^\n                ((b >>> 13) | (b << 19)) ^\n                ((b >>> 22) | (b << 10));\n            s1 = ((f >>> 6) | (f << 26)) ^\n                ((f >>> 11) | (f << 21)) ^\n                ((f >>> 25) | (f << 7));\n            bc = b & c;\n            maj = bc ^ (b & d) ^ cd;\n            ch = (f & g) ^ (~f & h);\n            t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n            t2 = s0 + maj;\n            e = (a + t1) << 0;\n            a = (t1 + t2) << 0;\n        }\n        __classPrivateFieldSet(this, _Sha256_h0, (__classPrivateFieldGet(this, _Sha256_h0, \"f\") + a) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h1, (__classPrivateFieldGet(this, _Sha256_h1, \"f\") + b) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h2, (__classPrivateFieldGet(this, _Sha256_h2, \"f\") + c) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h3, (__classPrivateFieldGet(this, _Sha256_h3, \"f\") + d) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h4, (__classPrivateFieldGet(this, _Sha256_h4, \"f\") + e) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h5, (__classPrivateFieldGet(this, _Sha256_h5, \"f\") + f) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h6, (__classPrivateFieldGet(this, _Sha256_h6, \"f\") + g) << 0, \"f\");\n        __classPrivateFieldSet(this, _Sha256_h7, (__classPrivateFieldGet(this, _Sha256_h7, \"f\") + h) << 0, \"f\");\n    }\n    /** Return hash in hex string. */\n    hex() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        const h1 = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        const h2 = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        const h3 = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        const h4 = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        const h5 = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        const h6 = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        const h7 = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        let hex = HEX_CHARS[(h0 >> 28) & 0x0f] +\n            HEX_CHARS[(h0 >> 24) & 0x0f] +\n            HEX_CHARS[(h0 >> 20) & 0x0f] +\n            HEX_CHARS[(h0 >> 16) & 0x0f] +\n            HEX_CHARS[(h0 >> 12) & 0x0f] +\n            HEX_CHARS[(h0 >> 8) & 0x0f] +\n            HEX_CHARS[(h0 >> 4) & 0x0f] +\n            HEX_CHARS[h0 & 0x0f] +\n            HEX_CHARS[(h1 >> 28) & 0x0f] +\n            HEX_CHARS[(h1 >> 24) & 0x0f] +\n            HEX_CHARS[(h1 >> 20) & 0x0f] +\n            HEX_CHARS[(h1 >> 16) & 0x0f] +\n            HEX_CHARS[(h1 >> 12) & 0x0f] +\n            HEX_CHARS[(h1 >> 8) & 0x0f] +\n            HEX_CHARS[(h1 >> 4) & 0x0f] +\n            HEX_CHARS[h1 & 0x0f] +\n            HEX_CHARS[(h2 >> 28) & 0x0f] +\n            HEX_CHARS[(h2 >> 24) & 0x0f] +\n            HEX_CHARS[(h2 >> 20) & 0x0f] +\n            HEX_CHARS[(h2 >> 16) & 0x0f] +\n            HEX_CHARS[(h2 >> 12) & 0x0f] +\n            HEX_CHARS[(h2 >> 8) & 0x0f] +\n            HEX_CHARS[(h2 >> 4) & 0x0f] +\n            HEX_CHARS[h2 & 0x0f] +\n            HEX_CHARS[(h3 >> 28) & 0x0f] +\n            HEX_CHARS[(h3 >> 24) & 0x0f] +\n            HEX_CHARS[(h3 >> 20) & 0x0f] +\n            HEX_CHARS[(h3 >> 16) & 0x0f] +\n            HEX_CHARS[(h3 >> 12) & 0x0f] +\n            HEX_CHARS[(h3 >> 8) & 0x0f] +\n            HEX_CHARS[(h3 >> 4) & 0x0f] +\n            HEX_CHARS[h3 & 0x0f] +\n            HEX_CHARS[(h4 >> 28) & 0x0f] +\n            HEX_CHARS[(h4 >> 24) & 0x0f] +\n            HEX_CHARS[(h4 >> 20) & 0x0f] +\n            HEX_CHARS[(h4 >> 16) & 0x0f] +\n            HEX_CHARS[(h4 >> 12) & 0x0f] +\n            HEX_CHARS[(h4 >> 8) & 0x0f] +\n            HEX_CHARS[(h4 >> 4) & 0x0f] +\n            HEX_CHARS[h4 & 0x0f] +\n            HEX_CHARS[(h5 >> 28) & 0x0f] +\n            HEX_CHARS[(h5 >> 24) & 0x0f] +\n            HEX_CHARS[(h5 >> 20) & 0x0f] +\n            HEX_CHARS[(h5 >> 16) & 0x0f] +\n            HEX_CHARS[(h5 >> 12) & 0x0f] +\n            HEX_CHARS[(h5 >> 8) & 0x0f] +\n            HEX_CHARS[(h5 >> 4) & 0x0f] +\n            HEX_CHARS[h5 & 0x0f] +\n            HEX_CHARS[(h6 >> 28) & 0x0f] +\n            HEX_CHARS[(h6 >> 24) & 0x0f] +\n            HEX_CHARS[(h6 >> 20) & 0x0f] +\n            HEX_CHARS[(h6 >> 16) & 0x0f] +\n            HEX_CHARS[(h6 >> 12) & 0x0f] +\n            HEX_CHARS[(h6 >> 8) & 0x0f] +\n            HEX_CHARS[(h6 >> 4) & 0x0f] +\n            HEX_CHARS[h6 & 0x0f];\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            hex += HEX_CHARS[(h7 >> 28) & 0x0f] +\n                HEX_CHARS[(h7 >> 24) & 0x0f] +\n                HEX_CHARS[(h7 >> 20) & 0x0f] +\n                HEX_CHARS[(h7 >> 16) & 0x0f] +\n                HEX_CHARS[(h7 >> 12) & 0x0f] +\n                HEX_CHARS[(h7 >> 8) & 0x0f] +\n                HEX_CHARS[(h7 >> 4) & 0x0f] +\n                HEX_CHARS[h7 & 0x0f];\n        }\n        return hex;\n    }\n    /** Return hash in hex string. */\n    toString() {\n        return this.hex();\n    }\n    /** Return hash in integer array. */\n    digest() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _Sha256_h0, \"f\");\n        const h1 = __classPrivateFieldGet(this, _Sha256_h1, \"f\");\n        const h2 = __classPrivateFieldGet(this, _Sha256_h2, \"f\");\n        const h3 = __classPrivateFieldGet(this, _Sha256_h3, \"f\");\n        const h4 = __classPrivateFieldGet(this, _Sha256_h4, \"f\");\n        const h5 = __classPrivateFieldGet(this, _Sha256_h5, \"f\");\n        const h6 = __classPrivateFieldGet(this, _Sha256_h6, \"f\");\n        const h7 = __classPrivateFieldGet(this, _Sha256_h7, \"f\");\n        const arr = [\n            (h0 >> 24) & 0xff,\n            (h0 >> 16) & 0xff,\n            (h0 >> 8) & 0xff,\n            h0 & 0xff,\n            (h1 >> 24) & 0xff,\n            (h1 >> 16) & 0xff,\n            (h1 >> 8) & 0xff,\n            h1 & 0xff,\n            (h2 >> 24) & 0xff,\n            (h2 >> 16) & 0xff,\n            (h2 >> 8) & 0xff,\n            h2 & 0xff,\n            (h3 >> 24) & 0xff,\n            (h3 >> 16) & 0xff,\n            (h3 >> 8) & 0xff,\n            h3 & 0xff,\n            (h4 >> 24) & 0xff,\n            (h4 >> 16) & 0xff,\n            (h4 >> 8) & 0xff,\n            h4 & 0xff,\n            (h5 >> 24) & 0xff,\n            (h5 >> 16) & 0xff,\n            (h5 >> 8) & 0xff,\n            h5 & 0xff,\n            (h6 >> 24) & 0xff,\n            (h6 >> 16) & 0xff,\n            (h6 >> 8) & 0xff,\n            h6 & 0xff,\n        ];\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            arr.push((h7 >> 24) & 0xff, (h7 >> 16) & 0xff, (h7 >> 8) & 0xff, h7 & 0xff);\n        }\n        return arr;\n    }\n    /** Return hash in integer array. */\n    array() {\n        return this.digest();\n    }\n    /** Return hash in ArrayBuffer. */\n    arrayBuffer() {\n        this.finalize();\n        const buffer = new ArrayBuffer(__classPrivateFieldGet(this, _Sha256_is224, \"f\") ? 28 : 32);\n        const dataView = new DataView(buffer);\n        dataView.setUint32(0, __classPrivateFieldGet(this, _Sha256_h0, \"f\"));\n        dataView.setUint32(4, __classPrivateFieldGet(this, _Sha256_h1, \"f\"));\n        dataView.setUint32(8, __classPrivateFieldGet(this, _Sha256_h2, \"f\"));\n        dataView.setUint32(12, __classPrivateFieldGet(this, _Sha256_h3, \"f\"));\n        dataView.setUint32(16, __classPrivateFieldGet(this, _Sha256_h4, \"f\"));\n        dataView.setUint32(20, __classPrivateFieldGet(this, _Sha256_h5, \"f\"));\n        dataView.setUint32(24, __classPrivateFieldGet(this, _Sha256_h6, \"f\"));\n        if (!__classPrivateFieldGet(this, _Sha256_is224, \"f\")) {\n            dataView.setUint32(28, __classPrivateFieldGet(this, _Sha256_h7, \"f\"));\n        }\n        return buffer;\n    }\n}\n_Sha256_block = new WeakMap(), _Sha256_blocks = new WeakMap(), _Sha256_bytes = new WeakMap(), _Sha256_finalized = new WeakMap(), _Sha256_first = new WeakMap(), _Sha256_h0 = new WeakMap(), _Sha256_h1 = new WeakMap(), _Sha256_h2 = new WeakMap(), _Sha256_h3 = new WeakMap(), _Sha256_h4 = new WeakMap(), _Sha256_h5 = new WeakMap(), _Sha256_h6 = new WeakMap(), _Sha256_h7 = new WeakMap(), _Sha256_hashed = new WeakMap(), _Sha256_hBytes = new WeakMap(), _Sha256_is224 = new WeakMap(), _Sha256_lastByteIndex = new WeakMap(), _Sha256_start = new WeakMap();\nclass HmacSha256 extends Sha256 {\n    constructor(secretKey, is224 = false, sharedMemory = false) {\n        super(is224, sharedMemory);\n        _HmacSha256_inner.set(this, void 0);\n        _HmacSha256_is224.set(this, void 0);\n        _HmacSha256_oKeyPad.set(this, void 0);\n        _HmacSha256_sharedMemory.set(this, void 0);\n        let key;\n        if (typeof secretKey === \"string\") {\n            const bytes = [];\n            const length = secretKey.length;\n            let index = 0;\n            for (let i = 0; i < length; ++i) {\n                let code = secretKey.charCodeAt(i);\n                if (code < 0x80) {\n                    bytes[index++] = code;\n                }\n                else if (code < 0x800) {\n                    bytes[index++] = 0xc0 | (code >> 6);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    bytes[index++] = 0xe0 | (code >> 12);\n                    bytes[index++] = 0x80 | ((code >> 6) & 0x3f);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n                else {\n                    code = 0x10000 +\n                        (((code & 0x3ff) << 10) | (secretKey.charCodeAt(++i) & 0x3ff));\n                    bytes[index++] = 0xf0 | (code >> 18);\n                    bytes[index++] = 0x80 | ((code >> 12) & 0x3f);\n                    bytes[index++] = 0x80 | ((code >> 6) & 0x3f);\n                    bytes[index++] = 0x80 | (code & 0x3f);\n                }\n            }\n            key = bytes;\n        }\n        else {\n            if (secretKey instanceof ArrayBuffer) {\n                key = new Uint8Array(secretKey);\n            }\n            else {\n                key = secretKey;\n            }\n        }\n        if (key.length > 64) {\n            key = new Sha256(is224, true).update(key).array();\n        }\n        const oKeyPad = [];\n        const iKeyPad = [];\n        for (let i = 0; i < 64; ++i) {\n            const b = key[i] || 0;\n            oKeyPad[i] = 0x5c ^ b;\n            iKeyPad[i] = 0x36 ^ b;\n        }\n        this.update(iKeyPad);\n        __classPrivateFieldSet(this, _HmacSha256_oKeyPad, oKeyPad, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_inner, true, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_is224, is224, \"f\");\n        __classPrivateFieldSet(this, _HmacSha256_sharedMemory, sharedMemory, \"f\");\n    }\n    finalize() {\n        super.finalize();\n        if (__classPrivateFieldGet(this, _HmacSha256_inner, \"f\")) {\n            __classPrivateFieldSet(this, _HmacSha256_inner, false, \"f\");\n            const innerHash = this.array();\n            super.init(__classPrivateFieldGet(this, _HmacSha256_is224, \"f\"), __classPrivateFieldGet(this, _HmacSha256_sharedMemory, \"f\"));\n            this.update(__classPrivateFieldGet(this, _HmacSha256_oKeyPad, \"f\"));\n            this.update(innerHash);\n            super.finalize();\n        }\n    }\n}\n_HmacSha256_inner = new WeakMap(), _HmacSha256_is224 = new WeakMap(), _HmacSha256_oKeyPad = new WeakMap(), _HmacSha256_sharedMemory = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/deps/deno.land/x/typebox@0.25.13/src/typebox.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/deps/deno.land/x/typebox@0.25.13/src/typebox.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hint\": function() { return /* binding */ Hint; },\n/* harmony export */   \"Kind\": function() { return /* binding */ Kind; },\n/* harmony export */   \"Modifier\": function() { return /* binding */ Modifier; },\n/* harmony export */   \"Type\": function() { return /* binding */ Type; },\n/* harmony export */   \"TypeBuilder\": function() { return /* binding */ TypeBuilder; }\n/* harmony export */ });\n/*--------------------------------------------------------------------------\n\r\n@sinclair/typebox\n\r\nThe MIT License (MIT)\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\r\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\r\n---------------------------------------------------------------------------*/\n// --------------------------------------------------------------------------\n// Symbols\n// --------------------------------------------------------------------------\nconst Kind = Symbol.for('TypeBox.Kind');\nconst Hint = Symbol.for('TypeBox.Hint');\nconst Modifier = Symbol.for('TypeBox.Modifier');\n// --------------------------------------------------------------------------\n// TypeBuilder\n// --------------------------------------------------------------------------\nlet TypeOrdinal = 0;\nclass TypeBuilder {\n    // ----------------------------------------------------------------------\n    // Modifiers\n    // ----------------------------------------------------------------------\n    /** Creates a readonly optional property */\n    ReadonlyOptional(item) {\n        return { [Modifier]: 'ReadonlyOptional', ...item };\n    }\n    /** Creates a readonly property */\n    Readonly(item) {\n        return { [Modifier]: 'Readonly', ...item };\n    }\n    /** Creates a optional property */\n    Optional(item) {\n        return { [Modifier]: 'Optional', ...item };\n    }\n    // ----------------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------------\n    /** `Standard` Creates a any type */\n    Any(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Any' });\n    }\n    /** `Standard` Creates a array type */\n    Array(items, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Array', type: 'array', items });\n    }\n    /** `Standard` Creates a boolean type */\n    Boolean(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Boolean', type: 'boolean' });\n    }\n    /** `Extended` Creates a tuple type from this constructors parameters */\n    ConstructorParameters(schema, options = {}) {\n        return this.Tuple([...schema.parameters], { ...options });\n    }\n    /** `Extended` Creates a constructor type */\n    Constructor(parameters, returns, options = {}) {\n        if (parameters[Kind] === 'Tuple') {\n            const inner = parameters.items === undefined ? [] : parameters.items;\n            return this.Create({ ...options, [Kind]: 'Constructor', type: 'object', instanceOf: 'Constructor', parameters: inner, returns });\n        }\n        else if (globalThis.Array.isArray(parameters)) {\n            return this.Create({ ...options, [Kind]: 'Constructor', type: 'object', instanceOf: 'Constructor', parameters, returns });\n        }\n        else {\n            throw new Error('TypeBuilder.Constructor: Invalid parameters');\n        }\n    }\n    /** `Extended` Creates a Date type */\n    Date(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Date', type: 'object', instanceOf: 'Date' });\n    }\n    /** `Standard` Creates a enum type */\n    Enum(item, options = {}) {\n        const values = Object.keys(item)\n            .filter((key) => isNaN(key))\n            .map((key) => item[key]);\n        const anyOf = values.map((value) => (typeof value === 'string' ? { [Kind]: 'Literal', type: 'string', const: value } : { [Kind]: 'Literal', type: 'number', const: value }));\n        return this.Create({ ...options, [Kind]: 'Union', [Hint]: 'Enum', anyOf });\n    }\n    /** `Extended` Creates a function type */\n    Function(parameters, returns, options = {}) {\n        if (parameters[Kind] === 'Tuple') {\n            const inner = parameters.items === undefined ? [] : parameters.items;\n            return this.Create({ ...options, [Kind]: 'Function', type: 'object', instanceOf: 'Function', parameters: inner, returns });\n        }\n        else if (globalThis.Array.isArray(parameters)) {\n            return this.Create({ ...options, [Kind]: 'Function', type: 'object', instanceOf: 'Function', parameters, returns });\n        }\n        else {\n            throw new Error('TypeBuilder.Function: Invalid parameters');\n        }\n    }\n    /** `Extended` Creates a type from this constructors instance type */\n    InstanceType(schema, options = {}) {\n        return { ...options, ...this.Clone(schema.returns) };\n    }\n    /** `Standard` Creates a integer type */\n    Integer(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Integer', type: 'integer' });\n    }\n    /** `Standard` Creates a intersect type. */\n    Intersect(objects, options = {}) {\n        const isOptional = (schema) => (schema[Modifier] && schema[Modifier] === 'Optional') || schema[Modifier] === 'ReadonlyOptional';\n        const [required, optional] = [new Set(), new Set()];\n        for (const object of objects) {\n            for (const [key, schema] of Object.entries(object.properties)) {\n                if (isOptional(schema))\n                    optional.add(key);\n            }\n        }\n        for (const object of objects) {\n            for (const key of Object.keys(object.properties)) {\n                if (!optional.has(key))\n                    required.add(key);\n            }\n        }\n        const properties = {};\n        for (const object of objects) {\n            for (const [key, schema] of Object.entries(object.properties)) {\n                properties[key] = properties[key] === undefined ? schema : { [Kind]: 'Union', anyOf: [properties[key], { ...schema }] };\n            }\n        }\n        if (required.size > 0) {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties, required: [...required] });\n        }\n        else {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties });\n        }\n    }\n    /** `Standard` Creates a keyof type */\n    KeyOf(object, options = {}) {\n        const items = Object.keys(object.properties).map((key) => this.Create({ ...options, [Kind]: 'Literal', type: 'string', const: key }));\n        return this.Create({ ...options, [Kind]: 'Union', [Hint]: 'KeyOf', anyOf: items });\n    }\n    /** `Standard` Creates a literal type. */\n    Literal(value, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Literal', const: value, type: typeof value });\n    }\n    /** `Standard` Creates a never type */\n    Never(options = {}) {\n        return this.Create({\n            ...options,\n            [Kind]: 'Never',\n            allOf: [\n                { type: 'boolean', const: false },\n                { type: 'boolean', const: true },\n            ],\n        });\n    }\n    /** `Standard` Creates a null type */\n    Null(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Null', type: 'null' });\n    }\n    /** `Standard` Creates a number type */\n    Number(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Number', type: 'number' });\n    }\n    /** `Standard` Creates an object type */\n    Object(properties, options = {}) {\n        const property_names = Object.keys(properties);\n        const optional = property_names.filter((name) => {\n            const property = properties[name];\n            const modifier = property[Modifier];\n            return modifier && (modifier === 'Optional' || modifier === 'ReadonlyOptional');\n        });\n        const required = property_names.filter((name) => !optional.includes(name));\n        if (required.length > 0) {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties, required });\n        }\n        else {\n            return this.Create({ ...options, [Kind]: 'Object', type: 'object', properties });\n        }\n    }\n    /** `Standard` Creates a new object type whose keys are omitted from the given source type */\n    Omit(schema, keys, options = {}) {\n        const select = keys[Kind] === 'Union' ? keys.anyOf.map((schema) => schema.const) : keys;\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Omit' };\n        if (next.required) {\n            next.required = next.required.filter((key) => !select.includes(key));\n            if (next.required.length === 0)\n                delete next.required;\n        }\n        for (const key of Object.keys(next.properties)) {\n            if (select.includes(key))\n                delete next.properties[key];\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a tuple type from this functions parameters */\n    Parameters(schema, options = {}) {\n        return Type.Tuple(schema.parameters, { ...options });\n    }\n    /** `Standard` Creates an object type whose properties are all optional */\n    Partial(schema, options = {}) {\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Partial' };\n        delete next.required;\n        for (const key of Object.keys(next.properties)) {\n            const property = next.properties[key];\n            const modifer = property[Modifier];\n            switch (modifer) {\n                case 'ReadonlyOptional':\n                    property[Modifier] = 'ReadonlyOptional';\n                    break;\n                case 'Readonly':\n                    property[Modifier] = 'ReadonlyOptional';\n                    break;\n                case 'Optional':\n                    property[Modifier] = 'Optional';\n                    break;\n                default:\n                    property[Modifier] = 'Optional';\n                    break;\n            }\n        }\n        return this.Create(next);\n    }\n    /** `Standard` Creates a new object type whose keys are picked from the given source type */\n    Pick(schema, keys, options = {}) {\n        const select = keys[Kind] === 'Union' ? keys.anyOf.map((schema) => schema.const) : keys;\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Pick' };\n        if (next.required) {\n            next.required = next.required.filter((key) => select.includes(key));\n            if (next.required.length === 0)\n                delete next.required;\n        }\n        for (const key of Object.keys(next.properties)) {\n            if (!select.includes(key))\n                delete next.properties[key];\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a Promise type */\n    Promise(item, options = {}) {\n        return this.Create({ ...options, [Kind]: 'Promise', type: 'object', instanceOf: 'Promise', item });\n    }\n    /** `Standard` Creates a record type */\n    Record(key, value, options = {}) {\n        // If string literal union return TObject with properties extracted from union.\n        if (key[Kind] === 'Union') {\n            return this.Object(key.anyOf.reduce((acc, literal) => {\n                return { ...acc, [literal.const]: value };\n            }, {}), { ...options, [Hint]: 'Record' });\n        }\n        // otherwise return TRecord with patternProperties\n        const pattern = ['Integer', 'Number'].includes(key[Kind]) ? '^(0|[1-9][0-9]*)$' : key[Kind] === 'String' && key.pattern ? key.pattern : '^.*$';\n        return this.Create({\n            ...options,\n            [Kind]: 'Record',\n            type: 'object',\n            patternProperties: { [pattern]: value },\n            additionalProperties: false,\n        });\n    }\n    /** `Standard` Creates recursive type */\n    Recursive(callback, options = {}) {\n        if (options.$id === undefined)\n            options.$id = `T${TypeOrdinal++}`;\n        const self = callback({ [Kind]: 'Self', $ref: `${options.$id}` });\n        self.$id = options.$id;\n        return this.Create({ ...options, ...self });\n    }\n    /** `Standard` Creates a reference type. The referenced type must contain a $id. */\n    Ref(schema, options = {}) {\n        if (schema.$id === undefined)\n            throw Error('TypeBuilder.Ref: Referenced schema must specify an $id');\n        return this.Create({ ...options, [Kind]: 'Ref', $ref: schema.$id });\n    }\n    /** `Standard` Creates a string type from a regular expression */\n    RegEx(regex, options = {}) {\n        return this.Create({ ...options, [Kind]: 'String', type: 'string', pattern: regex.source });\n    }\n    /** `Standard` Creates an object type whose properties are all required */\n    Required(schema, options = {}) {\n        const next = { ...this.Clone(schema), ...options, [Hint]: 'Required' };\n        next.required = Object.keys(next.properties);\n        for (const key of Object.keys(next.properties)) {\n            const property = next.properties[key];\n            const modifier = property[Modifier];\n            switch (modifier) {\n                case 'ReadonlyOptional':\n                    property[Modifier] = 'Readonly';\n                    break;\n                case 'Readonly':\n                    property[Modifier] = 'Readonly';\n                    break;\n                case 'Optional':\n                    delete property[Modifier];\n                    break;\n                default:\n                    delete property[Modifier];\n                    break;\n            }\n        }\n        return this.Create(next);\n    }\n    /** `Extended` Creates a type from this functions return type */\n    ReturnType(schema, options = {}) {\n        return { ...options, ...this.Clone(schema.returns) };\n    }\n    /** Removes Kind and Modifier symbol property keys from this schema */\n    Strict(schema) {\n        return JSON.parse(JSON.stringify(schema));\n    }\n    /** `Standard` Creates a string type */\n    String(options = {}) {\n        return this.Create({ ...options, [Kind]: 'String', type: 'string' });\n    }\n    /** `Standard` Creates a tuple type */\n    Tuple(items, options = {}) {\n        const additionalItems = false;\n        const minItems = items.length;\n        const maxItems = items.length;\n        const schema = (items.length > 0 ? { ...options, [Kind]: 'Tuple', type: 'array', items, additionalItems, minItems, maxItems } : { ...options, [Kind]: 'Tuple', type: 'array', minItems, maxItems });\n        return this.Create(schema);\n    }\n    /** `Extended` Creates a undefined type */\n    Undefined(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Undefined', type: 'null', typeOf: 'Undefined' });\n    }\n    /** `Standard` Creates a union type */\n    Union(items, options = {}) {\n        return items.length === 0 ? Type.Never({ ...options }) : this.Create({ ...options, [Kind]: 'Union', anyOf: items });\n    }\n    /** `Extended` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Uint8Array', type: 'object', instanceOf: 'Uint8Array' });\n    }\n    /** `Standard` Creates an unknown type */\n    Unknown(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Unknown' });\n    }\n    /** `Standard` Creates a user defined schema that infers as type T  */\n    Unsafe(options = {}) {\n        return this.Create({ ...options, [Kind]: options[Kind] || 'Unsafe' });\n    }\n    /** `Extended` Creates a void type */\n    Void(options = {}) {\n        return this.Create({ ...options, [Kind]: 'Void', type: 'null', typeOf: 'Void' });\n    }\n    /** Use this function to return TSchema with static and params omitted */\n    Create(schema) {\n        return schema;\n    }\n    /** Clones the given value */\n    Clone(value) {\n        const isObject = (object) => typeof object === 'object' && object !== null && !Array.isArray(object);\n        const isArray = (object) => typeof object === 'object' && object !== null && Array.isArray(object);\n        if (isObject(value)) {\n            return Object.keys(value).reduce((acc, key) => ({\n                ...acc,\n                [key]: this.Clone(value[key]),\n            }), Object.getOwnPropertySymbols(value).reduce((acc, key) => ({\n                ...acc,\n                [key]: this.Clone(value[key]),\n            }), {}));\n        }\n        else if (isArray(value)) {\n            return value.map((item) => this.Clone(item));\n        }\n        else {\n            return value;\n        }\n    }\n}\n/** JSON Schema Type Builder with Static Type Resolution for TypeScript */\nconst Type = new TypeBuilder();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vZGVwcy9kZW5vLmxhbmQveC90eXBlYm94QDAuMjUuMTMvc3JjL3R5cGVib3guanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsNkJBQTZCLDJCQUEyQjtBQUN4RDtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLDZCQUE2QixtREFBbUQ7QUFDaEY7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qiw2QkFBNkIsZ0RBQWdEO0FBQzdFO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUMsb0RBQW9ELFlBQVk7QUFDaEU7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0EsaUNBQWlDLDBHQUEwRztBQUMzSTtBQUNBO0FBQ0EsaUNBQWlDLG1HQUFtRztBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsNkJBQTZCLGdFQUFnRTtBQUM3RjtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxrREFBa0QsSUFBSSxpREFBaUQ7QUFDbEwsNkJBQTZCLG9EQUFvRDtBQUNqRjtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQSxpQ0FBaUMsb0dBQW9HO0FBQ3JJO0FBQ0E7QUFDQSxpQ0FBaUMsNkZBQTZGO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qiw2QkFBNkIsZ0RBQWdEO0FBQzdFO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSw0Q0FBNEMsV0FBVztBQUNwSTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsbUZBQW1GO0FBQ3BIO0FBQ0E7QUFDQSxpQ0FBaUMsMERBQTBEO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixnRkFBZ0YsMkRBQTJEO0FBQzNJLDZCQUE2Qiw0REFBNEQ7QUFDekY7QUFDQTtBQUNBLCtCQUErQjtBQUMvQiw2QkFBNkIsaUVBQWlFO0FBQzlGO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0JBQStCO0FBQ2pELGtCQUFrQiw4QkFBOEI7QUFDaEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiw2QkFBNkIsMENBQTBDO0FBQ3ZFO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIsNkJBQTZCLDhDQUE4QztBQUMzRTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxvRUFBb0U7QUFDckc7QUFDQTtBQUNBLGlDQUFpQywwREFBMEQ7QUFDM0Y7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQywrQ0FBK0MsWUFBWTtBQUMzRDtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsNkJBQTZCLDRFQUE0RTtBQUN6RztBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixhQUFhLElBQUksS0FBSyw4QkFBOEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0JBQWtCO0FBQ25EO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQSw4QkFBOEIsY0FBYztBQUM1QyxnQ0FBZ0MseUJBQXlCLFlBQVksR0FBRztBQUN4RTtBQUNBLDZCQUE2QixxQkFBcUI7QUFDbEQ7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EsNkJBQTZCLDZDQUE2QztBQUMxRTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLDZCQUE2QixxRUFBcUU7QUFDbEc7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2Qiw2QkFBNkIsOENBQThDO0FBQzNFO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHlGQUF5RixJQUFJLGdFQUFnRTtBQUMxTTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIsNkJBQTZCLG9FQUFvRTtBQUNqRztBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLGlEQUFpRCxZQUFZLGtCQUFrQiwyQ0FBMkM7QUFDMUg7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiw2QkFBNkIsNEVBQTRFO0FBQ3pHO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsNkJBQTZCLCtCQUErQjtBQUM1RDtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDZCQUE2QiwrQ0FBK0M7QUFDNUU7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiw2QkFBNkIsMERBQTBEO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLEtBQUs7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vZGVwcy9kZW5vLmxhbmQveC90eXBlYm94QDAuMjUuMTMvc3JjL3R5cGVib3guanM/Mjg0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cclxuQHNpbmNsYWlyL3R5cGVib3hcblxyXG5UaGUgTUlUIExpY2Vuc2UgKE1JVClcblxyXG5Db3B5cmlnaHQgKGMpIDIwMjIgSGF5ZG4gUGF0ZXJzb24gKHNpbmNsYWlyKSA8aGF5ZG4uZGV2ZWxvcGVyQGdtYWlsLmNvbT5cblxyXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cclxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbmFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXHJcblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG5BVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG5MSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuVEhFIFNPRlRXQVJFLlxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU3ltYm9sc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCBjb25zdCBLaW5kID0gU3ltYm9sLmZvcignVHlwZUJveC5LaW5kJyk7XG5leHBvcnQgY29uc3QgSGludCA9IFN5bWJvbC5mb3IoJ1R5cGVCb3guSGludCcpO1xuZXhwb3J0IGNvbnN0IE1vZGlmaWVyID0gU3ltYm9sLmZvcignVHlwZUJveC5Nb2RpZmllcicpO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFR5cGVCdWlsZGVyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxubGV0IFR5cGVPcmRpbmFsID0gMDtcbmV4cG9ydCBjbGFzcyBUeXBlQnVpbGRlciB7XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIE1vZGlmaWVyc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvKiogQ3JlYXRlcyBhIHJlYWRvbmx5IG9wdGlvbmFsIHByb3BlcnR5ICovXG4gICAgUmVhZG9ubHlPcHRpb25hbChpdGVtKSB7XG4gICAgICAgIHJldHVybiB7IFtNb2RpZmllcl06ICdSZWFkb25seU9wdGlvbmFsJywgLi4uaXRlbSB9O1xuICAgIH1cbiAgICAvKiogQ3JlYXRlcyBhIHJlYWRvbmx5IHByb3BlcnR5ICovXG4gICAgUmVhZG9ubHkoaXRlbSkge1xuICAgICAgICByZXR1cm4geyBbTW9kaWZpZXJdOiAnUmVhZG9ubHknLCAuLi5pdGVtIH07XG4gICAgfVxuICAgIC8qKiBDcmVhdGVzIGEgb3B0aW9uYWwgcHJvcGVydHkgKi9cbiAgICBPcHRpb25hbChpdGVtKSB7XG4gICAgICAgIHJldHVybiB7IFtNb2RpZmllcl06ICdPcHRpb25hbCcsIC4uLml0ZW0gfTtcbiAgICB9XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIFR5cGVzXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBhbnkgdHlwZSAqL1xuICAgIEFueShvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnQW55JyB9KTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhIGFycmF5IHR5cGUgKi9cbiAgICBBcnJheShpdGVtcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ0FycmF5JywgdHlwZTogJ2FycmF5JywgaXRlbXMgfSk7XG4gICAgfVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBib29sZWFuIHR5cGUgKi9cbiAgICBCb29sZWFuKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdCb29sZWFuJywgdHlwZTogJ2Jvb2xlYW4nIH0pO1xuICAgIH1cbiAgICAvKiogYEV4dGVuZGVkYCBDcmVhdGVzIGEgdHVwbGUgdHlwZSBmcm9tIHRoaXMgY29uc3RydWN0b3JzIHBhcmFtZXRlcnMgKi9cbiAgICBDb25zdHJ1Y3RvclBhcmFtZXRlcnMoc2NoZW1hLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuVHVwbGUoWy4uLnNjaGVtYS5wYXJhbWV0ZXJzXSwgeyAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKiogYEV4dGVuZGVkYCBDcmVhdGVzIGEgY29uc3RydWN0b3IgdHlwZSAqL1xuICAgIENvbnN0cnVjdG9yKHBhcmFtZXRlcnMsIHJldHVybnMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAocGFyYW1ldGVyc1tLaW5kXSA9PT0gJ1R1cGxlJykge1xuICAgICAgICAgICAgY29uc3QgaW5uZXIgPSBwYXJhbWV0ZXJzLml0ZW1zID09PSB1bmRlZmluZWQgPyBbXSA6IHBhcmFtZXRlcnMuaXRlbXM7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdDb25zdHJ1Y3RvcicsIHR5cGU6ICdvYmplY3QnLCBpbnN0YW5jZU9mOiAnQ29uc3RydWN0b3InLCBwYXJhbWV0ZXJzOiBpbm5lciwgcmV0dXJucyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChnbG9iYWxUaGlzLkFycmF5LmlzQXJyYXkocGFyYW1ldGVycykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ0NvbnN0cnVjdG9yJywgdHlwZTogJ29iamVjdCcsIGluc3RhbmNlT2Y6ICdDb25zdHJ1Y3RvcicsIHBhcmFtZXRlcnMsIHJldHVybnMgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1R5cGVCdWlsZGVyLkNvbnN0cnVjdG9yOiBJbnZhbGlkIHBhcmFtZXRlcnMnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogYEV4dGVuZGVkYCBDcmVhdGVzIGEgRGF0ZSB0eXBlICovXG4gICAgRGF0ZShvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnRGF0ZScsIHR5cGU6ICdvYmplY3QnLCBpbnN0YW5jZU9mOiAnRGF0ZScgfSk7XG4gICAgfVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBlbnVtIHR5cGUgKi9cbiAgICBFbnVtKGl0ZW0sIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3Qua2V5cyhpdGVtKVxuICAgICAgICAgICAgLmZpbHRlcigoa2V5KSA9PiBpc05hTihrZXkpKVxuICAgICAgICAgICAgLm1hcCgoa2V5KSA9PiBpdGVtW2tleV0pO1xuICAgICAgICBjb25zdCBhbnlPZiA9IHZhbHVlcy5tYXAoKHZhbHVlKSA9PiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHsgW0tpbmRdOiAnTGl0ZXJhbCcsIHR5cGU6ICdzdHJpbmcnLCBjb25zdDogdmFsdWUgfSA6IHsgW0tpbmRdOiAnTGl0ZXJhbCcsIHR5cGU6ICdudW1iZXInLCBjb25zdDogdmFsdWUgfSkpO1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdVbmlvbicsIFtIaW50XTogJ0VudW0nLCBhbnlPZiB9KTtcbiAgICB9XG4gICAgLyoqIGBFeHRlbmRlZGAgQ3JlYXRlcyBhIGZ1bmN0aW9uIHR5cGUgKi9cbiAgICBGdW5jdGlvbihwYXJhbWV0ZXJzLCByZXR1cm5zLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgaWYgKHBhcmFtZXRlcnNbS2luZF0gPT09ICdUdXBsZScpIHtcbiAgICAgICAgICAgIGNvbnN0IGlubmVyID0gcGFyYW1ldGVycy5pdGVtcyA9PT0gdW5kZWZpbmVkID8gW10gOiBwYXJhbWV0ZXJzLml0ZW1zO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnRnVuY3Rpb24nLCB0eXBlOiAnb2JqZWN0JywgaW5zdGFuY2VPZjogJ0Z1bmN0aW9uJywgcGFyYW1ldGVyczogaW5uZXIsIHJldHVybnMgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZ2xvYmFsVGhpcy5BcnJheS5pc0FycmF5KHBhcmFtZXRlcnMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdGdW5jdGlvbicsIHR5cGU6ICdvYmplY3QnLCBpbnN0YW5jZU9mOiAnRnVuY3Rpb24nLCBwYXJhbWV0ZXJzLCByZXR1cm5zIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUeXBlQnVpbGRlci5GdW5jdGlvbjogSW52YWxpZCBwYXJhbWV0ZXJzJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqIGBFeHRlbmRlZGAgQ3JlYXRlcyBhIHR5cGUgZnJvbSB0aGlzIGNvbnN0cnVjdG9ycyBpbnN0YW5jZSB0eXBlICovXG4gICAgSW5zdGFuY2VUeXBlKHNjaGVtYSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB7IC4uLm9wdGlvbnMsIC4uLnRoaXMuQ2xvbmUoc2NoZW1hLnJldHVybnMpIH07XG4gICAgfVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBpbnRlZ2VyIHR5cGUgKi9cbiAgICBJbnRlZ2VyKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdJbnRlZ2VyJywgdHlwZTogJ2ludGVnZXInIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgaW50ZXJzZWN0IHR5cGUuICovXG4gICAgSW50ZXJzZWN0KG9iamVjdHMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBpc09wdGlvbmFsID0gKHNjaGVtYSkgPT4gKHNjaGVtYVtNb2RpZmllcl0gJiYgc2NoZW1hW01vZGlmaWVyXSA9PT0gJ09wdGlvbmFsJykgfHwgc2NoZW1hW01vZGlmaWVyXSA9PT0gJ1JlYWRvbmx5T3B0aW9uYWwnO1xuICAgICAgICBjb25zdCBbcmVxdWlyZWQsIG9wdGlvbmFsXSA9IFtuZXcgU2V0KCksIG5ldyBTZXQoKV07XG4gICAgICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgc2NoZW1hXSBvZiBPYmplY3QuZW50cmllcyhvYmplY3QucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNPcHRpb25hbChzY2hlbWEpKVxuICAgICAgICAgICAgICAgICAgICBvcHRpb25hbC5hZGQoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBvYmplY3RzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhvYmplY3QucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbmFsLmhhcyhrZXkpKVxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZC5hZGQoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9wZXJ0aWVzID0ge307XG4gICAgICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgc2NoZW1hXSBvZiBPYmplY3QuZW50cmllcyhvYmplY3QucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBwcm9wZXJ0aWVzW2tleV0gPT09IHVuZGVmaW5lZCA/IHNjaGVtYSA6IHsgW0tpbmRdOiAnVW5pb24nLCBhbnlPZjogW3Byb3BlcnRpZXNba2V5XSwgeyAuLi5zY2hlbWEgfV0gfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWlyZWQuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ09iamVjdCcsIHR5cGU6ICdvYmplY3QnLCBwcm9wZXJ0aWVzLCByZXF1aXJlZDogWy4uLnJlcXVpcmVkXSB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ09iamVjdCcsIHR5cGU6ICdvYmplY3QnLCBwcm9wZXJ0aWVzIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBrZXlvZiB0eXBlICovXG4gICAgS2V5T2Yob2JqZWN0LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBPYmplY3Qua2V5cyhvYmplY3QucHJvcGVydGllcykubWFwKChrZXkpID0+IHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnTGl0ZXJhbCcsIHR5cGU6ICdzdHJpbmcnLCBjb25zdDoga2V5IH0pKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnVW5pb24nLCBbSGludF06ICdLZXlPZicsIGFueU9mOiBpdGVtcyB9KTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhIGxpdGVyYWwgdHlwZS4gKi9cbiAgICBMaXRlcmFsKHZhbHVlLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnTGl0ZXJhbCcsIGNvbnN0OiB2YWx1ZSwgdHlwZTogdHlwZW9mIHZhbHVlIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgbmV2ZXIgdHlwZSAqL1xuICAgIE5ldmVyKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIFtLaW5kXTogJ05ldmVyJyxcbiAgICAgICAgICAgIGFsbE9mOiBbXG4gICAgICAgICAgICAgICAgeyB0eXBlOiAnYm9vbGVhbicsIGNvbnN0OiBmYWxzZSB9LFxuICAgICAgICAgICAgICAgIHsgdHlwZTogJ2Jvb2xlYW4nLCBjb25zdDogdHJ1ZSB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBgU3RhbmRhcmRgIENyZWF0ZXMgYSBudWxsIHR5cGUgKi9cbiAgICBOdWxsKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdOdWxsJywgdHlwZTogJ251bGwnIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgbnVtYmVyIHR5cGUgKi9cbiAgICBOdW1iZXIob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ051bWJlcicsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGFuIG9iamVjdCB0eXBlICovXG4gICAgT2JqZWN0KHByb3BlcnRpZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBwcm9wZXJ0eV9uYW1lcyA9IE9iamVjdC5rZXlzKHByb3BlcnRpZXMpO1xuICAgICAgICBjb25zdCBvcHRpb25hbCA9IHByb3BlcnR5X25hbWVzLmZpbHRlcigobmFtZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvcGVydHkgPSBwcm9wZXJ0aWVzW25hbWVdO1xuICAgICAgICAgICAgY29uc3QgbW9kaWZpZXIgPSBwcm9wZXJ0eVtNb2RpZmllcl07XG4gICAgICAgICAgICByZXR1cm4gbW9kaWZpZXIgJiYgKG1vZGlmaWVyID09PSAnT3B0aW9uYWwnIHx8IG1vZGlmaWVyID09PSAnUmVhZG9ubHlPcHRpb25hbCcpO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcmVxdWlyZWQgPSBwcm9wZXJ0eV9uYW1lcy5maWx0ZXIoKG5hbWUpID0+ICFvcHRpb25hbC5pbmNsdWRlcyhuYW1lKSk7XG4gICAgICAgIGlmIChyZXF1aXJlZC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdPYmplY3QnLCB0eXBlOiAnb2JqZWN0JywgcHJvcGVydGllcywgcmVxdWlyZWQgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdPYmplY3QnLCB0eXBlOiAnb2JqZWN0JywgcHJvcGVydGllcyB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgbmV3IG9iamVjdCB0eXBlIHdob3NlIGtleXMgYXJlIG9taXR0ZWQgZnJvbSB0aGUgZ2l2ZW4gc291cmNlIHR5cGUgKi9cbiAgICBPbWl0KHNjaGVtYSwga2V5cywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IGtleXNbS2luZF0gPT09ICdVbmlvbicgPyBrZXlzLmFueU9mLm1hcCgoc2NoZW1hKSA9PiBzY2hlbWEuY29uc3QpIDoga2V5cztcbiAgICAgICAgY29uc3QgbmV4dCA9IHsgLi4udGhpcy5DbG9uZShzY2hlbWEpLCAuLi5vcHRpb25zLCBbSGludF06ICdPbWl0JyB9O1xuICAgICAgICBpZiAobmV4dC5yZXF1aXJlZCkge1xuICAgICAgICAgICAgbmV4dC5yZXF1aXJlZCA9IG5leHQucmVxdWlyZWQuZmlsdGVyKChrZXkpID0+ICFzZWxlY3QuaW5jbHVkZXMoa2V5KSk7XG4gICAgICAgICAgICBpZiAobmV4dC5yZXF1aXJlZC5sZW5ndGggPT09IDApXG4gICAgICAgICAgICAgICAgZGVsZXRlIG5leHQucmVxdWlyZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMobmV4dC5wcm9wZXJ0aWVzKSkge1xuICAgICAgICAgICAgaWYgKHNlbGVjdC5pbmNsdWRlcyhrZXkpKVxuICAgICAgICAgICAgICAgIGRlbGV0ZSBuZXh0LnByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUobmV4dCk7XG4gICAgfVxuICAgIC8qKiBgRXh0ZW5kZWRgIENyZWF0ZXMgYSB0dXBsZSB0eXBlIGZyb20gdGhpcyBmdW5jdGlvbnMgcGFyYW1ldGVycyAqL1xuICAgIFBhcmFtZXRlcnMoc2NoZW1hLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIFR5cGUuVHVwbGUoc2NoZW1hLnBhcmFtZXRlcnMsIHsgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhbiBvYmplY3QgdHlwZSB3aG9zZSBwcm9wZXJ0aWVzIGFyZSBhbGwgb3B0aW9uYWwgKi9cbiAgICBQYXJ0aWFsKHNjaGVtYSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IG5leHQgPSB7IC4uLnRoaXMuQ2xvbmUoc2NoZW1hKSwgLi4ub3B0aW9ucywgW0hpbnRdOiAnUGFydGlhbCcgfTtcbiAgICAgICAgZGVsZXRlIG5leHQucmVxdWlyZWQ7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG5leHQucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5ID0gbmV4dC5wcm9wZXJ0aWVzW2tleV07XG4gICAgICAgICAgICBjb25zdCBtb2RpZmVyID0gcHJvcGVydHlbTW9kaWZpZXJdO1xuICAgICAgICAgICAgc3dpdGNoIChtb2RpZmVyKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnUmVhZG9ubHlPcHRpb25hbCc6XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5W01vZGlmaWVyXSA9ICdSZWFkb25seU9wdGlvbmFsJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnUmVhZG9ubHknOlxuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eVtNb2RpZmllcl0gPSAnUmVhZG9ubHlPcHRpb25hbCc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ09wdGlvbmFsJzpcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHlbTW9kaWZpZXJdID0gJ09wdGlvbmFsJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHlbTW9kaWZpZXJdID0gJ09wdGlvbmFsJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKG5leHQpO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgbmV3IG9iamVjdCB0eXBlIHdob3NlIGtleXMgYXJlIHBpY2tlZCBmcm9tIHRoZSBnaXZlbiBzb3VyY2UgdHlwZSAqL1xuICAgIFBpY2soc2NoZW1hLCBrZXlzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ID0ga2V5c1tLaW5kXSA9PT0gJ1VuaW9uJyA/IGtleXMuYW55T2YubWFwKChzY2hlbWEpID0+IHNjaGVtYS5jb25zdCkgOiBrZXlzO1xuICAgICAgICBjb25zdCBuZXh0ID0geyAuLi50aGlzLkNsb25lKHNjaGVtYSksIC4uLm9wdGlvbnMsIFtIaW50XTogJ1BpY2snIH07XG4gICAgICAgIGlmIChuZXh0LnJlcXVpcmVkKSB7XG4gICAgICAgICAgICBuZXh0LnJlcXVpcmVkID0gbmV4dC5yZXF1aXJlZC5maWx0ZXIoKGtleSkgPT4gc2VsZWN0LmluY2x1ZGVzKGtleSkpO1xuICAgICAgICAgICAgaWYgKG5leHQucmVxdWlyZWQubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgIGRlbGV0ZSBuZXh0LnJlcXVpcmVkO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG5leHQucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgIGlmICghc2VsZWN0LmluY2x1ZGVzKGtleSkpXG4gICAgICAgICAgICAgICAgZGVsZXRlIG5leHQucHJvcGVydGllc1trZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZShuZXh0KTtcbiAgICB9XG4gICAgLyoqIGBFeHRlbmRlZGAgQ3JlYXRlcyBhIFByb21pc2UgdHlwZSAqL1xuICAgIFByb21pc2UoaXRlbSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ1Byb21pc2UnLCB0eXBlOiAnb2JqZWN0JywgaW5zdGFuY2VPZjogJ1Byb21pc2UnLCBpdGVtIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgcmVjb3JkIHR5cGUgKi9cbiAgICBSZWNvcmQoa2V5LCB2YWx1ZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIC8vIElmIHN0cmluZyBsaXRlcmFsIHVuaW9uIHJldHVybiBUT2JqZWN0IHdpdGggcHJvcGVydGllcyBleHRyYWN0ZWQgZnJvbSB1bmlvbi5cbiAgICAgICAgaWYgKGtleVtLaW5kXSA9PT0gJ1VuaW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuT2JqZWN0KGtleS5hbnlPZi5yZWR1Y2UoKGFjYywgbGl0ZXJhbCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IC4uLmFjYywgW2xpdGVyYWwuY29uc3RdOiB2YWx1ZSB9O1xuICAgICAgICAgICAgfSwge30pLCB7IC4uLm9wdGlvbnMsIFtIaW50XTogJ1JlY29yZCcgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3RoZXJ3aXNlIHJldHVybiBUUmVjb3JkIHdpdGggcGF0dGVyblByb3BlcnRpZXNcbiAgICAgICAgY29uc3QgcGF0dGVybiA9IFsnSW50ZWdlcicsICdOdW1iZXInXS5pbmNsdWRlcyhrZXlbS2luZF0pID8gJ14oMHxbMS05XVswLTldKikkJyA6IGtleVtLaW5kXSA9PT0gJ1N0cmluZycgJiYga2V5LnBhdHRlcm4gPyBrZXkucGF0dGVybiA6ICdeLiokJztcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBbS2luZF06ICdSZWNvcmQnLFxuICAgICAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgICAgICBwYXR0ZXJuUHJvcGVydGllczogeyBbcGF0dGVybl06IHZhbHVlIH0sXG4gICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIHJlY3Vyc2l2ZSB0eXBlICovXG4gICAgUmVjdXJzaXZlKGNhbGxiYWNrLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuJGlkID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBvcHRpb25zLiRpZCA9IGBUJHtUeXBlT3JkaW5hbCsrfWA7XG4gICAgICAgIGNvbnN0IHNlbGYgPSBjYWxsYmFjayh7IFtLaW5kXTogJ1NlbGYnLCAkcmVmOiBgJHtvcHRpb25zLiRpZH1gIH0pO1xuICAgICAgICBzZWxmLiRpZCA9IG9wdGlvbnMuJGlkO1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCAuLi5zZWxmIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgcmVmZXJlbmNlIHR5cGUuIFRoZSByZWZlcmVuY2VkIHR5cGUgbXVzdCBjb250YWluIGEgJGlkLiAqL1xuICAgIFJlZihzY2hlbWEsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAoc2NoZW1hLiRpZCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1R5cGVCdWlsZGVyLlJlZjogUmVmZXJlbmNlZCBzY2hlbWEgbXVzdCBzcGVjaWZ5IGFuICRpZCcpO1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdSZWYnLCAkcmVmOiBzY2hlbWEuJGlkIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgc3RyaW5nIHR5cGUgZnJvbSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiAqL1xuICAgIFJlZ0V4KHJlZ2V4LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnU3RyaW5nJywgdHlwZTogJ3N0cmluZycsIHBhdHRlcm46IHJlZ2V4LnNvdXJjZSB9KTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhbiBvYmplY3QgdHlwZSB3aG9zZSBwcm9wZXJ0aWVzIGFyZSBhbGwgcmVxdWlyZWQgKi9cbiAgICBSZXF1aXJlZChzY2hlbWEsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBuZXh0ID0geyAuLi50aGlzLkNsb25lKHNjaGVtYSksIC4uLm9wdGlvbnMsIFtIaW50XTogJ1JlcXVpcmVkJyB9O1xuICAgICAgICBuZXh0LnJlcXVpcmVkID0gT2JqZWN0LmtleXMobmV4dC5wcm9wZXJ0aWVzKTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMobmV4dC5wcm9wZXJ0aWVzKSkge1xuICAgICAgICAgICAgY29uc3QgcHJvcGVydHkgPSBuZXh0LnByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgICAgIGNvbnN0IG1vZGlmaWVyID0gcHJvcGVydHlbTW9kaWZpZXJdO1xuICAgICAgICAgICAgc3dpdGNoIChtb2RpZmllcikge1xuICAgICAgICAgICAgICAgIGNhc2UgJ1JlYWRvbmx5T3B0aW9uYWwnOlxuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eVtNb2RpZmllcl0gPSAnUmVhZG9ubHknO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdSZWFkb25seSc6XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5W01vZGlmaWVyXSA9ICdSZWFkb25seSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ09wdGlvbmFsJzpcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHByb3BlcnR5W01vZGlmaWVyXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHByb3BlcnR5W01vZGlmaWVyXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKG5leHQpO1xuICAgIH1cbiAgICAvKiogYEV4dGVuZGVkYCBDcmVhdGVzIGEgdHlwZSBmcm9tIHRoaXMgZnVuY3Rpb25zIHJldHVybiB0eXBlICovXG4gICAgUmV0dXJuVHlwZShzY2hlbWEsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4geyAuLi5vcHRpb25zLCAuLi50aGlzLkNsb25lKHNjaGVtYS5yZXR1cm5zKSB9O1xuICAgIH1cbiAgICAvKiogUmVtb3ZlcyBLaW5kIGFuZCBNb2RpZmllciBzeW1ib2wgcHJvcGVydHkga2V5cyBmcm9tIHRoaXMgc2NoZW1hICovXG4gICAgU3RyaWN0KHNjaGVtYSkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzY2hlbWEpKTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhIHN0cmluZyB0eXBlICovXG4gICAgU3RyaW5nKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdTdHJpbmcnLCB0eXBlOiAnc3RyaW5nJyB9KTtcbiAgICB9XG4gICAgLyoqIGBTdGFuZGFyZGAgQ3JlYXRlcyBhIHR1cGxlIHR5cGUgKi9cbiAgICBUdXBsZShpdGVtcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGFkZGl0aW9uYWxJdGVtcyA9IGZhbHNlO1xuICAgICAgICBjb25zdCBtaW5JdGVtcyA9IGl0ZW1zLmxlbmd0aDtcbiAgICAgICAgY29uc3QgbWF4SXRlbXMgPSBpdGVtcy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IHNjaGVtYSA9IChpdGVtcy5sZW5ndGggPiAwID8geyAuLi5vcHRpb25zLCBbS2luZF06ICdUdXBsZScsIHR5cGU6ICdhcnJheScsIGl0ZW1zLCBhZGRpdGlvbmFsSXRlbXMsIG1pbkl0ZW1zLCBtYXhJdGVtcyB9IDogeyAuLi5vcHRpb25zLCBbS2luZF06ICdUdXBsZScsIHR5cGU6ICdhcnJheScsIG1pbkl0ZW1zLCBtYXhJdGVtcyB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHNjaGVtYSk7XG4gICAgfVxuICAgIC8qKiBgRXh0ZW5kZWRgIENyZWF0ZXMgYSB1bmRlZmluZWQgdHlwZSAqL1xuICAgIFVuZGVmaW5lZChvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKHsgLi4ub3B0aW9ucywgW0tpbmRdOiAnVW5kZWZpbmVkJywgdHlwZTogJ251bGwnLCB0eXBlT2Y6ICdVbmRlZmluZWQnIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgdW5pb24gdHlwZSAqL1xuICAgIFVuaW9uKGl0ZW1zLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW1zLmxlbmd0aCA9PT0gMCA/IFR5cGUuTmV2ZXIoeyAuLi5vcHRpb25zIH0pIDogdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdVbmlvbicsIGFueU9mOiBpdGVtcyB9KTtcbiAgICB9XG4gICAgLyoqIGBFeHRlbmRlZGAgQ3JlYXRlcyBhIFVpbnQ4QXJyYXkgdHlwZSAqL1xuICAgIFVpbnQ4QXJyYXkob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ1VpbnQ4QXJyYXknLCB0eXBlOiAnb2JqZWN0JywgaW5zdGFuY2VPZjogJ1VpbnQ4QXJyYXknIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGFuIHVua25vd24gdHlwZSAqL1xuICAgIFVua25vd24ob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZSh7IC4uLm9wdGlvbnMsIFtLaW5kXTogJ1Vua25vd24nIH0pO1xuICAgIH1cbiAgICAvKiogYFN0YW5kYXJkYCBDcmVhdGVzIGEgdXNlciBkZWZpbmVkIHNjaGVtYSB0aGF0IGluZmVycyBhcyB0eXBlIFQgICovXG4gICAgVW5zYWZlKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06IG9wdGlvbnNbS2luZF0gfHwgJ1Vuc2FmZScgfSk7XG4gICAgfVxuICAgIC8qKiBgRXh0ZW5kZWRgIENyZWF0ZXMgYSB2b2lkIHR5cGUgKi9cbiAgICBWb2lkKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5DcmVhdGUoeyAuLi5vcHRpb25zLCBbS2luZF06ICdWb2lkJywgdHlwZTogJ251bGwnLCB0eXBlT2Y6ICdWb2lkJyB9KTtcbiAgICB9XG4gICAgLyoqIFVzZSB0aGlzIGZ1bmN0aW9uIHRvIHJldHVybiBUU2NoZW1hIHdpdGggc3RhdGljIGFuZCBwYXJhbXMgb21pdHRlZCAqL1xuICAgIENyZWF0ZShzY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG4gICAgLyoqIENsb25lcyB0aGUgZ2l2ZW4gdmFsdWUgKi9cbiAgICBDbG9uZSh2YWx1ZSkge1xuICAgICAgICBjb25zdCBpc09iamVjdCA9IChvYmplY3QpID0+IHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIG9iamVjdCAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheShvYmplY3QpO1xuICAgICAgICBjb25zdCBpc0FycmF5ID0gKG9iamVjdCkgPT4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBudWxsICYmIEFycmF5LmlzQXJyYXkob2JqZWN0KTtcbiAgICAgICAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHZhbHVlKS5yZWR1Y2UoKGFjYywga2V5KSA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLmFjYyxcbiAgICAgICAgICAgICAgICBba2V5XTogdGhpcy5DbG9uZSh2YWx1ZVtrZXldKSxcbiAgICAgICAgICAgIH0pLCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHZhbHVlKS5yZWR1Y2UoKGFjYywga2V5KSA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLmFjYyxcbiAgICAgICAgICAgICAgICBba2V5XTogdGhpcy5DbG9uZSh2YWx1ZVtrZXldKSxcbiAgICAgICAgICAgIH0pLCB7fSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUubWFwKChpdGVtKSA9PiB0aGlzLkNsb25lKGl0ZW0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKiBKU09OIFNjaGVtYSBUeXBlIEJ1aWxkZXIgd2l0aCBTdGF0aWMgVHlwZSBSZXNvbHV0aW9uIGZvciBUeXBlU2NyaXB0ICovXG5leHBvcnQgY29uc3QgVHlwZSA9IG5ldyBUeXBlQnVpbGRlcigpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/deps/deno.land/x/typebox@0.25.13/src/typebox.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/mod.js":
/*!***********************************************!*\
  !*** ./node_modules/lucid-cardano/esm/mod.js ***!
  \***********************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/mod.js */ \"./node_modules/lucid-cardano/esm/src/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_mod_js__WEBPACK_IMPORTED_MODULE_0__]);\n_src_mod_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _src_mod_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _src_mod_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vbW9kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZC1jYXJkYW5vL2VzbS9tb2QuanM/Y2E5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9zcmMvbW9kLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/package.js":
/*!***************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/package.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    \"name\": \"lucid-cardano\",\n    \"version\": \"0.8.9\",\n    \"license\": \"MIT\",\n    \"author\": \"Alessandro Konrad\",\n    \"description\": \"Lucid is a library, which allows you to create Cardano transactions and off-chain code for your Plutus contracts in JavaScript, Deno and Node.js.\",\n    \"repository\": \"https://github.com/spacebudz/lucid\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vcGFja2FnZS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3BhY2thZ2UuanM/NjdjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwibHVjaWQtY2FyZGFub1wiLFxuICAgIFwidmVyc2lvblwiOiBcIjAuOC45XCIsXG4gICAgXCJsaWNlbnNlXCI6IFwiTUlUXCIsXG4gICAgXCJhdXRob3JcIjogXCJBbGVzc2FuZHJvIEtvbnJhZFwiLFxuICAgIFwiZGVzY3JpcHRpb25cIjogXCJMdWNpZCBpcyBhIGxpYnJhcnksIHdoaWNoIGFsbG93cyB5b3UgdG8gY3JlYXRlIENhcmRhbm8gdHJhbnNhY3Rpb25zIGFuZCBvZmYtY2hhaW4gY29kZSBmb3IgeW91ciBQbHV0dXMgY29udHJhY3RzIGluIEphdmFTY3JpcHQsIERlbm8gYW5kIE5vZGUuanMuXCIsXG4gICAgXCJyZXBvc2l0b3J5XCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL3NwYWNlYnVkei9sdWNpZFwiXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/package.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/core/core.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/core/core.js ***!
  \*********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"C\": function() { return /* binding */ C; },\n/* harmony export */   \"M\": function() { return /* binding */ M; }\n/* harmony export */ });\n// dnt-shim-ignore\nconst isNode = typeof window === \"undefined\";\nif (isNode) {\n    const fetch = await import(/* webpackIgnore: true */ \"node-fetch\");\n    const { Crypto } = await import(\n    /* webpackIgnore: true */ \"@peculiar/webcrypto\");\n    const { WebSocket } = await import(\n    /* webpackIgnore: true */ \"ws\");\n    // @ts-ignore : global\n    if (!global.WebSocket)\n        global.WebSocket = WebSocket;\n    // @ts-ignore : global\n    if (!global.crypto)\n        global.crypto = new Crypto();\n    // @ts-ignore : global\n    if (!global.fetch)\n        global.fetch = fetch.default;\n    // @ts-ignore : global\n    if (!global.Headers)\n        global.Headers = fetch.Headers;\n    // @ts-ignore : global\n    if (!global.Request)\n        global.Request = fetch.Request;\n    // @ts-ignore : global\n    if (!global.Response)\n        global.Response = fetch.Response;\n}\nasync function importForEnvironmentCore() {\n    try {\n        if (isNode) {\n            return (await import(\n            /* webpackIgnore: true */\n            \"./wasm_modules/cardano_multiplatform_lib_nodejs/cardano_multiplatform_lib.js\"));\n        }\n        const pkg = await __webpack_require__.e(/*! import() */ \"node_modules_lucid-cardano_esm_src_core_wasm_modules_cardano_multiplatform_lib_web_cardano_mu-fba2d0\").then(__webpack_require__.bind(__webpack_require__, /*! ./wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib.js */ \"./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib.js\"));\n        await pkg.default(await fetch(/* asset import */ new __webpack_require__.U(__webpack_require__(/*! ./wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib_bg.wasm */ \"./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_multiplatform_lib_web/cardano_multiplatform_lib_bg.wasm\"))));\n        return pkg;\n    }\n    catch (_e) {\n        // This only ever happens during SSR rendering\n        return null;\n    }\n}\nasync function importForEnvironmentMessage() {\n    try {\n        if (isNode) {\n            return (await import(\n            /* webpackIgnore: true */\n            \"./wasm_modules/cardano_message_signing_nodejs/cardano_message_signing.js\"));\n        }\n        const pkg = await __webpack_require__.e(/*! import() */ \"node_modules_lucid-cardano_esm_src_core_wasm_modules_cardano_message_signing_web_cardano_mess-8140ad\").then(__webpack_require__.bind(__webpack_require__, /*! ./wasm_modules/cardano_message_signing_web/cardano_message_signing.js */ \"./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_message_signing_web/cardano_message_signing.js\"));\n        await pkg.default(await fetch(/* asset import */ new __webpack_require__.U(__webpack_require__(/*! ./wasm_modules/cardano_message_signing_web/cardano_message_signing_bg.wasm */ \"./node_modules/lucid-cardano/esm/src/core/wasm_modules/cardano_message_signing_web/cardano_message_signing_bg.wasm\"))));\n        return pkg;\n    }\n    catch (_e) {\n        // This only ever happens during SSR rendering\n        return null;\n    }\n}\nconst C = (await importForEnvironmentCore());\nconst M = (await importForEnvironmentMessage());\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2NvcmUvY29yZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsdVlBQW1GO0FBQzdHLHNDQUFzQyxpUkFBMEc7QUFDaEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwrWEFBK0U7QUFDekcsc0NBQXNDLHlRQUFzRztBQUM1STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3NyYy9jb3JlL2NvcmUuanM/NGE4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkbnQtc2hpbS1pZ25vcmVcbmNvbnN0IGlzTm9kZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCI7XG5pZiAoaXNOb2RlKSB7XG4gICAgY29uc3QgZmV0Y2ggPSBhd2FpdCBpbXBvcnQoLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqLyBcIm5vZGUtZmV0Y2hcIik7XG4gICAgY29uc3QgeyBDcnlwdG8gfSA9IGF3YWl0IGltcG9ydChcbiAgICAvKiB3ZWJwYWNrSWdub3JlOiB0cnVlICovIFwiQHBlY3VsaWFyL3dlYmNyeXB0b1wiKTtcbiAgICBjb25zdCB7IFdlYlNvY2tldCB9ID0gYXdhaXQgaW1wb3J0KFxuICAgIC8qIHdlYnBhY2tJZ25vcmU6IHRydWUgKi8gXCJ3c1wiKTtcbiAgICAvLyBAdHMtaWdub3JlIDogZ2xvYmFsXG4gICAgaWYgKCFnbG9iYWwuV2ViU29ja2V0KVxuICAgICAgICBnbG9iYWwuV2ViU29ja2V0ID0gV2ViU29ja2V0O1xuICAgIC8vIEB0cy1pZ25vcmUgOiBnbG9iYWxcbiAgICBpZiAoIWdsb2JhbC5jcnlwdG8pXG4gICAgICAgIGdsb2JhbC5jcnlwdG8gPSBuZXcgQ3J5cHRvKCk7XG4gICAgLy8gQHRzLWlnbm9yZSA6IGdsb2JhbFxuICAgIGlmICghZ2xvYmFsLmZldGNoKVxuICAgICAgICBnbG9iYWwuZmV0Y2ggPSBmZXRjaC5kZWZhdWx0O1xuICAgIC8vIEB0cy1pZ25vcmUgOiBnbG9iYWxcbiAgICBpZiAoIWdsb2JhbC5IZWFkZXJzKVxuICAgICAgICBnbG9iYWwuSGVhZGVycyA9IGZldGNoLkhlYWRlcnM7XG4gICAgLy8gQHRzLWlnbm9yZSA6IGdsb2JhbFxuICAgIGlmICghZ2xvYmFsLlJlcXVlc3QpXG4gICAgICAgIGdsb2JhbC5SZXF1ZXN0ID0gZmV0Y2guUmVxdWVzdDtcbiAgICAvLyBAdHMtaWdub3JlIDogZ2xvYmFsXG4gICAgaWYgKCFnbG9iYWwuUmVzcG9uc2UpXG4gICAgICAgIGdsb2JhbC5SZXNwb25zZSA9IGZldGNoLlJlc3BvbnNlO1xufVxuYXN5bmMgZnVuY3Rpb24gaW1wb3J0Rm9yRW52aXJvbm1lbnRDb3JlKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiAoYXdhaXQgaW1wb3J0KFxuICAgICAgICAgICAgLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqL1xuICAgICAgICAgICAgXCIuL3dhc21fbW9kdWxlcy9jYXJkYW5vX211bHRpcGxhdGZvcm1fbGliX25vZGVqcy9jYXJkYW5vX211bHRpcGxhdGZvcm1fbGliLmpzXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwa2cgPSBhd2FpdCBpbXBvcnQoXCIuL3dhc21fbW9kdWxlcy9jYXJkYW5vX211bHRpcGxhdGZvcm1fbGliX3dlYi9jYXJkYW5vX211bHRpcGxhdGZvcm1fbGliLmpzXCIpO1xuICAgICAgICBhd2FpdCBwa2cuZGVmYXVsdChhd2FpdCBmZXRjaChuZXcgVVJMKFwiLi93YXNtX21vZHVsZXMvY2FyZGFub19tdWx0aXBsYXRmb3JtX2xpYl93ZWIvY2FyZGFub19tdWx0aXBsYXRmb3JtX2xpYl9iZy53YXNtXCIsIGltcG9ydC5tZXRhLnVybCkpKTtcbiAgICAgICAgcmV0dXJuIHBrZztcbiAgICB9XG4gICAgY2F0Y2ggKF9lKSB7XG4gICAgICAgIC8vIFRoaXMgb25seSBldmVyIGhhcHBlbnMgZHVyaW5nIFNTUiByZW5kZXJpbmdcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuYXN5bmMgZnVuY3Rpb24gaW1wb3J0Rm9yRW52aXJvbm1lbnRNZXNzYWdlKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiAoYXdhaXQgaW1wb3J0KFxuICAgICAgICAgICAgLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqL1xuICAgICAgICAgICAgXCIuL3dhc21fbW9kdWxlcy9jYXJkYW5vX21lc3NhZ2Vfc2lnbmluZ19ub2RlanMvY2FyZGFub19tZXNzYWdlX3NpZ25pbmcuanNcIikpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBrZyA9IGF3YWl0IGltcG9ydChcIi4vd2FzbV9tb2R1bGVzL2NhcmRhbm9fbWVzc2FnZV9zaWduaW5nX3dlYi9jYXJkYW5vX21lc3NhZ2Vfc2lnbmluZy5qc1wiKTtcbiAgICAgICAgYXdhaXQgcGtnLmRlZmF1bHQoYXdhaXQgZmV0Y2gobmV3IFVSTChcIi4vd2FzbV9tb2R1bGVzL2NhcmRhbm9fbWVzc2FnZV9zaWduaW5nX3dlYi9jYXJkYW5vX21lc3NhZ2Vfc2lnbmluZ19iZy53YXNtXCIsIGltcG9ydC5tZXRhLnVybCkpKTtcbiAgICAgICAgcmV0dXJuIHBrZztcbiAgICB9XG4gICAgY2F0Y2ggKF9lKSB7XG4gICAgICAgIC8vIFRoaXMgb25seSBldmVyIGhhcHBlbnMgZHVyaW5nIFNTUiByZW5kZXJpbmdcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IEMgPSAoYXdhaXQgaW1wb3J0Rm9yRW52aXJvbm1lbnRDb3JlKCkpO1xuZXhwb3J0IGNvbnN0IE0gPSAoYXdhaXQgaW1wb3J0Rm9yRW52aXJvbm1lbnRNZXNzYWdlKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/core/core.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/core/mod.js":
/*!********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/core/mod.js ***!
  \********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/lucid-cardano/esm/src/core/core.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_js__WEBPACK_IMPORTED_MODULE_0__]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _core_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _core_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2NvcmUvbW9kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZC1jYXJkYW5vL2VzbS9zcmMvY29yZS9tb2QuanM/ZWZmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb3JlLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/core/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/lucid.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/lucid.js ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Lucid\": function() { return /* binding */ Lucid; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\n/* harmony import */ var _tx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tx.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx.js\");\n/* harmony import */ var _tx_complete_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tx_complete.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js\");\n/* harmony import */ var _misc_wallet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../misc/wallet.js */ \"./node_modules/lucid-cardano/esm/src/misc/wallet.js\");\n/* harmony import */ var _misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../misc/sign_data.js */ \"./node_modules/lucid-cardano/esm/src/misc/sign_data.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./message.js */ \"./node_modules/lucid-cardano/esm/src/lucid/message.js\");\n/* harmony import */ var _plutus_time_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../plutus/time.js */ \"./node_modules/lucid-cardano/esm/src/plutus/time.js\");\n/* harmony import */ var _plutus_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../plutus/data.js */ \"./node_modules/lucid-cardano/esm/src/plutus/data.js\");\n/* harmony import */ var _provider_emulator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../provider/emulator.js */ \"./node_modules/lucid-cardano/esm/src/provider/emulator.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _tx_js__WEBPACK_IMPORTED_MODULE_2__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_3__, _misc_wallet_js__WEBPACK_IMPORTED_MODULE_4__, _misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__, _message_js__WEBPACK_IMPORTED_MODULE_6__, _plutus_data_js__WEBPACK_IMPORTED_MODULE_8__, _provider_emulator_js__WEBPACK_IMPORTED_MODULE_9__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _tx_js__WEBPACK_IMPORTED_MODULE_2__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_3__, _misc_wallet_js__WEBPACK_IMPORTED_MODULE_4__, _misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__, _message_js__WEBPACK_IMPORTED_MODULE_6__, _plutus_data_js__WEBPACK_IMPORTED_MODULE_8__, _provider_emulator_js__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\nclass Lucid {\n    constructor() {\n        Object.defineProperty(this, \"txBuilderConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wallet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"provider\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"network\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Mainnet\"\n        });\n        Object.defineProperty(this, \"utils\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    static async new(provider, network) {\n        const lucid = new this();\n        if (network)\n            lucid.network = network;\n        if (provider) {\n            lucid.provider = provider;\n            const protocolParameters = await provider.getProtocolParameters();\n            if (lucid.provider instanceof _provider_emulator_js__WEBPACK_IMPORTED_MODULE_9__.Emulator) {\n                lucid.network = \"Custom\";\n                _plutus_time_js__WEBPACK_IMPORTED_MODULE_7__.SLOT_CONFIG_NETWORK[lucid.network] = {\n                    zeroTime: lucid.provider.now(),\n                    zeroSlot: 0,\n                    slotLength: 1000,\n                };\n            }\n            const slotConfig = _plutus_time_js__WEBPACK_IMPORTED_MODULE_7__.SLOT_CONFIG_NETWORK[lucid.network];\n            lucid.txBuilderConfig = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionBuilderConfigBuilder[\"new\"]()\n                .coins_per_utxo_byte(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.coinsPerUtxoByte.toString()))\n                .fee_algo(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.LinearFee[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.minFeeA.toString()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.minFeeB.toString())))\n                .key_deposit(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.keyDeposit.toString()))\n                .pool_deposit(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.poolDeposit.toString()))\n                .max_tx_size(protocolParameters.maxTxSize)\n                .max_value_size(protocolParameters.maxValSize)\n                .collateral_percentage(protocolParameters.collateralPercentage)\n                .max_collateral_inputs(protocolParameters.maxCollateralInputs)\n                .max_tx_ex_units(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ExUnits[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.maxTxExMem.toString()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(protocolParameters.maxTxExSteps.toString())))\n                .ex_unit_prices(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ExUnitPrices.from_float(protocolParameters.priceMem, protocolParameters.priceStep))\n                .slot_config(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(slotConfig.zeroTime.toString()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(slotConfig.zeroSlot.toString()), slotConfig.slotLength)\n                .blockfrost(\n            // We have Aiken now as native plutus core engine (primary), but we still support blockfrost (secondary) in case of bugs.\n            _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Blockfrost[\"new\"](\n            // deno-lint-ignore no-explicit-any\n            (provider?.url || \"\") + \"/utils/txs/evaluate\", \n            // deno-lint-ignore no-explicit-any\n            provider?.projectId || \"\"))\n                .costmdls((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.createCostModels)(protocolParameters.costModels))\n                .build();\n        }\n        lucid.utils = new _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.Utils(lucid);\n        return lucid;\n    }\n    /**\n     * Switch provider and/or network.\n     * If provider or network unset, no overwriting happens. Provider or network from current instance are taken then.\n     */\n    async switchProvider(provider, network) {\n        if (this.network === \"Custom\") {\n            throw new Error(\"Cannot switch when on custom network.\");\n        }\n        const lucid = await Lucid.new(provider, network);\n        this.txBuilderConfig = lucid.txBuilderConfig;\n        this.provider = provider || this.provider;\n        this.network = network || this.network;\n        this.wallet = lucid.wallet;\n        return this;\n    }\n    newTx() {\n        return new _tx_js__WEBPACK_IMPORTED_MODULE_2__.Tx(this);\n    }\n    fromTx(tx) {\n        return new _tx_complete_js__WEBPACK_IMPORTED_MODULE_3__.TxComplete(this, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Transaction.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(tx)));\n    }\n    /** Signs a message. Expects the payload to be Hex encoded. */\n    newMessage(address, payload) {\n        return new _message_js__WEBPACK_IMPORTED_MODULE_6__.Message(this, address, payload);\n    }\n    /** Verify a message. Expects the payload to be Hex encoded. */\n    verifyMessage(address, payload, signedMessage) {\n        const { paymentCredential, stakeCredential, address: { hex: addressHex } } = this.utils.getAddressDetails(address);\n        const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n        if (!keyHash)\n            throw new Error(\"Not a valid address provided.\");\n        return (0,_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__.verifyData)(addressHex, keyHash, payload, signedMessage);\n    }\n    currentSlot() {\n        return this.utils.unixTimeToSlot(Date.now());\n    }\n    utxosAt(addressOrCredential) {\n        return this.provider.getUtxos(addressOrCredential);\n    }\n    utxosAtWithUnit(addressOrCredential, unit) {\n        return this.provider.getUtxosWithUnit(addressOrCredential, unit);\n    }\n    /** Unit needs to be an NFT (or optionally the entire supply in one UTxO). */\n    utxoByUnit(unit) {\n        return this.provider.getUtxoByUnit(unit);\n    }\n    utxosByOutRef(outRefs) {\n        return this.provider.getUtxosByOutRef(outRefs);\n    }\n    delegationAt(rewardAddress) {\n        return this.provider.getDelegation(rewardAddress);\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return this.provider.awaitTx(txHash, checkInterval);\n    }\n    async datumOf(utxo, shape) {\n        if (!utxo.datum) {\n            if (!utxo.datumHash) {\n                throw new Error(\"This UTxO does not have a datum hash.\");\n            }\n            utxo.datum = await this.provider.getDatum(utxo.datumHash);\n        }\n        return shape ? _plutus_data_js__WEBPACK_IMPORTED_MODULE_8__.Data.from(utxo.datum, shape) : utxo.datum;\n    }\n    /**\n     * Cardano Private key in bech32; not the BIP32 private key or any key that is not fully derived.\n     * Only an Enteprise address (without stake credential) is derived.\n     */\n    selectWalletFromPrivateKey(privateKey) {\n        const priv = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(privateKey);\n        const pubKeyHash = priv.to_public().hash();\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.EnterpriseAddress[\"new\"](this.network === \"Mainnet\" ? 1 : 0, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(pubKeyHash))\n                .to_address()\n                .to_bech32(undefined),\n            // deno-lint-ignore require-await\n            rewardAddress: async () => null,\n            getUtxos: async () => {\n                return await this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(await this.wallet.address()));\n            },\n            getUtxosCore: async () => {\n                const utxos = await this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(await this.wallet.address()));\n                const coreUtxos = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutputs[\"new\"]();\n                utxos.forEach((utxo) => {\n                    coreUtxos.add((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.utxoToCore)(utxo));\n                });\n                return coreUtxos;\n            },\n            // deno-lint-ignore require-await\n            getDelegation: async () => {\n                return { poolId: null, rewards: 0n };\n            },\n            // deno-lint-ignore require-await\n            signTx: async (tx) => {\n                const witness = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.make_vkey_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(tx.body()), priv);\n                const txWitnessSetBuilder = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSetBuilder[\"new\"]();\n                txWitnessSetBuilder.add_vkey(witness);\n                return txWitnessSetBuilder.build();\n            },\n            // deno-lint-ignore require-await\n            signMessage: async (address, payload) => {\n                const { paymentCredential, address: { hex: hexAddress } } = this.utils\n                    .getAddressDetails(address);\n                const keyHash = paymentCredential?.hash;\n                const originalKeyHash = pubKeyHash.to_hex();\n                if (!keyHash || keyHash !== originalKeyHash) {\n                    throw new Error(`Cannot sign message for address: ${address}.`);\n                }\n                return (0,_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__.signData)(hexAddress, payload, privateKey);\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n    selectWallet(api) {\n        const getAddressHex = async () => {\n            const [addressHex] = await api.getUsedAddresses();\n            if (addressHex)\n                return addressHex;\n            const [unusedAddressHex] = await api.getUnusedAddresses();\n            return unusedAddressHex;\n        };\n        this.wallet = {\n            address: async () => _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Address.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(await getAddressHex())).to_bech32(undefined),\n            rewardAddress: async () => {\n                const [rewardAddressHex] = await api.getRewardAddresses();\n                const rewardAddress = rewardAddressHex\n                    ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress.from_address(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Address.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(rewardAddressHex)))\n                        .to_address()\n                        .to_bech32(undefined)\n                    : null;\n                return rewardAddress;\n            },\n            getUtxos: async () => {\n                const utxos = ((await api.getUtxos()) || []).map((utxo) => {\n                    const parsedUtxo = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutput.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(utxo));\n                    return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.coreToUtxo)(parsedUtxo);\n                });\n                return utxos;\n            },\n            getUtxosCore: async () => {\n                const utxos = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutputs[\"new\"]();\n                ((await api.getUtxos()) || []).forEach((utxo) => {\n                    utxos.add(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutput.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(utxo)));\n                });\n                return utxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            signTx: async (tx) => {\n                const witnessSet = await api.signTx((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(tx.to_bytes()), true);\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSet.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(witnessSet));\n            },\n            signMessage: async (address, payload) => {\n                const hexAddress = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Address.from_bech32(address).to_bytes());\n                return await api.signData(hexAddress, payload);\n            },\n            submitTx: async (tx) => {\n                const txHash = await api.submitTx(tx);\n                return txHash;\n            },\n        };\n        return this;\n    }\n    /**\n     * Emulates a wallet by constructing it with the utxos and an address.\n     * If utxos are not set, utxos are fetched from the provided address.\n     */\n    selectWalletFrom({ address, utxos, rewardAddress, }) {\n        const addressDetails = this.utils.getAddressDetails(address);\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => address,\n            // deno-lint-ignore require-await\n            rewardAddress: async () => {\n                const rewardAddr = !rewardAddress && addressDetails.stakeCredential\n                    ? (() => {\n                        if (addressDetails.stakeCredential.type === \"Key\") {\n                            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](this.network === \"Mainnet\" ? 1 : 0, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_hex(addressDetails.stakeCredential.hash)))\n                                .to_address()\n                                .to_bech32(undefined);\n                        }\n                        return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](this.network === \"Mainnet\" ? 1 : 0, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_hex(addressDetails.stakeCredential.hash)))\n                            .to_address()\n                            .to_bech32(undefined);\n                    })()\n                    : rewardAddress;\n                return rewardAddr || null;\n            },\n            getUtxos: async () => {\n                return utxos ? utxos : await this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(address));\n            },\n            getUtxosCore: async () => {\n                const coreUtxos = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutputs[\"new\"]();\n                (utxos ? utxos : await this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(address)))\n                    .forEach((utxo) => coreUtxos.add((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.utxoToCore)(utxo)));\n                return coreUtxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            // deno-lint-ignore require-await\n            signTx: async () => {\n                throw new Error(\"Not implemented\");\n            },\n            // deno-lint-ignore require-await\n            signMessage: async () => {\n                throw new Error(\"Not implemented\");\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n    /**\n     * Select wallet from a seed phrase (e.g. 15 or 24 words). You have the option to choose between a Base address (with stake credential)\n     * and Enterprise address (without stake credential). You can also decide which account index to derive. By default account 0 is derived.\n     */\n    selectWalletFromSeed(seed, options) {\n        const { address, rewardAddress, paymentKey, stakeKey } = (0,_misc_wallet_js__WEBPACK_IMPORTED_MODULE_4__.walletFromSeed)(seed, {\n            addressType: options?.addressType || \"Base\",\n            accountIndex: options?.accountIndex || 0,\n            password: options?.password,\n            network: this.network,\n        });\n        const paymentKeyHash = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(paymentKey).to_public()\n            .hash().to_hex();\n        const stakeKeyHash = stakeKey\n            ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(stakeKey).to_public().hash().to_hex()\n            : \"\";\n        const privKeyHashMap = {\n            [paymentKeyHash]: paymentKey,\n            [stakeKeyHash]: stakeKey,\n        };\n        this.wallet = {\n            // deno-lint-ignore require-await\n            address: async () => address,\n            // deno-lint-ignore require-await\n            rewardAddress: async () => rewardAddress || null,\n            // deno-lint-ignore require-await\n            getUtxos: async () => this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(address)),\n            getUtxosCore: async () => {\n                const coreUtxos = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutputs[\"new\"]();\n                (await this.utxosAt((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.paymentCredentialOf)(address))).forEach((utxo) => coreUtxos.add((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.utxoToCore)(utxo)));\n                return coreUtxos;\n            },\n            getDelegation: async () => {\n                const rewardAddr = await this.wallet.rewardAddress();\n                return rewardAddr\n                    ? await this.delegationAt(rewardAddr)\n                    : { poolId: null, rewards: 0n };\n            },\n            signTx: async (tx) => {\n                const utxos = await this.utxosAt(address);\n                const ownKeyHashes = [paymentKeyHash, stakeKeyHash];\n                const usedKeyHashes = (0,_misc_wallet_js__WEBPACK_IMPORTED_MODULE_4__.discoverOwnUsedTxKeyHashes)(tx, ownKeyHashes, utxos);\n                const txWitnessSetBuilder = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSetBuilder[\"new\"]();\n                usedKeyHashes.forEach((keyHash) => {\n                    const witness = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.make_vkey_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(tx.body()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(privKeyHashMap[keyHash]));\n                    txWitnessSetBuilder.add_vkey(witness);\n                });\n                return txWitnessSetBuilder.build();\n            },\n            // deno-lint-ignore require-await\n            signMessage: async (address, payload) => {\n                const { paymentCredential, stakeCredential, address: { hex: hexAddress }, } = this.utils\n                    .getAddressDetails(address);\n                const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n                const privateKey = privKeyHashMap[keyHash];\n                if (!privateKey) {\n                    throw new Error(`Cannot sign message for address: ${address}.`);\n                }\n                return (0,_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_5__.signData)(hexAddress, payload, privateKey);\n            },\n            submitTx: async (tx) => {\n                return await this.provider.submitTx(tx);\n            },\n        };\n        return this;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/lucid.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/message.js":
/*!*************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/message.js ***!
  \*************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Message\": function() { return /* binding */ Message; }\n/* harmony export */ });\n/* harmony import */ var _misc_sign_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/sign_data.js */ \"./node_modules/lucid-cardano/esm/src/misc/sign_data.js\");\n/* harmony import */ var _mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mod.js */ \"./node_modules/lucid-cardano/esm/src/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_0__, _mod_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_0__, _mod_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass Message {\n    constructor(lucid, address, payload) {\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"address\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"payload\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.address = address;\n        this.payload = payload;\n    }\n    /** Sign message with selected wallet. */\n    sign() {\n        return this.lucid.wallet.signMessage(this.address, this.payload);\n    }\n    /** Sign message with a separate private key. */\n    signWithPrivateKey(privateKey) {\n        const { paymentCredential, stakeCredential, address: { hex: hexAddress } } = this.lucid.utils.getAddressDetails(this.address);\n        const keyHash = paymentCredential?.hash || stakeCredential?.hash;\n        const keyHashOriginal = _mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PrivateKey.from_bech32(privateKey).to_public()\n            .hash().to_hex();\n        if (!keyHash || keyHash !== keyHashOriginal) {\n            throw new Error(`Cannot sign message for address: ${this.address}.`);\n        }\n        return (0,_misc_sign_data_js__WEBPACK_IMPORTED_MODULE_0__.signData)(hexAddress, this.payload, privateKey);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL21lc3NhZ2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdEO0FBQ2xCO0FBQ3ZCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrQ0FBK0Msb0JBQW9CO0FBQ25GO0FBQ0EsZ0NBQWdDLDZEQUF3QjtBQUN4RDtBQUNBO0FBQ0EsZ0VBQWdFLGFBQWE7QUFDN0U7QUFDQSxlQUFlLDREQUFRO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3NyYy9sdWNpZC9tZXNzYWdlLmpzPzYwYTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2lnbkRhdGEgfSBmcm9tIFwiLi4vbWlzYy9zaWduX2RhdGEuanNcIjtcbmltcG9ydCB7IEMgfSBmcm9tIFwiLi4vbW9kLmpzXCI7XG5leHBvcnQgY2xhc3MgTWVzc2FnZSB7XG4gICAgY29uc3RydWN0b3IobHVjaWQsIGFkZHJlc3MsIHBheWxvYWQpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibHVjaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYWRkcmVzc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwYXlsb2FkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubHVjaWQgPSBsdWNpZDtcbiAgICAgICAgdGhpcy5hZGRyZXNzID0gYWRkcmVzcztcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG4gICAgLyoqIFNpZ24gbWVzc2FnZSB3aXRoIHNlbGVjdGVkIHdhbGxldC4gKi9cbiAgICBzaWduKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sdWNpZC53YWxsZXQuc2lnbk1lc3NhZ2UodGhpcy5hZGRyZXNzLCB0aGlzLnBheWxvYWQpO1xuICAgIH1cbiAgICAvKiogU2lnbiBtZXNzYWdlIHdpdGggYSBzZXBhcmF0ZSBwcml2YXRlIGtleS4gKi9cbiAgICBzaWduV2l0aFByaXZhdGVLZXkocHJpdmF0ZUtleSkge1xuICAgICAgICBjb25zdCB7IHBheW1lbnRDcmVkZW50aWFsLCBzdGFrZUNyZWRlbnRpYWwsIGFkZHJlc3M6IHsgaGV4OiBoZXhBZGRyZXNzIH0gfSA9IHRoaXMubHVjaWQudXRpbHMuZ2V0QWRkcmVzc0RldGFpbHModGhpcy5hZGRyZXNzKTtcbiAgICAgICAgY29uc3Qga2V5SGFzaCA9IHBheW1lbnRDcmVkZW50aWFsPy5oYXNoIHx8IHN0YWtlQ3JlZGVudGlhbD8uaGFzaDtcbiAgICAgICAgY29uc3Qga2V5SGFzaE9yaWdpbmFsID0gQy5Qcml2YXRlS2V5LmZyb21fYmVjaDMyKHByaXZhdGVLZXkpLnRvX3B1YmxpYygpXG4gICAgICAgICAgICAuaGFzaCgpLnRvX2hleCgpO1xuICAgICAgICBpZiAoIWtleUhhc2ggfHwga2V5SGFzaCAhPT0ga2V5SGFzaE9yaWdpbmFsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBzaWduIG1lc3NhZ2UgZm9yIGFkZHJlc3M6ICR7dGhpcy5hZGRyZXNzfS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2lnbkRhdGEoaGV4QWRkcmVzcywgdGhpcy5wYXlsb2FkLCBwcml2YXRlS2V5KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/message.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/mod.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/mod.js ***!
  \*********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lucid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lucid.js */ \"./node_modules/lucid-cardano/esm/src/lucid/lucid.js\");\n/* harmony import */ var _tx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tx.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx.js\");\n/* harmony import */ var _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tx_complete.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js\");\n/* harmony import */ var _tx_signed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tx_signed.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lucid_js__WEBPACK_IMPORTED_MODULE_0__, _tx_js__WEBPACK_IMPORTED_MODULE_1__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__, _tx_signed_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_lucid_js__WEBPACK_IMPORTED_MODULE_0__, _tx_js__WEBPACK_IMPORTED_MODULE_1__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__, _tx_signed_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lucid_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lucid_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tx_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _tx_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tx_signed_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _tx_signed_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL21vZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQjtBQUNIO0FBQ1M7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL21vZC5qcz81NmRkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2x1Y2lkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90eC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHhfY29tcGxldGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R4X3NpZ25lZC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/tx.js":
/*!********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/tx.js ***!
  \********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tx\": function() { return /* binding */ Tx; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\n/* harmony import */ var _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tx_complete.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass Tx {\n    constructor(lucid) {\n        Object.defineProperty(this, \"txBuilder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Stores the tx instructions, which get executed after calling .complete() */\n        Object.defineProperty(this, \"tasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.txBuilder = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionBuilder[\"new\"](this.lucid.txBuilderConfig);\n        this.tasks = [];\n    }\n    /** Read data from utxos. These utxos are only referenced and not spent. */\n    readFrom(utxos) {\n        this.tasks.push(async (that) => {\n            for (const utxo of utxos) {\n                if (utxo.datumHash) {\n                    utxo.datum = await that.lucid.datumOf(utxo);\n                    // Add datum to witness set, so it can be read from validators\n                    const plutusData = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(utxo.datum));\n                    that.txBuilder.add_plutus_data(plutusData);\n                }\n                const coreUtxo = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.utxoToCore)(utxo);\n                that.txBuilder.add_reference_input(coreUtxo);\n            }\n        });\n        return this;\n    }\n    /**\n     * A public key or native script input.\n     * With redeemer it's a plutus script input.\n     */\n    collectFrom(utxos, redeemer) {\n        this.tasks.push(async (that) => {\n            for (const utxo of utxos) {\n                if (utxo.datumHash && !utxo.datum) {\n                    utxo.datum = await that.lucid.datumOf(utxo);\n                }\n                const coreUtxo = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.utxoToCore)(utxo);\n                that.txBuilder.add_input(coreUtxo, redeemer &&\n                    _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptWitness.new_plutus_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusWitness[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(redeemer)), utxo.datumHash && utxo.datum\n                        ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(utxo.datum))\n                        : undefined, undefined)));\n            }\n        });\n        return this;\n    }\n    /**\n     * All assets should be of the same policy id.\n     * You can chain mintAssets functions together if you need to mint assets with different policy ids.\n     * If the plutus script doesn't need a redeemer, you still need to specifiy the empty redeemer.\n     */\n    mintAssets(assets, redeemer) {\n        this.tasks.push((that) => {\n            const units = Object.keys(assets);\n            const policyId = units[0].slice(0, 56);\n            const mintAssets = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.MintAssets[\"new\"]();\n            units.forEach((unit) => {\n                if (unit.slice(0, 56) !== policyId) {\n                    throw new Error(\"Only one Policy Id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different Policy Ids.\");\n                }\n                mintAssets.insert(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.AssetName[\"new\"]((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(unit.slice(56))), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Int.from_str(assets[unit].toString()));\n            });\n            const scriptHash = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(policyId));\n            that.txBuilder.add_mint(scriptHash, mintAssets, redeemer\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptWitness.new_plutus_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusWitness[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Pay to a public key or native script address. */\n    payToAddress(address, assets) {\n        this.tasks.push((that) => {\n            const output = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionOutput[\"new\"](addressFromWithNetworkCheck(address, that.lucid), (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.assetsToValue)(assets));\n            that.txBuilder.add_output(output);\n        });\n        return this;\n    }\n    /** Pay to a public key or native script address with datum or scriptRef. */\n    payToAddressWithData(address, outputData, assets) {\n        this.tasks.push((that) => {\n            if (typeof outputData === \"string\") {\n                outputData = { asHash: outputData };\n            }\n            if ([outputData.hash, outputData.asHash, outputData.inline].filter((b) => b)\n                .length > 1) {\n                throw new Error(\"Not allowed to set hash, asHash and inline at the same time.\");\n            }\n            const output = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionOutput[\"new\"](addressFromWithNetworkCheck(address, that.lucid), (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.assetsToValue)(assets));\n            if (outputData.hash) {\n                output.set_datum(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data_hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.DataHash.from_hex(outputData.hash)));\n            }\n            else if (outputData.asHash) {\n                const plutusData = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(outputData.asHash));\n                output.set_datum(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data_hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_plutus_data(plutusData)));\n                that.txBuilder.add_plutus_data(plutusData);\n            }\n            else if (outputData.inline) {\n                const plutusData = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(outputData.inline));\n                output.set_datum(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Data[\"new\"](plutusData)));\n            }\n            const script = outputData.scriptRef;\n            if (script) {\n                output.set_script_ref((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toScriptRef)(script));\n            }\n            that.txBuilder.add_output(output);\n        });\n        return this;\n    }\n    /** Pay to a plutus script address with datum or scriptRef. */\n    payToContract(address, outputData, assets) {\n        if (typeof outputData === \"string\") {\n            outputData = { asHash: outputData };\n        }\n        if (!(outputData.hash || outputData.asHash || outputData.inline)) {\n            throw new Error(\"No datum set. Script output becomes unspendable without datum.\");\n        }\n        return this.payToAddressWithData(address, outputData, assets);\n    }\n    /** Delegate to a stake pool. */\n    delegateTo(rewardAddress, poolId, redeemer) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_stake_delegation(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeDelegation[\"new\"](credential, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bech32(poolId))), redeemer\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptWitness.new_plutus_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusWitness[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Register a reward address in order to delegate to a pool and receive rewards. */\n    registerStake(rewardAddress) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_stake_registration(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeRegistration[\"new\"](credential)), undefined);\n        });\n        return this;\n    }\n    /** Deregister a reward address. */\n    deregisterStake(rewardAddress, redeemer) {\n        this.tasks.push((that) => {\n            const addressDetails = that.lucid.utils.getAddressDetails(rewardAddress);\n            if (addressDetails.type !== \"Reward\" ||\n                !addressDetails.stakeCredential) {\n                throw new Error(\"Not a reward address provided.\");\n            }\n            const credential = addressDetails.stakeCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(addressDetails.stakeCredential.hash)));\n            that.txBuilder.add_certificate(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_stake_deregistration(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeDeregistration[\"new\"](credential)), redeemer\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptWitness.new_plutus_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusWitness[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /** Register a stake pool. A pool deposit is required. The metadataUrl needs to be hosted already before making the registration. */\n    registerPool(poolParams) {\n        this.tasks.push(async (that) => {\n            const poolRegistration = await createPoolRegistration(poolParams, that.lucid);\n            const certificate = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_pool_registration(poolRegistration);\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    /** Update a stake pool. No pool deposit is required. The metadataUrl needs to be hosted already before making the update. */\n    updatePool(poolParams) {\n        this.tasks.push(async (that) => {\n            const poolRegistration = await createPoolRegistration(poolParams, that.lucid);\n            // This flag makes sure a pool deposit is not required\n            poolRegistration.set_is_update(true);\n            const certificate = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_pool_registration(poolRegistration);\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    /**\n     * Retire a stake pool. The epoch needs to be the greater than the current epoch + 1 and less than current epoch + eMax.\n     * The pool deposit will be sent to reward address as reward after full retirement of the pool.\n     */\n    retirePool(poolId, epoch) {\n        this.tasks.push((that) => {\n            const certificate = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Certificate.new_pool_retirement(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PoolRetirement[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bech32(poolId), epoch));\n            that.txBuilder.add_certificate(certificate, undefined);\n        });\n        return this;\n    }\n    withdraw(rewardAddress, amount, redeemer) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_withdrawal(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress.from_address(addressFromWithNetworkCheck(rewardAddress, that.lucid)), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(amount.toString()), redeemer\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptWitness.new_plutus_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusWitness[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(redeemer)), undefined, undefined))\n                : undefined);\n        });\n        return this;\n    }\n    /**\n     * Needs to be a public key address.\n     * The PaymentKeyHash is taken when providing a Base, Enterprise or Pointer address.\n     * The StakeKeyHash is taken when providing a Reward address.\n     */\n    addSigner(address) {\n        const addressDetails = this.lucid.utils.getAddressDetails(address);\n        if (!addressDetails.paymentCredential && !addressDetails.stakeCredential) {\n            throw new Error(\"Not a valid address.\");\n        }\n        const credential = addressDetails.type === \"Reward\"\n            ? addressDetails.stakeCredential\n            : addressDetails.paymentCredential;\n        if (credential.type === \"Script\") {\n            throw new Error(\"Only key hashes are allowed as signers.\");\n        }\n        return this.addSignerKey(credential.hash);\n    }\n    /** Add a payment or stake key hash as a required signer of the transaction. */\n    addSignerKey(keyHash) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_required_signer(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(keyHash)));\n        });\n        return this;\n    }\n    validFrom(unixTime) {\n        this.tasks.push((that) => {\n            const slot = that.lucid.utils.unixTimeToSlot(unixTime);\n            that.txBuilder.set_validity_start_interval(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(slot.toString()));\n        });\n        return this;\n    }\n    validTo(unixTime) {\n        this.tasks.push((that) => {\n            const slot = that.lucid.utils.unixTimeToSlot(unixTime);\n            that.txBuilder.set_ttl(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(slot.toString()));\n        });\n        return this;\n    }\n    attachMetadata(label, metadata) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_json_metadatum(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(label.toString()), JSON.stringify(metadata));\n        });\n        return this;\n    }\n    /** Converts strings to bytes if prefixed with **'0x'**. */\n    attachMetadataWithConversion(label, metadata) {\n        this.tasks.push((that) => {\n            that.txBuilder.add_json_metadatum_with_schema(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(label.toString()), JSON.stringify(metadata), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.MetadataJsonSchema.BasicConversions);\n        });\n        return this;\n    }\n    attachSpendingValidator(spendingValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, spendingValidator);\n        });\n        return this;\n    }\n    attachMintingPolicy(mintingPolicy) {\n        this.tasks.push((that) => {\n            attachScript(that, mintingPolicy);\n        });\n        return this;\n    }\n    attachCertificateValidator(certValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, certValidator);\n        });\n        return this;\n    }\n    attachWithdrawalValidator(withdrawalValidator) {\n        this.tasks.push((that) => {\n            attachScript(that, withdrawalValidator);\n        });\n        return this;\n    }\n    /** Compose transactions. */\n    compose(tx) {\n        if (tx)\n            this.tasks = this.tasks.concat(tx.tasks);\n        return this;\n    }\n    async complete(options) {\n        if ([\n            options?.change?.outputData?.hash,\n            options?.change?.outputData?.asHash,\n            options?.change?.outputData?.inline,\n        ].filter((b) => b)\n            .length > 1) {\n            throw new Error(\"Not allowed to set hash, asHash and inline at the same time.\");\n        }\n        let task = this.tasks.shift();\n        while (task) {\n            await task(this);\n            task = this.tasks.shift();\n        }\n        const utxos = await this.lucid.wallet.getUtxosCore();\n        const changeAddress = addressFromWithNetworkCheck(options?.change?.address || (await this.lucid.wallet.address()), this.lucid);\n        if (options?.coinSelection || options?.coinSelection === undefined) {\n            this.txBuilder.add_inputs_from(utxos, changeAddress);\n        }\n        this.txBuilder.balance(changeAddress, (() => {\n            if (options?.change?.outputData?.hash) {\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data_hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.DataHash.from_hex(options.change.outputData.hash));\n            }\n            else if (options?.change?.outputData?.asHash) {\n                this.txBuilder.add_plutus_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(options.change.outputData.asHash)));\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data_hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_plutus_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(options.change.outputData.asHash))));\n            }\n            else if (options?.change?.outputData?.inline) {\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Datum.new_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Data[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(options.change.outputData.inline))));\n            }\n            else {\n                return undefined;\n            }\n        })());\n        return new _tx_complete_js__WEBPACK_IMPORTED_MODULE_2__.TxComplete(this.lucid, await this.txBuilder.construct(utxos, changeAddress, options?.nativeUplc === undefined ? true : options?.nativeUplc));\n    }\n    /** Return the current transaction body in Hex encoded Cbor. */\n    async toString() {\n        let task = this.tasks.shift();\n        while (task) {\n            await task(this);\n            task = this.tasks.shift();\n        }\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(this.txBuilder.to_bytes());\n    }\n}\nfunction attachScript(tx, script) {\n    if (script.type === \"Native\") {\n        return tx.txBuilder.add_native_script(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.NativeScript.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script.script)));\n    }\n    else if (script.type === \"PlutusV1\") {\n        return tx.txBuilder.add_plutus_script(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script.script)));\n    }\n    else if (script.type === \"PlutusV2\") {\n        return tx.txBuilder.add_plutus_v2_script(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script.script)));\n    }\n    throw new Error(\"No variant matched.\");\n}\nasync function createPoolRegistration(poolParams, lucid) {\n    const poolOwners = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHashes[\"new\"]();\n    poolParams.owners.forEach((owner) => {\n        const { stakeCredential } = lucid.utils.getAddressDetails(owner);\n        if (stakeCredential?.type === \"Key\") {\n            poolOwners.add(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_hex(stakeCredential.hash));\n        }\n        else\n            throw new Error(\"Only key hashes allowed for pool owners.\");\n    });\n    const metadata = poolParams.metadataUrl\n        ? await fetch(poolParams.metadataUrl)\n            .then((res) => res.arrayBuffer())\n        : null;\n    const metadataHash = metadata\n        ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PoolMetadataHash.from_bytes(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_blake2b256(new Uint8Array(metadata)))\n        : null;\n    const relays = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Relays[\"new\"]();\n    poolParams.relays.forEach((relay) => {\n        switch (relay.type) {\n            case \"SingleHostIp\": {\n                const ipV4 = relay.ipV4\n                    ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ipv4[\"new\"](new Uint8Array(relay.ipV4.split(\".\").map((b) => parseInt(b))))\n                    : undefined;\n                const ipV6 = relay.ipV6\n                    ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ipv6[\"new\"]((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(relay.ipV6.replaceAll(\":\", \"\")))\n                    : undefined;\n                relays.add(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Relay.new_single_host_addr(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.SingleHostAddr[\"new\"](relay.port, ipV4, ipV6)));\n                break;\n            }\n            case \"SingleHostDomainName\": {\n                relays.add(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Relay.new_single_host_name(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.SingleHostName[\"new\"](relay.port, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.DNSRecordAorAAAA[\"new\"](relay.domainName))));\n                break;\n            }\n            case \"MultiHost\": {\n                relays.add(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Relay.new_multi_host_name(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.MultiHostName[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.DNSRecordSRV[\"new\"](relay.domainName))));\n                break;\n            }\n        }\n    });\n    return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PoolRegistration[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PoolParams[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_bech32(poolParams.poolId), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.VRFKeyHash.from_hex(poolParams.vrfKeyHash), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(poolParams.pledge.toString()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(poolParams.cost.toString()), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.UnitInterval.from_float(poolParams.margin), _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress.from_address(addressFromWithNetworkCheck(poolParams.rewardAddress, lucid)), poolOwners, relays, metadataHash\n        ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PoolMetadata[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.URL[\"new\"](poolParams.metadataUrl), metadataHash)\n        : undefined));\n}\nfunction addressFromWithNetworkCheck(address, lucid) {\n    const addressDetails = lucid.utils.getAddressDetails(address);\n    const actualNetworkId = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.networkToId)(lucid.network);\n    if (addressDetails.networkId !== actualNetworkId) {\n        throw new Error(`Invalid address: Expected address with network id ${actualNetworkId}, but got ${addressDetails.networkId}`);\n    }\n    return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Address.from_bech32(address);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/tx.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js ***!
  \*****************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TxComplete\": function() { return /* binding */ TxComplete; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _tx_signed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tx_signed.js */ \"./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _tx_signed_js__WEBPACK_IMPORTED_MODULE_1__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _tx_signed_js__WEBPACK_IMPORTED_MODULE_1__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass TxComplete {\n    constructor(lucid, tx) {\n        Object.defineProperty(this, \"txComplete\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"witnessSetBuilder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.txComplete = tx;\n        this.witnessSetBuilder = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSetBuilder[\"new\"]();\n        this.tasks = [];\n    }\n    sign() {\n        this.tasks.push(async () => {\n            const witnesses = await this.lucid.wallet.signTx(this.txComplete);\n            this.witnessSetBuilder.add_existing(witnesses);\n        });\n        return this;\n    }\n    /** Add an extra signature from a private key. */\n    signWithPrivateKey(privateKey) {\n        const priv = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(privateKey);\n        const witness = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.make_vkey_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(this.txComplete.body()), priv);\n        this.witnessSetBuilder.add_vkey(witness);\n        return this;\n    }\n    /** Sign the transaction and return the witnesses that were just made. */\n    async partialSign() {\n        const witnesses = await this.lucid.wallet.signTx(this.txComplete);\n        this.witnessSetBuilder.add_existing(witnesses);\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(witnesses.to_bytes());\n    }\n    /**\n     * Sign the transaction and return the witnesses that were just made.\n     * Add an extra signature from a private key.\n     */\n    partialSignWithPrivateKey(privateKey) {\n        const priv = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(privateKey);\n        const witness = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.make_vkey_witness(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(this.txComplete.body()), priv);\n        this.witnessSetBuilder.add_vkey(witness);\n        const witnesses = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSetBuilder[\"new\"]();\n        witnesses.add_vkey(witness);\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(witnesses.build().to_bytes());\n    }\n    /** Sign the transaction with the given witnesses. */\n    assemble(witnesses) {\n        witnesses.forEach((witness) => {\n            const witnessParsed = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionWitnessSet.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(witness));\n            this.witnessSetBuilder.add_existing(witnessParsed);\n        });\n        return this;\n    }\n    async complete() {\n        for (const task of this.tasks) {\n            await task();\n        }\n        this.witnessSetBuilder.add_existing(this.txComplete.witness_set());\n        const signedTx = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Transaction[\"new\"](this.txComplete.body(), this.witnessSetBuilder.build(), this.txComplete.auxiliary_data());\n        return new _tx_signed_js__WEBPACK_IMPORTED_MODULE_1__.TxSigned(this.lucid, signedTx);\n    }\n    /** Return the transaction in Hex encoded Cbor. */\n    toString() {\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(this.txComplete.to_bytes());\n    }\n    /** Return the transaction hash. */\n    toHash() {\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(this.txComplete.body()).to_hex();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL3R4X2NvbXBsZXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUM7QUFDTztBQUNPO0FBQzFDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQ0FBaUMsK0VBQWtDO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrRUFBd0I7QUFDN0Msd0JBQXdCLDZEQUFtQixDQUFDLDREQUFrQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtFQUF3QjtBQUM3Qyx3QkFBd0IsNkRBQW1CLENBQUMsNERBQWtCO0FBQzlEO0FBQ0EsMEJBQTBCLCtFQUFrQztBQUM1RDtBQUNBLGVBQWUsb0RBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNEVBQWtDLENBQUMsc0RBQU87QUFDNUU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOERBQWlCO0FBQzFDLG1CQUFtQixtREFBUTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9EQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWtCO0FBQ2pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3NyYy9sdWNpZC90eF9jb21wbGV0ZS5qcz81Y2E5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEMgfSBmcm9tIFwiLi4vY29yZS9tb2QuanNcIjtcbmltcG9ydCB7IFR4U2lnbmVkIH0gZnJvbSBcIi4vdHhfc2lnbmVkLmpzXCI7XG5pbXBvcnQgeyBmcm9tSGV4LCB0b0hleCB9IGZyb20gXCIuLi91dGlscy9tb2QuanNcIjtcbmV4cG9ydCBjbGFzcyBUeENvbXBsZXRlIHtcbiAgICBjb25zdHJ1Y3RvcihsdWNpZCwgdHgpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidHhDb21wbGV0ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ3aXRuZXNzU2V0QnVpbGRlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0YXNrc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsdWNpZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmx1Y2lkID0gbHVjaWQ7XG4gICAgICAgIHRoaXMudHhDb21wbGV0ZSA9IHR4O1xuICAgICAgICB0aGlzLndpdG5lc3NTZXRCdWlsZGVyID0gQy5UcmFuc2FjdGlvbldpdG5lc3NTZXRCdWlsZGVyLm5ldygpO1xuICAgICAgICB0aGlzLnRhc2tzID0gW107XG4gICAgfVxuICAgIHNpZ24oKSB7XG4gICAgICAgIHRoaXMudGFza3MucHVzaChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB3aXRuZXNzZXMgPSBhd2FpdCB0aGlzLmx1Y2lkLndhbGxldC5zaWduVHgodGhpcy50eENvbXBsZXRlKTtcbiAgICAgICAgICAgIHRoaXMud2l0bmVzc1NldEJ1aWxkZXIuYWRkX2V4aXN0aW5nKHdpdG5lc3Nlcyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqIEFkZCBhbiBleHRyYSBzaWduYXR1cmUgZnJvbSBhIHByaXZhdGUga2V5LiAqL1xuICAgIHNpZ25XaXRoUHJpdmF0ZUtleShwcml2YXRlS2V5KSB7XG4gICAgICAgIGNvbnN0IHByaXYgPSBDLlByaXZhdGVLZXkuZnJvbV9iZWNoMzIocHJpdmF0ZUtleSk7XG4gICAgICAgIGNvbnN0IHdpdG5lc3MgPSBDLm1ha2VfdmtleV93aXRuZXNzKEMuaGFzaF90cmFuc2FjdGlvbih0aGlzLnR4Q29tcGxldGUuYm9keSgpKSwgcHJpdik7XG4gICAgICAgIHRoaXMud2l0bmVzc1NldEJ1aWxkZXIuYWRkX3ZrZXkod2l0bmVzcyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKiogU2lnbiB0aGUgdHJhbnNhY3Rpb24gYW5kIHJldHVybiB0aGUgd2l0bmVzc2VzIHRoYXQgd2VyZSBqdXN0IG1hZGUuICovXG4gICAgYXN5bmMgcGFydGlhbFNpZ24oKSB7XG4gICAgICAgIGNvbnN0IHdpdG5lc3NlcyA9IGF3YWl0IHRoaXMubHVjaWQud2FsbGV0LnNpZ25UeCh0aGlzLnR4Q29tcGxldGUpO1xuICAgICAgICB0aGlzLndpdG5lc3NTZXRCdWlsZGVyLmFkZF9leGlzdGluZyh3aXRuZXNzZXMpO1xuICAgICAgICByZXR1cm4gdG9IZXgod2l0bmVzc2VzLnRvX2J5dGVzKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWduIHRoZSB0cmFuc2FjdGlvbiBhbmQgcmV0dXJuIHRoZSB3aXRuZXNzZXMgdGhhdCB3ZXJlIGp1c3QgbWFkZS5cbiAgICAgKiBBZGQgYW4gZXh0cmEgc2lnbmF0dXJlIGZyb20gYSBwcml2YXRlIGtleS5cbiAgICAgKi9cbiAgICBwYXJ0aWFsU2lnbldpdGhQcml2YXRlS2V5KHByaXZhdGVLZXkpIHtcbiAgICAgICAgY29uc3QgcHJpdiA9IEMuUHJpdmF0ZUtleS5mcm9tX2JlY2gzMihwcml2YXRlS2V5KTtcbiAgICAgICAgY29uc3Qgd2l0bmVzcyA9IEMubWFrZV92a2V5X3dpdG5lc3MoQy5oYXNoX3RyYW5zYWN0aW9uKHRoaXMudHhDb21wbGV0ZS5ib2R5KCkpLCBwcml2KTtcbiAgICAgICAgdGhpcy53aXRuZXNzU2V0QnVpbGRlci5hZGRfdmtleSh3aXRuZXNzKTtcbiAgICAgICAgY29uc3Qgd2l0bmVzc2VzID0gQy5UcmFuc2FjdGlvbldpdG5lc3NTZXRCdWlsZGVyLm5ldygpO1xuICAgICAgICB3aXRuZXNzZXMuYWRkX3ZrZXkod2l0bmVzcyk7XG4gICAgICAgIHJldHVybiB0b0hleCh3aXRuZXNzZXMuYnVpbGQoKS50b19ieXRlcygpKTtcbiAgICB9XG4gICAgLyoqIFNpZ24gdGhlIHRyYW5zYWN0aW9uIHdpdGggdGhlIGdpdmVuIHdpdG5lc3Nlcy4gKi9cbiAgICBhc3NlbWJsZSh3aXRuZXNzZXMpIHtcbiAgICAgICAgd2l0bmVzc2VzLmZvckVhY2goKHdpdG5lc3MpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHdpdG5lc3NQYXJzZWQgPSBDLlRyYW5zYWN0aW9uV2l0bmVzc1NldC5mcm9tX2J5dGVzKGZyb21IZXgod2l0bmVzcykpO1xuICAgICAgICAgICAgdGhpcy53aXRuZXNzU2V0QnVpbGRlci5hZGRfZXhpc3Rpbmcod2l0bmVzc1BhcnNlZCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgY29tcGxldGUoKSB7XG4gICAgICAgIGZvciAoY29uc3QgdGFzayBvZiB0aGlzLnRhc2tzKSB7XG4gICAgICAgICAgICBhd2FpdCB0YXNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53aXRuZXNzU2V0QnVpbGRlci5hZGRfZXhpc3RpbmcodGhpcy50eENvbXBsZXRlLndpdG5lc3Nfc2V0KCkpO1xuICAgICAgICBjb25zdCBzaWduZWRUeCA9IEMuVHJhbnNhY3Rpb24ubmV3KHRoaXMudHhDb21wbGV0ZS5ib2R5KCksIHRoaXMud2l0bmVzc1NldEJ1aWxkZXIuYnVpbGQoKSwgdGhpcy50eENvbXBsZXRlLmF1eGlsaWFyeV9kYXRhKCkpO1xuICAgICAgICByZXR1cm4gbmV3IFR4U2lnbmVkKHRoaXMubHVjaWQsIHNpZ25lZFR4KTtcbiAgICB9XG4gICAgLyoqIFJldHVybiB0aGUgdHJhbnNhY3Rpb24gaW4gSGV4IGVuY29kZWQgQ2Jvci4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRvSGV4KHRoaXMudHhDb21wbGV0ZS50b19ieXRlcygpKTtcbiAgICB9XG4gICAgLyoqIFJldHVybiB0aGUgdHJhbnNhY3Rpb24gaGFzaC4gKi9cbiAgICB0b0hhc2goKSB7XG4gICAgICAgIHJldHVybiBDLmhhc2hfdHJhbnNhY3Rpb24odGhpcy50eENvbXBsZXRlLmJvZHkoKSkudG9faGV4KCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/tx_complete.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js":
/*!***************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js ***!
  \***************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TxSigned\": function() { return /* binding */ TxSigned; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass TxSigned {\n    constructor(lucid, tx) {\n        Object.defineProperty(this, \"txSigned\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n        this.txSigned = tx;\n    }\n    async submit() {\n        return await (this.lucid.wallet || this.lucid.provider).submitTx((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(this.txSigned.to_bytes()));\n    }\n    /** Returns the transaction in Hex encoded Cbor. */\n    toString() {\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(this.txSigned.to_bytes());\n    }\n    /** Return the transaction hash. */\n    toHash() {\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(this.txSigned.body()).to_hex();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL3R4X3NpZ25lZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUM7QUFDSztBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLG9EQUFLO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0REFBa0I7QUFDakM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL2x1Y2lkL3R4X3NpZ25lZC5qcz81Yzk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEMgfSBmcm9tIFwiLi4vY29yZS9tb2QuanNcIjtcbmltcG9ydCB7IHRvSGV4IH0gZnJvbSBcIi4uL3V0aWxzL21vZC5qc1wiO1xuZXhwb3J0IGNsYXNzIFR4U2lnbmVkIHtcbiAgICBjb25zdHJ1Y3RvcihsdWNpZCwgdHgpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidHhTaWduZWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibHVjaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sdWNpZCA9IGx1Y2lkO1xuICAgICAgICB0aGlzLnR4U2lnbmVkID0gdHg7XG4gICAgfVxuICAgIGFzeW5jIHN1Ym1pdCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0ICh0aGlzLmx1Y2lkLndhbGxldCB8fCB0aGlzLmx1Y2lkLnByb3ZpZGVyKS5zdWJtaXRUeCh0b0hleCh0aGlzLnR4U2lnbmVkLnRvX2J5dGVzKCkpKTtcbiAgICB9XG4gICAgLyoqIFJldHVybnMgdGhlIHRyYW5zYWN0aW9uIGluIEhleCBlbmNvZGVkIENib3IuICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0b0hleCh0aGlzLnR4U2lnbmVkLnRvX2J5dGVzKCkpO1xuICAgIH1cbiAgICAvKiogUmV0dXJuIHRoZSB0cmFuc2FjdGlvbiBoYXNoLiAqL1xuICAgIHRvSGFzaCgpIHtcbiAgICAgICAgcmV0dXJuIEMuaGFzaF90cmFuc2FjdGlvbih0aGlzLnR4U2lnbmVkLmJvZHkoKSkudG9faGV4KCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/lucid/tx_signed.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/misc/bip39.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/misc/bip39.js ***!
  \**********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateMnemonic\": function() { return /* binding */ generateMnemonic; },\n/* harmony export */   \"mnemonicToEntropy\": function() { return /* binding */ mnemonicToEntropy; }\n/* harmony export */ });\n/* harmony import */ var _deps_deno_land_std_0_153_0_hash_sha256_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps/deno.land/std@0.153.0/hash/sha256.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__]);\n_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// This is a partial reimplementation of BIP39 in Deno: https://github.com/bitcoinjs/bip39\n// We only use the default Wordlist (english)\n\n\nconst INVALID_MNEMONIC = \"Invalid mnemonic\";\nconst INVALID_ENTROPY = \"Invalid entropy\";\nconst INVALID_CHECKSUM = \"Invalid mnemonic checksum\";\nconst WORDLIST_REQUIRED = \"A wordlist is required but a default could not be found.\\n\" +\n    \"Please pass a 2048 word array explicitly.\";\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(\" \");\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), \"0\", 11);\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = new Uint8Array(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(entropy);\n}\nfunction randomBytes(size) {\n    // reimplementation of: https://github.com/crypto-browserify/randombytes/blob/master/browser.js\n    const MAX_UINT32 = 4294967295;\n    const MAX_BYTES = 65536;\n    const bytes = new Uint8Array(size);\n    if (size > MAX_UINT32) {\n        throw new RangeError(\"requested too many random bytes\");\n    }\n    if (size > 0) { // getRandomValues fails on IE if size == 0\n        if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n            // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n            for (let generated = 0; generated < size; generated += MAX_BYTES) {\n                // buffer.slice automatically checks if the end is past the end of\n                // the buffer so we don't have to here\n                crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n            }\n        }\n        else {\n            crypto.getRandomValues(bytes);\n        }\n    }\n    return bytes;\n}\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === \"\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093\" // Japanese wordlist\n        ? words.join(\"\\u3000\")\n        : words.join(\" \");\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = new _deps_deno_land_std_0_153_0_hash_sha256_js__WEBPACK_IMPORTED_MODULE_0__.Sha256()\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), \"0\", 8)).join(\"\");\n}\nfunction normalize(str) {\n    return (str || \"\").normalize(\"NFKD\");\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nconst DEFAULT_WORDLIST = [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/misc/bip39.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/misc/crc8.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/misc/crc8.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"crc8\": function() { return /* binding */ crc8; }\n/* harmony export */ });\n// This is a partial reimplementation of CRC-8 (node-crc) in Deno: https://github.com/alexgorbatchev/node-crc\nlet TABLE = [\n    0x00,\n    0x07,\n    0x0e,\n    0x09,\n    0x1c,\n    0x1b,\n    0x12,\n    0x15,\n    0x38,\n    0x3f,\n    0x36,\n    0x31,\n    0x24,\n    0x23,\n    0x2a,\n    0x2d,\n    0x70,\n    0x77,\n    0x7e,\n    0x79,\n    0x6c,\n    0x6b,\n    0x62,\n    0x65,\n    0x48,\n    0x4f,\n    0x46,\n    0x41,\n    0x54,\n    0x53,\n    0x5a,\n    0x5d,\n    0xe0,\n    0xe7,\n    0xee,\n    0xe9,\n    0xfc,\n    0xfb,\n    0xf2,\n    0xf5,\n    0xd8,\n    0xdf,\n    0xd6,\n    0xd1,\n    0xc4,\n    0xc3,\n    0xca,\n    0xcd,\n    0x90,\n    0x97,\n    0x9e,\n    0x99,\n    0x8c,\n    0x8b,\n    0x82,\n    0x85,\n    0xa8,\n    0xaf,\n    0xa6,\n    0xa1,\n    0xb4,\n    0xb3,\n    0xba,\n    0xbd,\n    0xc7,\n    0xc0,\n    0xc9,\n    0xce,\n    0xdb,\n    0xdc,\n    0xd5,\n    0xd2,\n    0xff,\n    0xf8,\n    0xf1,\n    0xf6,\n    0xe3,\n    0xe4,\n    0xed,\n    0xea,\n    0xb7,\n    0xb0,\n    0xb9,\n    0xbe,\n    0xab,\n    0xac,\n    0xa5,\n    0xa2,\n    0x8f,\n    0x88,\n    0x81,\n    0x86,\n    0x93,\n    0x94,\n    0x9d,\n    0x9a,\n    0x27,\n    0x20,\n    0x29,\n    0x2e,\n    0x3b,\n    0x3c,\n    0x35,\n    0x32,\n    0x1f,\n    0x18,\n    0x11,\n    0x16,\n    0x03,\n    0x04,\n    0x0d,\n    0x0a,\n    0x57,\n    0x50,\n    0x59,\n    0x5e,\n    0x4b,\n    0x4c,\n    0x45,\n    0x42,\n    0x6f,\n    0x68,\n    0x61,\n    0x66,\n    0x73,\n    0x74,\n    0x7d,\n    0x7a,\n    0x89,\n    0x8e,\n    0x87,\n    0x80,\n    0x95,\n    0x92,\n    0x9b,\n    0x9c,\n    0xb1,\n    0xb6,\n    0xbf,\n    0xb8,\n    0xad,\n    0xaa,\n    0xa3,\n    0xa4,\n    0xf9,\n    0xfe,\n    0xf7,\n    0xf0,\n    0xe5,\n    0xe2,\n    0xeb,\n    0xec,\n    0xc1,\n    0xc6,\n    0xcf,\n    0xc8,\n    0xdd,\n    0xda,\n    0xd3,\n    0xd4,\n    0x69,\n    0x6e,\n    0x67,\n    0x60,\n    0x75,\n    0x72,\n    0x7b,\n    0x7c,\n    0x51,\n    0x56,\n    0x5f,\n    0x58,\n    0x4d,\n    0x4a,\n    0x43,\n    0x44,\n    0x19,\n    0x1e,\n    0x17,\n    0x10,\n    0x05,\n    0x02,\n    0x0b,\n    0x0c,\n    0x21,\n    0x26,\n    0x2f,\n    0x28,\n    0x3d,\n    0x3a,\n    0x33,\n    0x34,\n    0x4e,\n    0x49,\n    0x40,\n    0x47,\n    0x52,\n    0x55,\n    0x5c,\n    0x5b,\n    0x76,\n    0x71,\n    0x78,\n    0x7f,\n    0x6a,\n    0x6d,\n    0x64,\n    0x63,\n    0x3e,\n    0x39,\n    0x30,\n    0x37,\n    0x22,\n    0x25,\n    0x2c,\n    0x2b,\n    0x06,\n    0x01,\n    0x08,\n    0x0f,\n    0x1a,\n    0x1d,\n    0x14,\n    0x13,\n    0xae,\n    0xa9,\n    0xa0,\n    0xa7,\n    0xb2,\n    0xb5,\n    0xbc,\n    0xbb,\n    0x96,\n    0x91,\n    0x98,\n    0x9f,\n    0x8a,\n    0x8d,\n    0x84,\n    0x83,\n    0xde,\n    0xd9,\n    0xd0,\n    0xd7,\n    0xc2,\n    0xc5,\n    0xcc,\n    0xcb,\n    0xe6,\n    0xe1,\n    0xe8,\n    0xef,\n    0xfa,\n    0xfd,\n    0xf4,\n    0xf3,\n];\nif (typeof Int32Array !== \"undefined\") {\n    TABLE = new Int32Array(TABLE);\n}\nfunction crc8(current, previous = 0) {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL21pc2MvY3JjOC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCLHdCQUF3QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL21pc2MvY3JjOC5qcz82NGVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgYSBwYXJ0aWFsIHJlaW1wbGVtZW50YXRpb24gb2YgQ1JDLTggKG5vZGUtY3JjKSBpbiBEZW5vOiBodHRwczovL2dpdGh1Yi5jb20vYWxleGdvcmJhdGNoZXYvbm9kZS1jcmNcbmxldCBUQUJMRSA9IFtcbiAgICAweDAwLFxuICAgIDB4MDcsXG4gICAgMHgwZSxcbiAgICAweDA5LFxuICAgIDB4MWMsXG4gICAgMHgxYixcbiAgICAweDEyLFxuICAgIDB4MTUsXG4gICAgMHgzOCxcbiAgICAweDNmLFxuICAgIDB4MzYsXG4gICAgMHgzMSxcbiAgICAweDI0LFxuICAgIDB4MjMsXG4gICAgMHgyYSxcbiAgICAweDJkLFxuICAgIDB4NzAsXG4gICAgMHg3NyxcbiAgICAweDdlLFxuICAgIDB4NzksXG4gICAgMHg2YyxcbiAgICAweDZiLFxuICAgIDB4NjIsXG4gICAgMHg2NSxcbiAgICAweDQ4LFxuICAgIDB4NGYsXG4gICAgMHg0NixcbiAgICAweDQxLFxuICAgIDB4NTQsXG4gICAgMHg1MyxcbiAgICAweDVhLFxuICAgIDB4NWQsXG4gICAgMHhlMCxcbiAgICAweGU3LFxuICAgIDB4ZWUsXG4gICAgMHhlOSxcbiAgICAweGZjLFxuICAgIDB4ZmIsXG4gICAgMHhmMixcbiAgICAweGY1LFxuICAgIDB4ZDgsXG4gICAgMHhkZixcbiAgICAweGQ2LFxuICAgIDB4ZDEsXG4gICAgMHhjNCxcbiAgICAweGMzLFxuICAgIDB4Y2EsXG4gICAgMHhjZCxcbiAgICAweDkwLFxuICAgIDB4OTcsXG4gICAgMHg5ZSxcbiAgICAweDk5LFxuICAgIDB4OGMsXG4gICAgMHg4YixcbiAgICAweDgyLFxuICAgIDB4ODUsXG4gICAgMHhhOCxcbiAgICAweGFmLFxuICAgIDB4YTYsXG4gICAgMHhhMSxcbiAgICAweGI0LFxuICAgIDB4YjMsXG4gICAgMHhiYSxcbiAgICAweGJkLFxuICAgIDB4YzcsXG4gICAgMHhjMCxcbiAgICAweGM5LFxuICAgIDB4Y2UsXG4gICAgMHhkYixcbiAgICAweGRjLFxuICAgIDB4ZDUsXG4gICAgMHhkMixcbiAgICAweGZmLFxuICAgIDB4ZjgsXG4gICAgMHhmMSxcbiAgICAweGY2LFxuICAgIDB4ZTMsXG4gICAgMHhlNCxcbiAgICAweGVkLFxuICAgIDB4ZWEsXG4gICAgMHhiNyxcbiAgICAweGIwLFxuICAgIDB4YjksXG4gICAgMHhiZSxcbiAgICAweGFiLFxuICAgIDB4YWMsXG4gICAgMHhhNSxcbiAgICAweGEyLFxuICAgIDB4OGYsXG4gICAgMHg4OCxcbiAgICAweDgxLFxuICAgIDB4ODYsXG4gICAgMHg5MyxcbiAgICAweDk0LFxuICAgIDB4OWQsXG4gICAgMHg5YSxcbiAgICAweDI3LFxuICAgIDB4MjAsXG4gICAgMHgyOSxcbiAgICAweDJlLFxuICAgIDB4M2IsXG4gICAgMHgzYyxcbiAgICAweDM1LFxuICAgIDB4MzIsXG4gICAgMHgxZixcbiAgICAweDE4LFxuICAgIDB4MTEsXG4gICAgMHgxNixcbiAgICAweDAzLFxuICAgIDB4MDQsXG4gICAgMHgwZCxcbiAgICAweDBhLFxuICAgIDB4NTcsXG4gICAgMHg1MCxcbiAgICAweDU5LFxuICAgIDB4NWUsXG4gICAgMHg0YixcbiAgICAweDRjLFxuICAgIDB4NDUsXG4gICAgMHg0MixcbiAgICAweDZmLFxuICAgIDB4NjgsXG4gICAgMHg2MSxcbiAgICAweDY2LFxuICAgIDB4NzMsXG4gICAgMHg3NCxcbiAgICAweDdkLFxuICAgIDB4N2EsXG4gICAgMHg4OSxcbiAgICAweDhlLFxuICAgIDB4ODcsXG4gICAgMHg4MCxcbiAgICAweDk1LFxuICAgIDB4OTIsXG4gICAgMHg5YixcbiAgICAweDljLFxuICAgIDB4YjEsXG4gICAgMHhiNixcbiAgICAweGJmLFxuICAgIDB4YjgsXG4gICAgMHhhZCxcbiAgICAweGFhLFxuICAgIDB4YTMsXG4gICAgMHhhNCxcbiAgICAweGY5LFxuICAgIDB4ZmUsXG4gICAgMHhmNyxcbiAgICAweGYwLFxuICAgIDB4ZTUsXG4gICAgMHhlMixcbiAgICAweGViLFxuICAgIDB4ZWMsXG4gICAgMHhjMSxcbiAgICAweGM2LFxuICAgIDB4Y2YsXG4gICAgMHhjOCxcbiAgICAweGRkLFxuICAgIDB4ZGEsXG4gICAgMHhkMyxcbiAgICAweGQ0LFxuICAgIDB4NjksXG4gICAgMHg2ZSxcbiAgICAweDY3LFxuICAgIDB4NjAsXG4gICAgMHg3NSxcbiAgICAweDcyLFxuICAgIDB4N2IsXG4gICAgMHg3YyxcbiAgICAweDUxLFxuICAgIDB4NTYsXG4gICAgMHg1ZixcbiAgICAweDU4LFxuICAgIDB4NGQsXG4gICAgMHg0YSxcbiAgICAweDQzLFxuICAgIDB4NDQsXG4gICAgMHgxOSxcbiAgICAweDFlLFxuICAgIDB4MTcsXG4gICAgMHgxMCxcbiAgICAweDA1LFxuICAgIDB4MDIsXG4gICAgMHgwYixcbiAgICAweDBjLFxuICAgIDB4MjEsXG4gICAgMHgyNixcbiAgICAweDJmLFxuICAgIDB4MjgsXG4gICAgMHgzZCxcbiAgICAweDNhLFxuICAgIDB4MzMsXG4gICAgMHgzNCxcbiAgICAweDRlLFxuICAgIDB4NDksXG4gICAgMHg0MCxcbiAgICAweDQ3LFxuICAgIDB4NTIsXG4gICAgMHg1NSxcbiAgICAweDVjLFxuICAgIDB4NWIsXG4gICAgMHg3NixcbiAgICAweDcxLFxuICAgIDB4NzgsXG4gICAgMHg3ZixcbiAgICAweDZhLFxuICAgIDB4NmQsXG4gICAgMHg2NCxcbiAgICAweDYzLFxuICAgIDB4M2UsXG4gICAgMHgzOSxcbiAgICAweDMwLFxuICAgIDB4MzcsXG4gICAgMHgyMixcbiAgICAweDI1LFxuICAgIDB4MmMsXG4gICAgMHgyYixcbiAgICAweDA2LFxuICAgIDB4MDEsXG4gICAgMHgwOCxcbiAgICAweDBmLFxuICAgIDB4MWEsXG4gICAgMHgxZCxcbiAgICAweDE0LFxuICAgIDB4MTMsXG4gICAgMHhhZSxcbiAgICAweGE5LFxuICAgIDB4YTAsXG4gICAgMHhhNyxcbiAgICAweGIyLFxuICAgIDB4YjUsXG4gICAgMHhiYyxcbiAgICAweGJiLFxuICAgIDB4OTYsXG4gICAgMHg5MSxcbiAgICAweDk4LFxuICAgIDB4OWYsXG4gICAgMHg4YSxcbiAgICAweDhkLFxuICAgIDB4ODQsXG4gICAgMHg4MyxcbiAgICAweGRlLFxuICAgIDB4ZDksXG4gICAgMHhkMCxcbiAgICAweGQ3LFxuICAgIDB4YzIsXG4gICAgMHhjNSxcbiAgICAweGNjLFxuICAgIDB4Y2IsXG4gICAgMHhlNixcbiAgICAweGUxLFxuICAgIDB4ZTgsXG4gICAgMHhlZixcbiAgICAweGZhLFxuICAgIDB4ZmQsXG4gICAgMHhmNCxcbiAgICAweGYzLFxuXTtcbmlmICh0eXBlb2YgSW50MzJBcnJheSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIFRBQkxFID0gbmV3IEludDMyQXJyYXkoVEFCTEUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyYzgoY3VycmVudCwgcHJldmlvdXMgPSAwKSB7XG4gICAgbGV0IGNyYyA9IH5+cHJldmlvdXM7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGN1cnJlbnQubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGNyYyA9IFRBQkxFWyhjcmMgXiBjdXJyZW50W2luZGV4XSkgJiAweGZmXSAmIDB4ZmY7XG4gICAgfVxuICAgIHJldHVybiBjcmM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/misc/crc8.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/misc/sign_data.js":
/*!**************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/misc/sign_data.js ***!
  \**************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"signData\": function() { return /* binding */ signData; },\n/* harmony export */   \"verifyData\": function() { return /* binding */ verifyData; }\n/* harmony export */ });\n/* harmony import */ var _mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mod.js */ \"./node_modules/lucid-cardano/esm/src/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_mod_js__WEBPACK_IMPORTED_MODULE_0__]);\n_mod_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction signData(addressHex, payload, privateKey) {\n    const protectedHeaders = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.HeaderMap[\"new\"]();\n    protectedHeaders.set_algorithm_id(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.from_algorithm_id(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.AlgorithmId.EdDSA));\n    protectedHeaders.set_header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_text(\"address\"), _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.CBORValue.new_bytes((0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.fromHex)(addressHex)));\n    const protectedSerialized = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.ProtectedHeaderMap[\"new\"](protectedHeaders);\n    const unprotectedHeaders = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.HeaderMap[\"new\"]();\n    const headers = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Headers[\"new\"](protectedSerialized, unprotectedHeaders);\n    const builder = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.COSESign1Builder[\"new\"](headers, (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.fromHex)(payload), false);\n    const toSign = builder.make_data_to_sign().to_bytes();\n    const priv = _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PrivateKey.from_bech32(privateKey);\n    const signedSigStruc = priv.sign(toSign).to_bytes();\n    const coseSign1 = builder.build(signedSigStruc);\n    const key = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.COSEKey[\"new\"](_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.from_key_type(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.KeyType.OKP));\n    key.set_algorithm_id(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.from_algorithm_id(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.AlgorithmId.EdDSA));\n    key.set_header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_int(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Int.new_negative(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.BigNum.from_str(\"1\"))), _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.CBORValue.new_int(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Int.new_i32(6))); // crv (-1) set to Ed25519 (6)\n    key.set_header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_int(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Int.new_negative(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.BigNum.from_str(\"2\"))), _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.CBORValue.new_bytes(priv.to_public().as_bytes())); // x (-2) set to public key\n    return {\n        signature: (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(coseSign1.to_bytes()),\n        key: (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(key.to_bytes()),\n    };\n}\nfunction verifyData(addressHex, keyHash, payload, signedMessage) {\n    const cose1 = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.COSESign1.from_bytes((0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.fromHex)(signedMessage.signature));\n    const key = _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.COSEKey.from_bytes((0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.fromHex)(signedMessage.key));\n    const protectedHeaders = cose1.headers().protected()\n        .deserialized_headers();\n    const cose1Address = (() => {\n        try {\n            return (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(protectedHeaders.header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_text(\"address\"))?.as_bytes());\n        }\n        catch (_e) {\n            throw new Error(\"No address found in signature.\");\n        }\n    })();\n    const cose1AlgorithmId = (() => {\n        try {\n            const int = protectedHeaders.algorithm_id()?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Algorithm Id.\");\n        }\n    })();\n    const keyAlgorithmId = (() => {\n        try {\n            const int = key.algorithm_id()?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Algorithm Id.\");\n        }\n    })();\n    const keyCurve = (() => {\n        try {\n            const int = key.header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_int(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Int.new_negative(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.BigNum.from_str(\"1\"))))?.as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Curve.\");\n        }\n    })();\n    const keyType = (() => {\n        try {\n            const int = key.key_type().as_int();\n            if (int?.is_positive())\n                return parseInt(int.as_positive()?.to_str());\n            return parseInt(int?.as_negative()?.to_str());\n        }\n        catch (_e) {\n            throw new Error(\"Failed to retrieve Key Type.\");\n        }\n    })();\n    const publicKey = (() => {\n        try {\n            return _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PublicKey.from_bytes(key.header(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Label.new_int(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.Int.new_negative(_mod_js__WEBPACK_IMPORTED_MODULE_0__.M.BigNum.from_str(\"2\"))))?.as_bytes());\n        }\n        catch (_e) {\n            throw new Error(\"No public key found.\");\n        }\n    })();\n    const cose1Payload = (() => {\n        try {\n            return (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(cose1.payload());\n        }\n        catch (_e) {\n            throw new Error(\"No payload found.\");\n        }\n    })();\n    const signature = _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519Signature.from_bytes(cose1.signature());\n    const data = cose1.signed_data(undefined, undefined).to_bytes();\n    if (cose1Address !== addressHex)\n        return false;\n    if (keyHash !== publicKey.hash().to_hex())\n        return false;\n    if (cose1AlgorithmId !== keyAlgorithmId &&\n        cose1AlgorithmId !== _mod_js__WEBPACK_IMPORTED_MODULE_0__.M.AlgorithmId.EdDSA) {\n        return false;\n    }\n    if (keyCurve !== 6)\n        return false;\n    if (keyType !== 1)\n        return false;\n    if (cose1Payload !== payload)\n        return false;\n    return publicKey.verify(data, signature);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/misc/sign_data.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/misc/wallet.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/misc/wallet.js ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"discoverOwnUsedTxKeyHashes\": function() { return /* binding */ discoverOwnUsedTxKeyHashes; },\n/* harmony export */   \"walletFromSeed\": function() { return /* binding */ walletFromSeed; }\n/* harmony export */ });\n/* harmony import */ var _mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mod.js */ \"./node_modules/lucid-cardano/esm/src/mod.js\");\n/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bip39.js */ \"./node_modules/lucid-cardano/esm/src/misc/bip39.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_mod_js__WEBPACK_IMPORTED_MODULE_0__, _bip39_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_mod_js__WEBPACK_IMPORTED_MODULE_0__, _bip39_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nfunction walletFromSeed(seed, options = { addressType: \"Base\", accountIndex: 0, network: \"Mainnet\" }) {\n    function harden(num) {\n        if (typeof num !== \"number\")\n            throw new Error(\"Type number required here!\");\n        return 0x80000000 + num;\n    }\n    const entropy = (0,_bip39_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicToEntropy)(seed);\n    const rootKey = _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Bip32PrivateKey.from_bip39_entropy((0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.fromHex)(entropy), options.password\n        ? new TextEncoder().encode(options.password)\n        : new Uint8Array());\n    const accountKey = rootKey.derive(harden(1852))\n        .derive(harden(1815))\n        .derive(harden(options.accountIndex));\n    const paymentKey = accountKey.derive(0).derive(0).to_raw_key();\n    const stakeKey = accountKey.derive(2).derive(0).to_raw_key();\n    const paymentKeyHash = paymentKey.to_public().hash();\n    const stakeKeyHash = stakeKey.to_public().hash();\n    const networkId = options.network === \"Mainnet\" ? 1 : 0;\n    const address = options.addressType === \"Base\"\n        ? _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BaseAddress[\"new\"](networkId, _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(paymentKeyHash), _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(stakeKeyHash)).to_address().to_bech32(undefined)\n        : _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.EnterpriseAddress[\"new\"](networkId, _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(paymentKeyHash)).to_address().to_bech32(undefined);\n    const rewardAddress = options.addressType === \"Base\"\n        ? _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](networkId, _mod_js__WEBPACK_IMPORTED_MODULE_0__.C.StakeCredential.from_keyhash(stakeKeyHash)).to_address().to_bech32(undefined)\n        : null;\n    return {\n        address,\n        rewardAddress,\n        paymentKey: paymentKey.to_bech32(),\n        stakeKey: options.addressType === \"Base\" ? stakeKey.to_bech32() : null,\n    };\n}\nfunction discoverOwnUsedTxKeyHashes(tx, ownKeyHashes, ownUtxos) {\n    const usedKeyHashes = [];\n    // key hashes from inputs\n    const inputs = tx.body().inputs();\n    for (let i = 0; i < inputs.len(); i++) {\n        const input = inputs.get(i);\n        const txHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(input.transaction_id().to_bytes());\n        const outputIndex = parseInt(input.index().to_str());\n        const utxo = ownUtxos.find((utxo) => utxo.txHash === txHash && utxo.outputIndex === outputIndex);\n        if (utxo) {\n            const { paymentCredential } = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.getAddressDetails)(utxo.address);\n            usedKeyHashes.push(paymentCredential?.hash);\n        }\n    }\n    const txBody = tx.body();\n    // key hashes from certificates\n    function keyHashFromCert(txBody) {\n        const certs = txBody.certs();\n        if (!certs)\n            return;\n        for (let i = 0; i < certs.len(); i++) {\n            const cert = certs.get(i);\n            if (cert.kind() === 0) {\n                const credential = cert.as_stake_registration()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    // Key hash not needed for registration\n                }\n            }\n            else if (cert.kind() === 1) {\n                const credential = cert.as_stake_deregistration()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    const keyHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(credential.to_keyhash().to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n            }\n            else if (cert.kind() === 2) {\n                const credential = cert.as_stake_delegation()?.stake_credential();\n                if (credential?.kind() === 0) {\n                    const keyHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(credential.to_keyhash().to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n            }\n            else if (cert.kind() === 3) {\n                const poolParams = cert\n                    .as_pool_registration()?.pool_params();\n                const owners = poolParams\n                    ?.pool_owners();\n                if (!owners)\n                    break;\n                for (let i = 0; i < owners.len(); i++) {\n                    const keyHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(owners.get(i).to_bytes());\n                    usedKeyHashes.push(keyHash);\n                }\n                const operator = poolParams.operator().to_hex();\n                usedKeyHashes.push(operator);\n            }\n            else if (cert.kind() === 4) {\n                const operator = cert.as_pool_retirement().pool_keyhash().to_hex();\n                usedKeyHashes.push(operator);\n            }\n            else if (cert.kind() === 6) {\n                const instantRewards = cert\n                    .as_move_instantaneous_rewards_cert()\n                    ?.move_instantaneous_reward().as_to_stake_creds()\n                    ?.keys();\n                if (!instantRewards)\n                    break;\n                for (let i = 0; i < instantRewards.len(); i++) {\n                    const credential = instantRewards.get(i);\n                    if (credential.kind() === 0) {\n                        const keyHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(credential.to_keyhash().to_bytes());\n                        usedKeyHashes.push(keyHash);\n                    }\n                }\n            }\n        }\n    }\n    if (txBody.certs())\n        keyHashFromCert(txBody);\n    // key hashes from withdrawals\n    const withdrawals = txBody.withdrawals();\n    function keyHashFromWithdrawal(withdrawals) {\n        const rewardAddresses = withdrawals.keys();\n        for (let i = 0; i < rewardAddresses.len(); i++) {\n            const credential = rewardAddresses.get(i).payment_cred();\n            if (credential.kind() === 0) {\n                usedKeyHashes.push(credential.to_keyhash().to_hex());\n            }\n        }\n    }\n    if (withdrawals)\n        keyHashFromWithdrawal(withdrawals);\n    // key hashes from scripts\n    const scripts = tx.witness_set().native_scripts();\n    function keyHashFromScript(scripts) {\n        for (let i = 0; i < scripts.len(); i++) {\n            const script = scripts.get(i);\n            if (script.kind() === 0) {\n                const keyHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(script.as_script_pubkey().addr_keyhash().to_bytes());\n                usedKeyHashes.push(keyHash);\n            }\n            if (script.kind() === 1) {\n                keyHashFromScript(script.as_script_all().native_scripts());\n                return;\n            }\n            if (script.kind() === 2) {\n                keyHashFromScript(script.as_script_any().native_scripts());\n                return;\n            }\n            if (script.kind() === 3) {\n                keyHashFromScript(script.as_script_n_of_k().native_scripts());\n                return;\n            }\n        }\n    }\n    if (scripts)\n        keyHashFromScript(scripts);\n    // keyHashes from required signers\n    const requiredSigners = txBody.required_signers();\n    if (requiredSigners) {\n        for (let i = 0; i < requiredSigners.len(); i++) {\n            usedKeyHashes.push((0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(requiredSigners.get(i).to_bytes()));\n        }\n    }\n    // keyHashes from collateral\n    const collateral = txBody.collateral();\n    if (collateral) {\n        for (let i = 0; i < collateral.len(); i++) {\n            const input = collateral.get(i);\n            const txHash = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(input.transaction_id().to_bytes());\n            const outputIndex = parseInt(input.index().to_str());\n            const utxo = ownUtxos.find((utxo) => utxo.txHash === txHash && utxo.outputIndex === outputIndex);\n            if (utxo) {\n                const { paymentCredential } = (0,_mod_js__WEBPACK_IMPORTED_MODULE_0__.getAddressDetails)(utxo.address);\n                usedKeyHashes.push(paymentCredential?.hash);\n            }\n        }\n    }\n    return usedKeyHashes.filter((k) => ownKeyHashes.includes(k));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/misc/wallet.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/mod.js":
/*!***************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/mod.js ***!
  \***************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _lucid_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lucid/mod.js */ \"./node_modules/lucid-cardano/esm/src/lucid/mod.js\");\n/* harmony import */ var _provider_mod_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./provider/mod.js */ \"./node_modules/lucid-cardano/esm/src/provider/mod.js\");\n/* harmony import */ var _types_mod_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types/mod.js */ \"./node_modules/lucid-cardano/esm/src/types/mod.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types_mod_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _types_mod_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\n/* harmony import */ var _plutus_mod_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./plutus/mod.js */ \"./node_modules/lucid-cardano/esm/src/plutus/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _lucid_mod_js__WEBPACK_IMPORTED_MODULE_1__, _provider_mod_js__WEBPACK_IMPORTED_MODULE_2__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_4__, _plutus_mod_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _lucid_mod_js__WEBPACK_IMPORTED_MODULE_1__, _provider_mod_js__WEBPACK_IMPORTED_MODULE_2__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_4__, _plutus_mod_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _core_mod_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lucid_mod_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lucid_mod_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _provider_mod_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _provider_mod_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _utils_mod_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _utils_mod_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _plutus_mod_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _plutus_mod_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL21vZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ0M7QUFDRztBQUNIO0FBQ0E7QUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL21vZC5qcz9jMmVmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvcmUvbW9kLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sdWNpZC9tb2QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb3ZpZGVyL21vZC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXMvbW9kLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9tb2QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BsdXR1cy9tb2QuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/plutus/data.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/plutus/data.js ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Constr\": function() { return /* binding */ Constr; },\n/* harmony export */   \"Data\": function() { return /* binding */ Data; }\n/* harmony export */ });\n/* harmony import */ var _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps/deno.land/x/typebox@0.25.13/src/typebox.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/x/typebox@0.25.13/src/typebox.js\");\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils.js */ \"./node_modules/lucid-cardano/esm/src/utils/utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_1__, _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_1__, _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass Constr {\n    constructor(index, fields) {\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.index = index;\n        this.fields = fields;\n    }\n}\nconst Data = {\n    // Types\n    // Note: Recursive types are not supported (yet)\n    BigInt: _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Unsafe({ type: \"bigint\" }),\n    String: _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.String(),\n    Boolean: _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Boolean(),\n    Any: _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Unsafe(),\n    Array: function (schema) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Array(schema);\n    },\n    Map: function (keySchema, valueSchema) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Unsafe({\n            key: keySchema,\n            value: valueSchema,\n            type: \"map\",\n        });\n    },\n    /**\n     * Object applies by default a PlutusData Constr with index 0.\\\n     * Set 'hasConstr' to false to serialize Object as PlutusData List.\n     */\n    Object: function (properties, hasConstr = true) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Object(properties, { hasConstr });\n    },\n    Enum: function (items) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Union(items);\n    },\n    /**\n     * Tuple is by default a PlutusData List.\\\n     * Set 'hasConstr' to true to apply a PlutusData Constr with index 0.\n     */\n    Tuple: function (items, hasConstr = false) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Tuple(items, { hasConstr });\n    },\n    Literal: function (literal) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Literal(literal);\n    },\n    Nullable: function (schema) {\n        return _deps_deno_land_x_typebox_0_25_13_src_typebox_js__WEBPACK_IMPORTED_MODULE_0__.Type.Unsafe({ ...schema, nullable: true });\n    },\n    /**\n     * Convert PlutusData to Cbor encoded data.\\\n     * Or apply a shape and convert the provided data struct to Cbor encoded data.\n     */\n    to,\n    /** Convert Cbor encoded data to PlutusData */\n    from,\n    /**\n     *  Convert Cbor encoded data to Data.\\\n     *  Or apply a shape and cast the cbor encoded data to a certain type.\n     */\n    fromJson,\n    /**\n     * Convert PlutusData to a Json object.\n     * Note: Constructor cannot be used here, also only bytes/integers as Json keys.\n     */\n    toJson,\n    void: function () {\n        return \"d87980\";\n    },\n    castFrom,\n    castTo,\n};\n/**\n * Convert PlutusData to Cbor encoded data.\\\n * Or apply a shape and convert the provided data struct to Cbor encoded data.\n */\nfunction to(data, shape) {\n    function serialize(data) {\n        try {\n            if (typeof data === \"bigint\") {\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.new_integer(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BigInt.from_str(data.toString()));\n            }\n            else if (typeof data === \"string\") {\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.new_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(data));\n            }\n            else if (data instanceof Constr) {\n                const { index, fields } = data;\n                const plutusList = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusList[\"new\"]();\n                fields.forEach((field) => plutusList.add(serialize(field)));\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.new_constr_plutus_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ConstrPlutusData[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BigNum.from_str(index.toString()), plutusList));\n            }\n            else if (data instanceof Array) {\n                const plutusList = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusList[\"new\"]();\n                data.forEach((arg) => plutusList.add(serialize(arg)));\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.new_list(plutusList);\n            }\n            else if (data instanceof Map) {\n                const plutusMap = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusMap[\"new\"]();\n                for (const [key, value] of data.entries()) {\n                    plutusMap.insert(serialize(key), serialize(value));\n                }\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.new_map(plutusMap);\n            }\n            throw new Error(\"Unsupported type\");\n        }\n        catch (error) {\n            throw new Error(\"Could not serialize the data: \" + error);\n        }\n    }\n    const d = shape ? castTo(data, shape) : data;\n    return (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(serialize(d).to_bytes());\n}\n/**\n *  Convert Cbor encoded data to Data.\\\n *  Or apply a shape and cast the cbor encoded data to a certain type.\n */\nfunction from(raw, shape) {\n    function deserialize(data) {\n        if (data.kind() === 0) {\n            const constr = data.as_constr_plutus_data();\n            const l = constr.data();\n            const desL = [];\n            for (let i = 0; i < l.len(); i++) {\n                desL.push(deserialize(l.get(i)));\n            }\n            return new Constr(parseInt(constr.alternative().to_str()), desL);\n        }\n        else if (data.kind() === 1) {\n            const m = data.as_map();\n            const desM = new Map();\n            const keys = m.keys();\n            for (let i = 0; i < keys.len(); i++) {\n                desM.set(deserialize(keys.get(i)), deserialize(m.get(keys.get(i))));\n            }\n            return desM;\n        }\n        else if (data.kind() === 2) {\n            const l = data.as_list();\n            const desL = [];\n            for (let i = 0; i < l.len(); i++) {\n                desL.push(deserialize(l.get(i)));\n            }\n            return desL;\n        }\n        else if (data.kind() === 3) {\n            return BigInt(data.as_integer().to_str());\n        }\n        else if (data.kind() === 4) {\n            return (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(data.as_bytes());\n        }\n        throw new Error(\"Unsupported type\");\n    }\n    const data = deserialize(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(raw)));\n    return shape ? castFrom(data, shape) : data;\n}\n/**\n * Convert conveniently a Json object (e.g. Metadata) to PlutusData.\n * Note: Constructor cannot be used here.\n */\nfunction fromJson(json) {\n    function toData(json) {\n        if (typeof json === \"string\") {\n            return json.startsWith(\"0x\")\n                ? json.slice(2)\n                : (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(new TextEncoder().encode(json));\n        }\n        if (typeof json === \"number\")\n            return BigInt(json);\n        if (typeof json === \"bigint\")\n            return json;\n        if (json instanceof Array)\n            return json.map((v) => toData(v));\n        if (json instanceof Object) {\n            const tempMap = new Map();\n            Object.entries(json).forEach(([key, value]) => {\n                tempMap.set(toData(key), toData(value));\n            });\n            return tempMap;\n        }\n        throw new Error(\"Unsupported type\");\n    }\n    return toData(json);\n}\n/**\n * Convert PlutusData to a Json object.\n * Note: Constructor cannot be used here, also only bytes/integers as Json keys.\n */\nfunction toJson(plutusData) {\n    function fromData(data) {\n        if (typeof data === \"bigint\" ||\n            typeof data === \"number\" ||\n            (typeof data === \"string\" &&\n                !isNaN(parseInt(data)) &&\n                data.slice(-1) === \"n\")) {\n            const bigint = typeof data === \"string\"\n                ? BigInt(data.slice(0, -1))\n                : data;\n            return parseInt(bigint.toString());\n        }\n        if (typeof data === \"string\") {\n            return new TextDecoder().decode((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(data));\n        }\n        if (data instanceof Array)\n            return data.map((v) => fromData(v));\n        if (data instanceof Map) {\n            const tempJson = {};\n            data.forEach((value, key) => {\n                const convertedKey = fromData(key);\n                if (typeof convertedKey !== \"string\" &&\n                    typeof convertedKey !== \"number\") {\n                    throw new Error(\"Unsupported type (Note: Only bytes or integers can be keys of a JSON object)\");\n                }\n                tempJson[convertedKey] = fromData(value);\n            });\n            return tempJson;\n        }\n        throw new Error(\"Unsupported type (Note: Constructor cannot be converted to JSON)\");\n    }\n    return fromData(plutusData);\n}\nfunction castFrom(data, shape) {\n    if (!shape)\n        throw new Error(\"Could not type cast data.\");\n    const shapeType = (shape.anyOf ? \"enum\" : \"\") || shape.type;\n    if (shape.nullable) {\n        if (!(data instanceof Constr)) {\n            throw new Error(\"Could not type cast to nullable.\");\n        }\n        if (data.index === 0) {\n            const noNullableShape = { ...shape };\n            noNullableShape.nullable = false;\n            return castFrom(data.fields[0], noNullableShape);\n        }\n        else if (data.index === 1 && data.fields.length === 0)\n            return null;\n        throw new Error(\"Could not type cast to nullable.\");\n    }\n    switch (shapeType) {\n        case \"bigint\": {\n            if (typeof data !== \"bigint\") {\n                throw new Error(\"Could not type cast to bigint.\");\n            }\n            return data;\n        }\n        case \"string\": {\n            if (typeof data !== \"string\") {\n                throw new Error(\"Could not type cast to string/bytes.\");\n            }\n            return data;\n        }\n        case \"boolean\": {\n            if (!(data instanceof Constr)) {\n                throw new Error(\"Could not type cast to boolean.\");\n            }\n            if (data.index === 0 && data.fields.length === 0)\n                return false;\n            else if (data.index === 1 && data.fields.length === 0)\n                return true;\n            throw new Error(\"Could not type cast to boolean.\");\n        }\n        case \"enum\": {\n            if (!(data instanceof Constr)) {\n                throw new Error(\"Could not type cast to enum.\");\n            }\n            const enumSchema = shape.anyOf[data.index];\n            if (!enumSchema)\n                throw new Error(\"Could not type cast to enum.\");\n            switch (enumSchema.type) {\n                case \"string\": {\n                    if (typeof enumSchema.const === \"string\" &&\n                        /[A-Z]/.test(enumSchema.const[0]) && data.fields.length === 0) {\n                        return enumSchema.const;\n                    }\n                    throw new Error(\"Could not type cast to enum.\");\n                }\n                case \"object\": {\n                    const objectSchema = enumSchema.properties;\n                    const key = Object.keys(objectSchema)[0];\n                    if (!(/[A-Z]/.test(key[0]))) {\n                        throw new Error(\"Could not type cast to enum. Enums need to start with an uppercase letter.\");\n                    }\n                    return {\n                        [key]: castFrom(data.fields, objectSchema[key]),\n                    };\n                }\n            }\n            throw new Error(\"Could not type cast to enum.\");\n        }\n        case \"object\": {\n            if (data instanceof Constr && data.index === 0 && shape.hasConstr) {\n                const fields = {};\n                Object.entries(shape.properties).forEach(([name, schema], index) => {\n                    if ((/[A-Z]/.test(name[0]))) {\n                        throw new Error(\"Could not type cast to object. Object properties need to start with a lowercase letter.\");\n                    }\n                    fields[name] = castFrom(data.fields[index], schema);\n                });\n                return fields;\n            }\n            else if (data instanceof Array && !shape.hasConstr) {\n                const fields = {};\n                Object.entries(shape.properties).forEach(([name, schema], index) => {\n                    if ((/[A-Z]/.test(name[0]))) {\n                        throw new Error(\"Could not type cast to object. Object properties need to start with a lowercase letter.\");\n                    }\n                    fields[name] = castFrom(data[index], schema);\n                });\n                return fields;\n            }\n            throw new Error(\"Could not type cast to object.\");\n        }\n        case \"array\": {\n            if (shape.items instanceof Array) { // tuple\n                if (data instanceof Constr && data.index === 0 && shape.hasConstr) {\n                    return data.fields.map((field, index) => castFrom(field, shape.items[index]));\n                }\n                else if (data instanceof Array && !shape.hasConstr) {\n                    return data.map((field, index) => castFrom(field, shape.items[index]));\n                }\n                throw new Error(\"Could not type cast to tuple.\");\n            }\n            else { // array\n                if (!(data instanceof Array)) {\n                    throw new Error(\"Could not type cast to array.\");\n                }\n                return data.map((field) => castFrom(field, shape.items));\n            }\n        }\n        case \"map\": {\n            if (!(data instanceof Map)) {\n                throw new Error(\"Could not type cast to map.\");\n            }\n            const map = new Map();\n            for (const [key, value] of (data)\n                .entries()) {\n                map.set(castFrom(key, shape.key), castFrom(value, shape.value));\n            }\n            return map;\n        }\n        case undefined:\n            return data;\n    }\n    throw new Error(\"Could not type cast data.\");\n}\nfunction castTo(struct, shape) {\n    if (!shape)\n        throw new Error(\"Could not type cast struct.\");\n    const shapeType = (shape.anyOf ? \"enum\" : \"\") || shape.type;\n    if (shape.nullable) {\n        if (struct !== null) {\n            const noNullableShape = { ...shape };\n            noNullableShape.nullable = false;\n            return new Constr(0, [castTo(struct, noNullableShape)]);\n        }\n        return new Constr(1, []);\n    }\n    switch (shapeType) {\n        case \"bigint\": {\n            if (typeof struct !== \"bigint\") {\n                throw new Error(\"Could not type cast to bigint.\");\n            }\n            return struct;\n        }\n        case \"string\": {\n            if (typeof struct !== \"string\") {\n                throw new Error(\"Could not type cast to string/bytes.\");\n            }\n            return struct;\n        }\n        case \"boolean\": {\n            if (typeof struct !== \"boolean\") {\n                throw new Error(\"Could not type cast to boolean.\");\n            }\n            return new Constr(struct ? 1 : 0, []);\n        }\n        case \"enum\": {\n            switch (typeof struct) {\n                case \"string\": {\n                    if (!(/[A-Z]/.test(struct[0]))) {\n                        throw new Error(\"Could not type cast to enum. Enum needs to start with a uppercase letter.\");\n                    }\n                    const enumIndex = shape.anyOf.findIndex((schema) => schema.type === \"string\" && schema.const === struct);\n                    if (enumIndex < 0)\n                        throw \"Could not type cast to enum.\";\n                    return new Constr(enumIndex, []);\n                }\n                case \"object\": {\n                    if (struct === null)\n                        throw \"Could not type cast to enum.\";\n                    const enumKey = Object.keys(struct)[0];\n                    if (!(/[A-Z]/.test(enumKey[0]))) {\n                        throw new Error(\"Could not type cast to enum. Enum needs to start with a uppercase letter.\");\n                    }\n                    const enumIndex = shape.anyOf.findIndex((schema) => schema.type === \"object\" &&\n                        Object.keys(schema.properties)[0] === enumKey);\n                    const enumSchema = shape.anyOf[enumIndex].properties[enumKey];\n                    return new Constr(enumIndex, struct[enumKey].map((item, index) => castTo(item, enumSchema.items[index])));\n                }\n            }\n            throw new Error(\"Could not type cast to enum.\");\n        }\n        case \"object\": {\n            if (typeof struct !== \"object\" || struct === null) {\n                throw new Error(\"Could not type cast to object.\");\n            }\n            const fields = Object.keys(shape.properties).map((name) => castTo(struct[name], shape.properties[name]));\n            return shape.hasConstr ? new Constr(0, fields) : fields;\n        }\n        case \"array\": {\n            if (!(struct instanceof Array)) {\n                throw new Error(\"Could not type cast to array.\");\n            }\n            if (shape.items instanceof Array) { // tuple\n                const fields = struct.map((item, index) => castTo(item, shape.items[index]));\n                return shape.hasConstr ? new Constr(0, fields) : fields;\n            }\n            else { // array\n                return struct.map((item) => castTo(item, shape.items));\n            }\n        }\n        case \"map\": {\n            if (!(struct instanceof Map)) {\n                throw new Error(\"Could not type cast to map.\");\n            }\n            const map = new Map();\n            for (const [key, value] of (struct)\n                .entries()) {\n                map.set(castTo(key, shape.key), castTo(value, shape.value));\n            }\n            return map;\n        }\n        case undefined: {\n            return struct;\n        }\n    }\n    throw new Error(\"Could not type cast struct.\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/plutus/data.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/plutus/mod.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/plutus/mod.js ***!
  \**********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./node_modules/lucid-cardano/esm/src/plutus/data.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time.js */ \"./node_modules/lucid-cardano/esm/src/plutus/time.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _time_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _time_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_data_js__WEBPACK_IMPORTED_MODULE_0__]);\n_data_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _data_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _data_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3BsdXR1cy9tb2QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTBCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3NyYy9wbHV0dXMvbW9kLmpzP2M2ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZGF0YS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdGltZS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/plutus/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/plutus/time.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/plutus/time.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SLOT_CONFIG_NETWORK\": function() { return /* binding */ SLOT_CONFIG_NETWORK; },\n/* harmony export */   \"slotToBeginUnixTime\": function() { return /* binding */ slotToBeginUnixTime; },\n/* harmony export */   \"unixTimeToEnclosingSlot\": function() { return /* binding */ unixTimeToEnclosingSlot; }\n/* harmony export */ });\nconst SLOT_CONFIG_NETWORK = {\n    Mainnet: { zeroTime: 1596059091000, zeroSlot: 4492800, slotLength: 1000 },\n    Preview: { zeroTime: 1666656000000, zeroSlot: 0, slotLength: 1000 },\n    Preprod: {\n        zeroTime: 1654041600000 + 1728000000,\n        zeroSlot: 86400,\n        slotLength: 1000,\n    },\n    /** Customizable slot config (Initialized with 0 values). */\n    Custom: { zeroTime: 0, zeroSlot: 0, slotLength: 0 },\n};\nfunction slotToBeginUnixTime(slot, slotConfig) {\n    const msAfterBegin = (slot - slotConfig.zeroSlot) * slotConfig.slotLength;\n    return slotConfig.zeroTime + msAfterBegin;\n}\n// slotToBeginUnixTime and slotToEndUnixTime are identical when slotLength == 1. So we don't need to worry about this now.\n// function slotToEndUnixTime(slot: Slot, slotConfig: SlotConfig): UnixTime {\n//   return slotToBeginUnixTime(slot, slotConfig) + (slotConfig.slotLength - 1);\n// }\nfunction unixTimeToEnclosingSlot(unixTime, slotConfig) {\n    const timePassed = unixTime - slotConfig.zeroTime;\n    const slotsPassed = Math.floor(timePassed / slotConfig.slotLength);\n    return slotsPassed + slotConfig.zeroSlot;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3BsdXR1cy90aW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ1AsZUFBZSw4REFBOEQ7QUFDN0UsZUFBZSx3REFBd0Q7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxjQUFjLHlDQUF5QztBQUN2RDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZC1jYXJkYW5vL2VzbS9zcmMvcGx1dHVzL3RpbWUuanM/NTJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU0xPVF9DT05GSUdfTkVUV09SSyA9IHtcbiAgICBNYWlubmV0OiB7IHplcm9UaW1lOiAxNTk2MDU5MDkxMDAwLCB6ZXJvU2xvdDogNDQ5MjgwMCwgc2xvdExlbmd0aDogMTAwMCB9LFxuICAgIFByZXZpZXc6IHsgemVyb1RpbWU6IDE2NjY2NTYwMDAwMDAsIHplcm9TbG90OiAwLCBzbG90TGVuZ3RoOiAxMDAwIH0sXG4gICAgUHJlcHJvZDoge1xuICAgICAgICB6ZXJvVGltZTogMTY1NDA0MTYwMDAwMCArIDE3MjgwMDAwMDAsXG4gICAgICAgIHplcm9TbG90OiA4NjQwMCxcbiAgICAgICAgc2xvdExlbmd0aDogMTAwMCxcbiAgICB9LFxuICAgIC8qKiBDdXN0b21pemFibGUgc2xvdCBjb25maWcgKEluaXRpYWxpemVkIHdpdGggMCB2YWx1ZXMpLiAqL1xuICAgIEN1c3RvbTogeyB6ZXJvVGltZTogMCwgemVyb1Nsb3Q6IDAsIHNsb3RMZW5ndGg6IDAgfSxcbn07XG5leHBvcnQgZnVuY3Rpb24gc2xvdFRvQmVnaW5Vbml4VGltZShzbG90LCBzbG90Q29uZmlnKSB7XG4gICAgY29uc3QgbXNBZnRlckJlZ2luID0gKHNsb3QgLSBzbG90Q29uZmlnLnplcm9TbG90KSAqIHNsb3RDb25maWcuc2xvdExlbmd0aDtcbiAgICByZXR1cm4gc2xvdENvbmZpZy56ZXJvVGltZSArIG1zQWZ0ZXJCZWdpbjtcbn1cbi8vIHNsb3RUb0JlZ2luVW5peFRpbWUgYW5kIHNsb3RUb0VuZFVuaXhUaW1lIGFyZSBpZGVudGljYWwgd2hlbiBzbG90TGVuZ3RoID09IDEuIFNvIHdlIGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgdGhpcyBub3cuXG4vLyBmdW5jdGlvbiBzbG90VG9FbmRVbml4VGltZShzbG90OiBTbG90LCBzbG90Q29uZmlnOiBTbG90Q29uZmlnKTogVW5peFRpbWUge1xuLy8gICByZXR1cm4gc2xvdFRvQmVnaW5Vbml4VGltZShzbG90LCBzbG90Q29uZmlnKSArIChzbG90Q29uZmlnLnNsb3RMZW5ndGggLSAxKTtcbi8vIH1cbmV4cG9ydCBmdW5jdGlvbiB1bml4VGltZVRvRW5jbG9zaW5nU2xvdCh1bml4VGltZSwgc2xvdENvbmZpZykge1xuICAgIGNvbnN0IHRpbWVQYXNzZWQgPSB1bml4VGltZSAtIHNsb3RDb25maWcuemVyb1RpbWU7XG4gICAgY29uc3Qgc2xvdHNQYXNzZWQgPSBNYXRoLmZsb29yKHRpbWVQYXNzZWQgLyBzbG90Q29uZmlnLnNsb3RMZW5ndGgpO1xuICAgIHJldHVybiBzbG90c1Bhc3NlZCArIHNsb3RDb25maWcuemVyb1Nsb3Q7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/plutus/time.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/provider/blockfrost.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/provider/blockfrost.js ***!
  \*******************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Blockfrost\": function() { return /* binding */ Blockfrost; },\n/* harmony export */   \"datumJsonToCbor\": function() { return /* binding */ datumJsonToCbor; },\n/* harmony export */   \"tryToDoubleCborEncodedScript\": function() { return /* binding */ tryToDoubleCborEncodedScript; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../package.js */ \"./node_modules/lucid-cardano/esm/package.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass Blockfrost {\n    constructor(url, projectId) {\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"projectId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.url = url;\n        this.projectId = projectId || \"\";\n    }\n    async getProtocolParameters() {\n        const result = await fetch(`${this.url}/epochs/latest/parameters`, {\n            headers: { project_id: this.projectId, lucid },\n        }).then((res) => res.json());\n        return {\n            minFeeA: parseInt(result.min_fee_a),\n            minFeeB: parseInt(result.min_fee_b),\n            maxTxSize: parseInt(result.max_tx_size),\n            maxValSize: parseInt(result.max_val_size),\n            keyDeposit: BigInt(result.key_deposit),\n            poolDeposit: BigInt(result.pool_deposit),\n            priceMem: parseFloat(result.price_mem),\n            priceStep: parseFloat(result.price_step),\n            maxTxExMem: BigInt(result.max_tx_ex_mem),\n            maxTxExSteps: BigInt(result.max_tx_ex_steps),\n            coinsPerUtxoByte: BigInt(result.coins_per_utxo_size),\n            collateralPercentage: parseInt(result.collateral_percent),\n            maxCollateralInputs: parseInt(result.max_collateral_inputs),\n            costModels: result.cost_models,\n        };\n    }\n    async getUtxos(addressOrCredential) {\n        const queryPredicate = (() => {\n            if (typeof addressOrCredential === \"string\")\n                return addressOrCredential;\n            const credentialBech32 = addressOrCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\")\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\"); // should be 'script' (CIP-0005)\n            return credentialBech32;\n        })();\n        let result = [];\n        let page = 1;\n        while (true) {\n            const pageResult = await fetch(`${this.url}/addresses/${queryPredicate}/utxos?page=${page}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (pageResult.error) {\n                if (pageResult.status_code === 404) {\n                    return [];\n                }\n                else {\n                    throw new Error(\"Could not fetch UTxOs from Blockfrost. Try again.\");\n                }\n            }\n            result = result.concat(pageResult);\n            if (pageResult.length <= 0)\n                break;\n            page++;\n        }\n        return this.blockfrostUtxosToUtxos(result);\n    }\n    async getUtxosWithUnit(addressOrCredential, unit) {\n        const queryPredicate = (() => {\n            if (typeof addressOrCredential === \"string\")\n                return addressOrCredential;\n            const credentialBech32 = addressOrCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\")\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHash.from_hex(addressOrCredential.hash).to_bech32(\"addr_vkh\"); // should be 'script' (CIP-0005)\n            return credentialBech32;\n        })();\n        let result = [];\n        let page = 1;\n        while (true) {\n            const pageResult = await fetch(`${this.url}/addresses/${queryPredicate}/utxos/${unit}?page=${page}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (pageResult.error) {\n                if (pageResult.status_code === 404) {\n                    return [];\n                }\n                else {\n                    throw new Error(\"Could not fetch UTxOs from Blockfrost. Try again.\");\n                }\n            }\n            result = result.concat(pageResult);\n            if (pageResult.length <= 0)\n                break;\n            page++;\n        }\n        return this.blockfrostUtxosToUtxos(result);\n    }\n    async getUtxoByUnit(unit) {\n        const addresses = await fetch(`${this.url}/assets/${unit}/addresses?count=2`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n        if (!addresses || addresses.error) {\n            throw new Error(\"Unit not found.\");\n        }\n        if (addresses.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        const address = addresses[0].address;\n        const utxos = await this.getUtxosWithUnit(address, unit);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return utxos[0];\n    }\n    async getUtxosByOutRef(outRefs) {\n        const queryHashes = [...new Set(outRefs.map((outRef) => outRef.txHash))];\n        const utxos = await Promise.all(queryHashes.map(async (txHash) => {\n            const result = await fetch(`${this.url}/txs/${txHash}/utxos`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n            if (!result || result.error) {\n                return [];\n            }\n            const utxosResult = result.outputs.map((\n            // deno-lint-ignore no-explicit-any\n            r) => ({\n                ...r,\n                tx_hash: txHash,\n            }));\n            return this.blockfrostUtxosToUtxos(utxosResult);\n        }));\n        return utxos.reduce((acc, utxos) => acc.concat(utxos), []).filter((utxo) => outRefs.some((outRef) => utxo.txHash === outRef.txHash && utxo.outputIndex === outRef.outputIndex));\n    }\n    async getDelegation(rewardAddress) {\n        const result = await fetch(`${this.url}/accounts/${rewardAddress}`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n        if (!result || result.error) {\n            return { poolId: null, rewards: 0n };\n        }\n        return {\n            poolId: result.pool_id || null,\n            rewards: BigInt(result.withdrawable_amount),\n        };\n    }\n    async getDatum(datumHash) {\n        const datum = await fetch(`${this.url}/scripts/datum/${datumHash}/cbor`, {\n            headers: { project_id: this.projectId, lucid },\n        })\n            .then((res) => res.json())\n            .then((res) => res.cbor);\n        if (!datum || datum.error) {\n            throw new Error(`No datum found for datum hash: ${datumHash}`);\n        }\n        return datum;\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return new Promise((res) => {\n            const confirmation = setInterval(async () => {\n                const isConfirmed = await fetch(`${this.url}/txs/${txHash}`, {\n                    headers: { project_id: this.projectId, lucid },\n                }).then((res) => res.json());\n                if (isConfirmed && !isConfirmed.error) {\n                    clearInterval(confirmation);\n                    res(true);\n                    return;\n                }\n            }, checkInterval);\n        });\n    }\n    async submitTx(tx) {\n        const result = await fetch(`${this.url}/tx/submit`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/cbor\",\n                project_id: this.projectId,\n                lucid,\n            },\n            body: (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(tx),\n        }).then((res) => res.json());\n        if (!result || result.error) {\n            if (result?.status_code === 400)\n                throw new Error(result.message);\n            else\n                throw new Error(\"Could not submit transaction.\");\n        }\n        return result;\n    }\n    async blockfrostUtxosToUtxos(result) {\n        return (await Promise.all(result.map(async (r) => ({\n            txHash: r.tx_hash,\n            outputIndex: r.output_index,\n            assets: (() => {\n                const a = {};\n                r.amount.forEach((am) => {\n                    a[am.unit] = BigInt(am.quantity);\n                });\n                return a;\n            })(),\n            address: r.address,\n            datumHash: !r.inline_datum ? r.data_hash : undefined,\n            datum: r.inline_datum,\n            scriptRef: r.reference_script_hash &&\n                (await (async () => {\n                    const { type, } = await fetch(`${this.url}/scripts/${r.reference_script_hash}`, {\n                        headers: { project_id: this.projectId, lucid },\n                    }).then((res) => res.json());\n                    // TODO: support native scripts\n                    if (type === \"Native\" || type === \"native\") {\n                        throw new Error(\"Native script ref not implemented!\");\n                    }\n                    const { cbor: script } = await fetch(`${this.url}/scripts/${r.reference_script_hash}/cbor`, { headers: { project_id: this.projectId, lucid } }).then((res) => res.json());\n                    return {\n                        type: type === \"plutusV1\" ? \"PlutusV1\" : \"PlutusV2\",\n                        script: tryToDoubleCborEncodedScript(script),\n                    };\n                })()),\n        }))));\n    }\n}\nfunction tryToDoubleCborEncodedScript(script) {\n    try {\n        _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script)).bytes());\n        return script;\n    }\n    catch (_e) {\n        return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript[\"new\"]((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script)).to_bytes());\n    }\n}\n/**\n * This function is temporarily needed only, until Blockfrost returns the datum natively in Cbor.\n * The conversion is ambigious, that's why it's better to get the datum directly in Cbor.\n */\nfunction datumJsonToCbor(json) {\n    const convert = (json) => {\n        if (!isNaN(json.int)) {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.new_integer(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigInt.from_str(json.int.toString()));\n        }\n        else if (json.bytes || !isNaN(Number(json.bytes))) {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.new_bytes((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(json.bytes));\n        }\n        else if (json.map) {\n            const m = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusMap[\"new\"]();\n            json.map.forEach(({ k, v }) => {\n                m.insert(convert(k), convert(v));\n            });\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.new_map(m);\n        }\n        else if (json.list) {\n            const l = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusList[\"new\"]();\n            json.list.forEach((v) => {\n                l.add(convert(v));\n            });\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.new_list(l);\n        }\n        else if (!isNaN(json.constructor)) {\n            const l = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusList[\"new\"]();\n            json.fields.forEach((v) => {\n                l.add(convert(v));\n            });\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusData.new_constr_plutus_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.ConstrPlutusData[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(json.constructor.toString()), l));\n        }\n        throw new Error(\"Unsupported type\");\n    };\n    return (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(convert(json).to_bytes());\n}\nconst lucid = _package_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].version; // Lucid version\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/provider/blockfrost.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/provider/emulator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/provider/emulator.js ***!
  \*****************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Emulator\": function() { return /* binding */ Emulator; }\n/* harmony export */ });\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/core.js */ \"./node_modules/lucid-cardano/esm/src/core/core.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils.js */ \"./node_modules/lucid-cardano/esm/src/utils/utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_core_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_core_core_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__, _utils_utils_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass Emulator {\n    constructor(accounts, protocolParameters = _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.PROTOCOL_PARAMETERS_DEFAULT) {\n        Object.defineProperty(this, \"ledger\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mempool\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        /**\n         * Only stake key registrations/delegations and rewards are tracked.\n         * Other certificates are not tracked.\n         */\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"blockHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"slot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"protocolParameters\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"datumTable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        const GENESIS_HASH = \"00\".repeat(32);\n        this.blockHeight = 0;\n        this.slot = 0;\n        this.time = Date.now();\n        this.ledger = {};\n        accounts.forEach(({ address, assets }, index) => {\n            this.ledger[GENESIS_HASH + index] = {\n                utxo: {\n                    txHash: GENESIS_HASH,\n                    outputIndex: index,\n                    address,\n                    assets,\n                },\n                spent: false,\n            };\n        });\n        this.protocolParameters = protocolParameters;\n    }\n    now() {\n        return this.time;\n    }\n    awaitSlot(length = 1) {\n        this.slot += length;\n        this.time += length * 1000;\n        const currentHeight = this.blockHeight;\n        this.blockHeight = Math.floor(this.slot / 20);\n        if (this.blockHeight > currentHeight) {\n            for (const [outRef, { utxo, spent }] of Object.entries(this.mempool)) {\n                this.ledger[outRef] = { utxo, spent };\n            }\n            for (const [outRef, { spent }] of Object.entries(this.ledger)) {\n                if (spent)\n                    delete this.ledger[outRef];\n            }\n            this.mempool = {};\n        }\n    }\n    awaitBlock(height = 1) {\n        this.blockHeight += height;\n        this.slot += height * 20;\n        this.time += height * 20 * 1000;\n        for (const [outRef, { utxo, spent }] of Object.entries(this.mempool)) {\n            this.ledger[outRef] = { utxo, spent };\n        }\n        for (const [outRef, { spent }] of Object.entries(this.ledger)) {\n            if (spent)\n                delete this.ledger[outRef];\n        }\n        this.mempool = {};\n    }\n    getUtxos(addressOrCredential) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => {\n            if (typeof addressOrCredential === \"string\") {\n                return addressOrCredential === utxo.address ? utxo : [];\n            }\n            else {\n                const { paymentCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(utxo.address);\n                return paymentCredential?.hash === addressOrCredential.hash ? utxo : [];\n            }\n        });\n        return Promise.resolve(utxos);\n    }\n    getProtocolParameters() {\n        return Promise.resolve(this.protocolParameters);\n    }\n    getDatum(datumHash) {\n        return Promise.resolve(this.datumTable[datumHash]);\n    }\n    getUtxosWithUnit(addressOrCredential, unit) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => {\n            if (typeof addressOrCredential === \"string\") {\n                return addressOrCredential === utxo.address && utxo.assets[unit] > 0n\n                    ? utxo\n                    : [];\n            }\n            else {\n                const { paymentCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(utxo.address);\n                return paymentCredential?.hash === addressOrCredential.hash &&\n                    utxo.assets[unit] > 0n\n                    ? utxo\n                    : [];\n            }\n        });\n        return Promise.resolve(utxos);\n    }\n    getUtxosByOutRef(outRefs) {\n        return Promise.resolve(outRefs.map((outRef) => this.ledger[outRef.txHash + outRef.outputIndex].utxo));\n    }\n    getUtxoByUnit(unit) {\n        const utxos = Object.values(this.ledger).flatMap(({ utxo }) => utxo.assets[unit] > 0n ? utxo : []);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return Promise.resolve(utxos[0]);\n    }\n    getDelegation(rewardAddress) {\n        return Promise.resolve({\n            poolId: this.chain[rewardAddress]?.delegation?.poolId || null,\n            rewards: this.chain[rewardAddress]?.delegation?.rewards || 0n,\n        });\n    }\n    awaitTx(txHash) {\n        if (this.mempool[txHash + 0]) {\n            this.awaitBlock();\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(true);\n    }\n    /**\n     * Emulates the behaviour of the reward distribution at epoch boundaries.\n     * Stake keys need to be registered and delegated like on a real chain in order to receive rewards.\n     */\n    distributeRewards(rewards) {\n        for (const [rewardAddress, { registeredStake, delegation }] of Object.entries(this.chain)) {\n            if (registeredStake && delegation.poolId) {\n                this.chain[rewardAddress] = {\n                    registeredStake,\n                    delegation: {\n                        poolId: delegation.poolId,\n                        rewards: delegation.rewards += rewards,\n                    },\n                };\n            }\n        }\n        this.awaitBlock();\n    }\n    submitTx(tx) {\n        /*\n            Checks that are already handled by the transaction builder:\n              - Fee calculation\n              - Phase 2 evaluation\n              - Input value == Output value (including mint value)\n              - Min ada requirement\n              - Stake key registration deposit amount\n              - Collateral\n    \r\n            Checks that need to be done:\n              - Verify witnesses\n              - Correct count of scripts and vkeys\n              - Stake key registration\n              - Withdrawals\n              - Validity interval\n         */\n        const desTx = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.Transaction.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(tx));\n        const body = desTx.body();\n        const witnesses = desTx.witness_set();\n        const datums = witnesses.plutus_data();\n        const txHash = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_transaction(body).to_hex();\n        // Validity interval\n        // Lower bound is inclusive?\n        // Upper bound is inclusive?\n        const lowerBound = body.validity_start_interval()\n            ? parseInt(body.validity_start_interval().to_str())\n            : null;\n        const upperBound = body.ttl() ? parseInt(body.ttl().to_str()) : null;\n        if (Number.isInteger(lowerBound) && this.slot < lowerBound) {\n            throw new Error(`Lower bound (${lowerBound}) not in slot range (${this.slot}).`);\n        }\n        if (Number.isInteger(upperBound) && this.slot > upperBound) {\n            throw new Error(`Upper bound (${upperBound}) not in slot range (${this.slot}).`);\n        }\n        // Datums in witness set\n        const datumTable = (() => {\n            const table = {};\n            for (let i = 0; i < (datums?.len() || 0); i++) {\n                const datum = datums.get(i);\n                const datumHash = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.hash_plutus_data(datum).to_hex();\n                table[datumHash] = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(datum.to_bytes());\n            }\n            return table;\n        })();\n        const consumedHashes = new Set();\n        // Witness keys\n        const keyHashes = (() => {\n            const keyHashes = [];\n            for (let i = 0; i < (witnesses.vkeys()?.len() || 0); i++) {\n                const witness = witnesses.vkeys().get(i);\n                const publicKey = witness.vkey().public_key();\n                const keyHash = publicKey.hash().to_hex();\n                if (!publicKey.verify((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(txHash), witness.signature())) {\n                    throw new Error(`Invalid vkey witness. Key hash: ${keyHash}`);\n                }\n                keyHashes.push(keyHash);\n            }\n            return keyHashes;\n        })();\n        // We only need this to verify native scripts. The check happens in the CML.\n        const edKeyHashes = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHashes[\"new\"]();\n        keyHashes.forEach((keyHash) => edKeyHashes.add(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.Ed25519KeyHash.from_hex(keyHash)));\n        const nativeHashes = (() => {\n            const scriptHashes = [];\n            for (let i = 0; i < (witnesses.native_scripts()?.len() || 0); i++) {\n                const witness = witnesses.native_scripts().get(i);\n                const scriptHash = witness.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.NativeScript)\n                    .to_hex();\n                if (!witness.verify(Number.isInteger(lowerBound)\n                    ? _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(lowerBound.toString())\n                    : undefined, Number.isInteger(upperBound)\n                    ? _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(upperBound.toString())\n                    : undefined, edKeyHashes)) {\n                    throw new Error(`Invalid native script witness. Script hash: ${scriptHash}`);\n                }\n                for (let i = 0; i < witness.get_required_signers().len(); i++) {\n                    const keyHash = witness.get_required_signers().get(i).to_hex();\n                    consumedHashes.add(keyHash);\n                }\n                scriptHashes.push(scriptHash);\n            }\n            return scriptHashes;\n        })();\n        const nativeHashesOptional = {};\n        const plutusHashesOptional = [];\n        const plutusHashes = (() => {\n            const scriptHashes = [];\n            for (let i = 0; i < (witnesses.plutus_scripts()?.len() || 0); i++) {\n                const script = witnesses.plutus_scripts().get(i);\n                const scriptHash = script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV1)\n                    .to_hex();\n                scriptHashes.push(scriptHash);\n            }\n            for (let i = 0; i < (witnesses.plutus_v2_scripts()?.len() || 0); i++) {\n                const script = witnesses.plutus_v2_scripts().get(i);\n                const scriptHash = script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV2)\n                    .to_hex();\n                scriptHashes.push(scriptHash);\n            }\n            return scriptHashes;\n        })();\n        const inputs = body.inputs();\n        inputs.sort();\n        const resolvedInputs = [];\n        // Check existence of inputs and look for script refs.\n        for (let i = 0; i < inputs.len(); i++) {\n            const input = inputs.get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entryLedger = this.ledger[outRef];\n            const { entry, type } = !entryLedger\n                ? { entry: this.mempool[outRef], type: \"Mempool\" }\n                : { entry: entryLedger, type: \"Ledger\" };\n            if (!entry || entry.spent) {\n                throw new Error(`Could not spend UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const scriptRef = entry.utxo.scriptRef;\n            if (scriptRef) {\n                switch (scriptRef.type) {\n                    case \"Native\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.NativeScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        nativeHashesOptional[script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.NativeScript).to_hex()] = script;\n                        break;\n                    }\n                    case \"PlutusV1\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV1).to_hex());\n                        break;\n                    }\n                    case \"PlutusV2\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV2).to_hex());\n                        break;\n                    }\n                }\n            }\n            if (entry.utxo.datumHash)\n                consumedHashes.add(entry.utxo.datumHash);\n            resolvedInputs.push({ entry, type });\n        }\n        // Check existence of reference inputs and look for script refs.\n        for (let i = 0; i < (body.reference_inputs()?.len() || 0); i++) {\n            const input = body.reference_inputs().get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entry = this.ledger[outRef] || this.mempool[outRef];\n            if (!entry || entry.spent) {\n                throw new Error(`Could not read UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const scriptRef = entry.utxo.scriptRef;\n            if (scriptRef) {\n                switch (scriptRef.type) {\n                    case \"Native\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.NativeScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        nativeHashesOptional[script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.NativeScript).to_hex()] = script;\n                        break;\n                    }\n                    case \"PlutusV1\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV1).to_hex());\n                        break;\n                    }\n                    case \"PlutusV2\": {\n                        const script = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript.from_bytes((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.fromHex)(scriptRef.script));\n                        plutusHashesOptional.push(script.hash(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.ScriptHashNamespace.PlutusV2).to_hex());\n                        break;\n                    }\n                }\n            }\n            if (entry.utxo.datumHash)\n                consumedHashes.add(entry.utxo.datumHash);\n        }\n        const redeemers = (() => {\n            const tagMap = {\n                0: \"Spend\",\n                1: \"Mint\",\n                2: \"Cert\",\n                3: \"Reward\",\n            };\n            const collected = [];\n            for (let i = 0; i < (witnesses.redeemers()?.len() || 0); i++) {\n                const redeemer = witnesses.redeemers().get(i);\n                collected.push({\n                    tag: tagMap[redeemer.tag().kind()],\n                    index: parseInt(redeemer.index().to_str()),\n                });\n            }\n            return collected;\n        })();\n        function checkAndConsumeHash(credential, tag, index) {\n            switch (credential.type) {\n                case \"Key\": {\n                    if (!keyHashes.includes(credential.hash)) {\n                        throw new Error(`Missing vkey witness. Key hash: ${credential.hash}`);\n                    }\n                    consumedHashes.add(credential.hash);\n                    break;\n                }\n                case \"Script\":\n                    if (nativeHashes.includes(credential.hash)) {\n                        consumedHashes.add(credential.hash);\n                        break;\n                    }\n                    else if (nativeHashesOptional[credential.hash]) {\n                        if (!nativeHashesOptional[credential.hash].verify(Number.isInteger(lowerBound)\n                            ? _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(lowerBound.toString())\n                            : undefined, Number.isInteger(upperBound)\n                            ? _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(upperBound.toString())\n                            : undefined, edKeyHashes)) {\n                            throw new Error(`Invalid native script witness. Script hash: ${credential.hash}`);\n                        }\n                        break;\n                    }\n                    else if (plutusHashes.includes(credential.hash) ||\n                        plutusHashesOptional.includes(credential.hash)) {\n                        if (redeemers.find((redeemer) => redeemer.tag === tag && redeemer.index === index)) {\n                            consumedHashes.add(credential.hash);\n                            break;\n                        }\n                    }\n                    throw new Error(`Missing script witness. Script hash: ${credential.hash}`);\n            }\n        }\n        // Check collateral inputs\n        for (let i = 0; i < (body.collateral()?.len() || 0); i++) {\n            const input = body.collateral().get(i);\n            const outRef = input.transaction_id().to_hex() + input.index().to_str();\n            const entry = this.ledger[outRef] || this.mempool[outRef];\n            if (!entry || entry.spent) {\n                throw new Error(`Could not read UTxO: ${JSON.stringify({\n                    txHash: entry?.utxo.txHash,\n                    outputIndex: entry?.utxo.outputIndex,\n                })}\\nIt does not exist or was already spent.`);\n            }\n            const { paymentCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(entry.utxo.address);\n            if (paymentCredential?.type === \"Script\") {\n                throw new Error(\"Collateral inputs can only contain vkeys.\");\n            }\n            checkAndConsumeHash(paymentCredential, null, null);\n        }\n        // Check required signers\n        for (let i = 0; i < (body.required_signers()?.len() || 0); i++) {\n            const signer = body.required_signers().get(i);\n            checkAndConsumeHash({ type: \"Key\", hash: signer.to_hex() }, null, null);\n        }\n        // Check mint witnesses\n        for (let index = 0; index < (body.mint()?.keys().len() || 0); index++) {\n            const policyId = body.mint().keys().get(index).to_hex();\n            checkAndConsumeHash({ type: \"Script\", hash: policyId }, \"Mint\", index);\n        }\n        // Check withdrawal witnesses\n        const withdrawalRequests = [];\n        for (let index = 0; index < (body.withdrawals()?.keys().len() || 0); index++) {\n            const rawAddress = body.withdrawals().keys().get(index);\n            const withdrawal = BigInt(body.withdrawals().get(rawAddress).to_str());\n            const rewardAddress = rawAddress.to_address().to_bech32(undefined);\n            const { stakeCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(rewardAddress);\n            checkAndConsumeHash(stakeCredential, \"Reward\", index);\n            if (this.chain[rewardAddress]?.delegation.rewards !== withdrawal) {\n                throw new Error(\"Withdrawal amount doesn't match actual reward balance.\");\n            }\n            withdrawalRequests.push({ rewardAddress, withdrawal });\n        }\n        // Check cert witnesses\n        const certRequests = [];\n        for (let index = 0; index < (body.certs()?.len() || 0); index++) {\n            /*\n              Checking only:\n              1. Stake registration\n              2. Stake deregistration\n              3. Stake delegation\n      \r\n              All other certificate types are not checked and considered valid.\n            */\n            const cert = body.certs().get(index);\n            switch (cert.kind()) {\n                case 0: {\n                    const registration = cert.as_stake_registration();\n                    const rewardAddress = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.NetworkInfo.testnet().network_id(), registration.stake_credential()).to_address().to_bech32(undefined);\n                    if (this.chain[rewardAddress]?.registeredStake) {\n                        throw new Error(`Stake key is already registered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Registration\", rewardAddress });\n                    break;\n                }\n                case 1: {\n                    const deregistration = cert.as_stake_deregistration();\n                    const rewardAddress = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.NetworkInfo.testnet().network_id(), deregistration.stake_credential()).to_address().to_bech32(undefined);\n                    const { stakeCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(rewardAddress);\n                    checkAndConsumeHash(stakeCredential, \"Cert\", index);\n                    if (!this.chain[rewardAddress]?.registeredStake) {\n                        throw new Error(`Stake key is already deregistered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Deregistration\", rewardAddress });\n                    break;\n                }\n                case 2: {\n                    const delegation = cert.as_stake_delegation();\n                    const rewardAddress = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.RewardAddress[\"new\"](_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.NetworkInfo.testnet().network_id(), delegation.stake_credential()).to_address().to_bech32(undefined);\n                    const poolId = delegation.pool_keyhash().to_bech32(\"pool\");\n                    const { stakeCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(rewardAddress);\n                    checkAndConsumeHash(stakeCredential, \"Cert\", index);\n                    if (!this.chain[rewardAddress]?.registeredStake &&\n                        !certRequests.find((request) => request.type === \"Registration\" &&\n                            request.rewardAddress === rewardAddress)) {\n                        throw new Error(`Stake key is not registered. Reward address: ${rewardAddress}`);\n                    }\n                    certRequests.push({ type: \"Delegation\", rewardAddress, poolId });\n                    break;\n                }\n            }\n        }\n        // Check input witnesses\n        resolvedInputs.forEach(({ entry: { utxo } }, index) => {\n            const { paymentCredential } = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAddressDetails)(utxo.address);\n            checkAndConsumeHash(paymentCredential, \"Spend\", index);\n        });\n        // Create outputs and consume datum hashes\n        const outputs = (() => {\n            const collected = [];\n            for (let i = 0; i < body.outputs().len(); i++) {\n                const output = body.outputs().get(i);\n                const unspentOutput = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionUnspentOutput[\"new\"](_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionInput[\"new\"](_core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.TransactionHash.from_hex(txHash), _core_core_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(i.toString())), output);\n                const utxo = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_2__.coreToUtxo)(unspentOutput);\n                if (utxo.datumHash)\n                    consumedHashes.add(utxo.datumHash);\n                collected.push({\n                    utxo,\n                    spent: false,\n                });\n            }\n            return collected;\n        })();\n        // Check consumed witnesses\n        const [extraKeyHash] = keyHashes.filter((keyHash) => !consumedHashes.has(keyHash));\n        if (extraKeyHash) {\n            throw new Error(`Extraneous vkey witness. Key hash: ${extraKeyHash}`);\n        }\n        const [extraNativeHash] = nativeHashes.filter((scriptHash) => !consumedHashes.has(scriptHash));\n        if (extraNativeHash) {\n            throw new Error(`Extraneous native script. Script hash: ${extraNativeHash}`);\n        }\n        const [extraPlutusHash] = plutusHashes.filter((scriptHash) => !consumedHashes.has(scriptHash));\n        if (extraPlutusHash) {\n            throw new Error(`Extraneous plutus script. Script hash: ${extraPlutusHash}`);\n        }\n        const [extraDatumHash] = Object.keys(datumTable).filter((datumHash) => !consumedHashes.has(datumHash));\n        if (extraDatumHash) {\n            throw new Error(`Extraneous plutus data. Datum hash: ${extraDatumHash}`);\n        }\n        // Apply transitions\n        resolvedInputs.forEach(({ entry, type }) => {\n            const outRef = entry.utxo.txHash + entry.utxo.outputIndex;\n            entry.spent = true;\n            if (type === \"Ledger\")\n                this.ledger[outRef] = entry;\n            else if (type === \"Mempool\")\n                this.mempool[outRef] = entry;\n        });\n        withdrawalRequests.forEach(({ rewardAddress, withdrawal }) => {\n            this.chain[rewardAddress].delegation.rewards -= withdrawal;\n        });\n        certRequests.forEach(({ type, rewardAddress, poolId }) => {\n            switch (type) {\n                case \"Registration\": {\n                    if (this.chain[rewardAddress]) {\n                        this.chain[rewardAddress].registeredStake = true;\n                    }\n                    else {\n                        this.chain[rewardAddress] = {\n                            registeredStake: true,\n                            delegation: { poolId: null, rewards: 0n },\n                        };\n                    }\n                    break;\n                }\n                case \"Deregistration\": {\n                    this.chain[rewardAddress].registeredStake = false;\n                    this.chain[rewardAddress].delegation.poolId = null;\n                    break;\n                }\n                case \"Delegation\": {\n                    this.chain[rewardAddress].delegation.poolId = poolId;\n                }\n            }\n        });\n        outputs.forEach(({ utxo, spent }) => {\n            this.mempool[utxo.txHash + utxo.outputIndex] = {\n                utxo,\n                spent,\n            };\n        });\n        for (const [datumHash, datum] of Object.entries(datumTable)) {\n            this.datumTable[datumHash] = datum;\n        }\n        return Promise.resolve(txHash);\n    }\n    log() {\n        function getRandomColor(unit) {\n            const seed = unit === \"lovelace\" ? \"1\" : unit;\n            // Convert the seed string to a number\n            let num = 0;\n            for (let i = 0; i < seed.length; i++) {\n                num += seed.charCodeAt(i);\n            }\n            // Generate a color based on the seed number\n            const r = (num * 123) % 256;\n            const g = (num * 321) % 256;\n            const b = (num * 213) % 256;\n            // Return the color as a hex string\n            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        }\n        const totalBalances = {};\n        const balances = {};\n        for (const { utxo } of Object.values(this.ledger)) {\n            for (const [unit, quantity] of Object.entries(utxo.assets)) {\n                if (!balances[utxo.address]) {\n                    balances[utxo.address] = { [unit]: quantity };\n                }\n                else if (!balances[utxo.address]?.[unit]) {\n                    balances[utxo.address][unit] = quantity;\n                }\n                else {\n                    balances[utxo.address][unit] += quantity;\n                }\n                if (!totalBalances[unit]) {\n                    totalBalances[unit] = quantity;\n                }\n                else {\n                    totalBalances[unit] += quantity;\n                }\n            }\n        }\n        console.log(\"\\n%cBlockchain state\", \"color:purple\");\n        console.log(`\n    Block height:   %c${this.blockHeight}%c\n    Slot:           %c${this.slot}%c\n    Unix time:      %c${this.time}\n  `, \"color:yellow\", \"color:white\", \"color:yellow\", \"color:white\", \"color:yellow\");\n        console.log(\"\\n\");\n        for (const [address, assets] of Object.entries(balances)) {\n            console.log(`Address: %c${address}`, \"color:blue\", \"\\n\");\n            for (const [unit, quantity] of Object.entries(assets)) {\n                const barLength = Math.max(Math.floor(60 * (Number(quantity) / Number(totalBalances[unit]))), 1);\n                console.log(`%c${\"\\u2586\".repeat(barLength) + \" \".repeat(60 - barLength)}`, `color: ${getRandomColor(unit)}`, \"\", `${unit}:`, quantity, \"\");\n            }\n            console.log(`\\n${\"\\u2581\".repeat(60)}\\n`);\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/provider/emulator.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/provider/kupmios.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/provider/kupmios.js ***!
  \****************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Kupmios\": function() { return /* binding */ Kupmios; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mod.js */ \"./node_modules/lucid-cardano/esm/src/utils/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__, _utils_mod_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass Kupmios {\n    /**\n     * @param kupoUrl: http(s)://localhost:1442\n     * @param ogmiosUrl: ws(s)://localhost:1337\n     */\n    constructor(kupoUrl, ogmiosUrl) {\n        Object.defineProperty(this, \"kupoUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ogmiosUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.kupoUrl = kupoUrl;\n        this.ogmiosUrl = ogmiosUrl;\n    }\n    async getProtocolParameters() {\n        const client = await this.ogmiosWsp(\"Query\", {\n            query: \"currentProtocolParameters\",\n        });\n        return new Promise((res, rej) => {\n            client.addEventListener(\"message\", (msg) => {\n                try {\n                    const { result } = JSON.parse(msg.data);\n                    // deno-lint-ignore no-explicit-any\n                    const costModels = {};\n                    Object.keys(result.costModels).forEach((v) => {\n                        const version = v.split(\":\")[1].toUpperCase();\n                        const plutusVersion = \"Plutus\" + version;\n                        costModels[plutusVersion] = result.costModels[v];\n                    });\n                    const [memNum, memDenom] = result.prices.memory.split(\"/\");\n                    const [stepsNum, stepsDenom] = result.prices.steps.split(\"/\");\n                    res({\n                        minFeeA: parseInt(result.minFeeCoefficient),\n                        minFeeB: parseInt(result.minFeeConstant),\n                        maxTxSize: parseInt(result.maxTxSize),\n                        maxValSize: parseInt(result.maxValueSize),\n                        keyDeposit: BigInt(result.stakeKeyDeposit),\n                        poolDeposit: BigInt(result.poolDeposit),\n                        priceMem: parseInt(memNum) / parseInt(memDenom),\n                        priceStep: parseInt(stepsNum) / parseInt(stepsDenom),\n                        maxTxExMem: BigInt(result.maxExecutionUnitsPerTransaction.memory),\n                        maxTxExSteps: BigInt(result.maxExecutionUnitsPerTransaction.steps),\n                        coinsPerUtxoByte: BigInt(result.coinsPerUtxoByte),\n                        collateralPercentage: parseInt(result.collateralPercentage),\n                        maxCollateralInputs: parseInt(result.maxCollateralInputs),\n                        costModels,\n                    });\n                    client.close();\n                }\n                catch (e) {\n                    rej(e);\n                }\n            }, { once: true });\n        });\n    }\n    async getUtxos(addressOrCredential) {\n        const isAddress = typeof addressOrCredential === \"string\";\n        const queryPredicate = isAddress\n            ? addressOrCredential\n            : addressOrCredential.hash;\n        const result = await fetch(`${this.kupoUrl}/matches/${queryPredicate}${isAddress ? \"\" : \"/*\"}?unspent`)\n            .then((res) => res.json());\n        return this.kupmiosUtxosToUtxos(result);\n    }\n    async getUtxosWithUnit(addressOrCredential, unit) {\n        const isAddress = typeof addressOrCredential === \"string\";\n        const queryPredicate = isAddress\n            ? addressOrCredential\n            : addressOrCredential.hash;\n        const { policyId, assetName } = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromUnit)(unit);\n        const result = await fetch(`${this.kupoUrl}/matches/${queryPredicate}${isAddress ? \"\" : \"/*\"}?unspent&policy_id=${policyId}${assetName ? `&asset_name=${assetName}` : \"\"}`)\n            .then((res) => res.json());\n        return this.kupmiosUtxosToUtxos(result);\n    }\n    async getUtxoByUnit(unit) {\n        const { policyId, assetName } = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromUnit)(unit);\n        const result = await fetch(`${this.kupoUrl}/matches/${policyId}.${assetName ? `${assetName}` : \"*\"}?unspent`)\n            .then((res) => res.json());\n        const utxos = await this.kupmiosUtxosToUtxos(result);\n        if (utxos.length > 1) {\n            throw new Error(\"Unit needs to be an NFT or only held by one address.\");\n        }\n        return utxos[0];\n    }\n    async getUtxosByOutRef(outRefs) {\n        const queryHashes = [...new Set(outRefs.map((outRef) => outRef.txHash))];\n        const utxos = await Promise.all(queryHashes.map(async (txHash) => {\n            const result = await fetch(`${this.kupoUrl}/matches/*@${txHash}?unspent`).then((res) => res.json());\n            return this.kupmiosUtxosToUtxos(result);\n        }));\n        return utxos.reduce((acc, utxos) => acc.concat(utxos), []).filter((utxo) => outRefs.some((outRef) => utxo.txHash === outRef.txHash && utxo.outputIndex === outRef.outputIndex));\n    }\n    async getDelegation(rewardAddress) {\n        const { stakeCredential } = (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.getAddressDetails)(rewardAddress);\n        const client = await this.ogmiosWsp(\"Query\", {\n            query: { \"delegationsAndRewards\": [stakeCredential.hash] },\n        });\n        return new Promise((res, rej) => {\n            client.addEventListener(\"message\", (msg) => {\n                try {\n                    const { result } = JSON.parse(msg.data);\n                    const delegation = (result ? Object.values(result)[0] : {});\n                    res({\n                        poolId: delegation.delegate || null,\n                        rewards: BigInt(delegation.rewards || 0),\n                    });\n                    client.close();\n                }\n                catch (e) {\n                    rej(e);\n                }\n            }, { once: true });\n        });\n    }\n    async getDatum(datumHash) {\n        const result = await fetch(`${this.kupoUrl}/datums/${datumHash}`).then((res) => res.json());\n        if (!result || !result.datum) {\n            throw new Error(`No datum found for datum hash: ${datumHash}`);\n        }\n        return result.datum;\n    }\n    awaitTx(txHash, checkInterval = 3000) {\n        return new Promise((res) => {\n            const confirmation = setInterval(async () => {\n                const isConfirmed = await fetch(`${this.kupoUrl}/matches/*@${txHash}?unspent`).then((res) => res.json());\n                if (isConfirmed && isConfirmed.length > 0) {\n                    clearInterval(confirmation);\n                    res(true);\n                    return;\n                }\n            }, checkInterval);\n        });\n    }\n    async submitTx(tx) {\n        const client = await this.ogmiosWsp(\"SubmitTx\", {\n            submit: tx,\n        });\n        return new Promise((res, rej) => {\n            client.addEventListener(\"message\", (msg) => {\n                try {\n                    const { result } = JSON.parse(msg.data);\n                    if (result.SubmitSuccess)\n                        res(result.SubmitSuccess.txId);\n                    else\n                        rej(result.SubmitFail);\n                    client.close();\n                }\n                catch (e) {\n                    rej(e);\n                }\n            }, { once: true });\n        });\n    }\n    kupmiosUtxosToUtxos(utxos) {\n        // deno-lint-ignore no-explicit-any\n        return Promise.all(utxos.map(async (utxo) => {\n            return ({\n                txHash: utxo.transaction_id,\n                outputIndex: parseInt(utxo.output_index),\n                address: utxo.address,\n                assets: (() => {\n                    const a = { lovelace: BigInt(utxo.value.coins) };\n                    Object.keys(utxo.value.assets).forEach((unit) => {\n                        a[unit.replace(\".\", \"\")] = BigInt(utxo.value.assets[unit]);\n                    });\n                    return a;\n                })(),\n                datumHash: utxo?.datum_type === \"hash\" ? utxo.datum_hash : null,\n                datum: utxo?.datum_type === \"inline\"\n                    ? await this.getDatum(utxo.datum_hash)\n                    : null,\n                scriptRef: utxo.script_hash &&\n                    (await (async () => {\n                        const { script, language, } = await fetch(`${this.kupoUrl}/scripts/${utxo.script_hash}`).then((res) => res.json());\n                        if (language === \"native\") {\n                            return { type: \"Native\", script };\n                        }\n                        else if (language === \"plutus:v1\") {\n                            return {\n                                type: \"PlutusV1\",\n                                script: (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript[\"new\"]((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script)).to_bytes()),\n                            };\n                        }\n                        else if (language === \"plutus:v2\") {\n                            return {\n                                type: \"PlutusV2\",\n                                script: (0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.toHex)(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.PlutusScript[\"new\"]((0,_utils_mod_js__WEBPACK_IMPORTED_MODULE_1__.fromHex)(script)).to_bytes()),\n                            };\n                        }\n                    })()),\n            });\n        }));\n    }\n    async ogmiosWsp(methodname, args) {\n        const client = new WebSocket(this.ogmiosUrl);\n        await new Promise((res) => {\n            client.addEventListener(\"open\", () => res(1), { once: true });\n        });\n        client.send(JSON.stringify({\n            type: \"jsonwsp/request\",\n            version: \"1.0\",\n            servicename: \"ogmios\",\n            methodname,\n            args,\n        }));\n        return client;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/provider/kupmios.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/provider/mod.js":
/*!************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/provider/mod.js ***!
  \************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _blockfrost_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blockfrost.js */ \"./node_modules/lucid-cardano/esm/src/provider/blockfrost.js\");\n/* harmony import */ var _kupmios_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kupmios.js */ \"./node_modules/lucid-cardano/esm/src/provider/kupmios.js\");\n/* harmony import */ var _emulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emulator.js */ \"./node_modules/lucid-cardano/esm/src/provider/emulator.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_blockfrost_js__WEBPACK_IMPORTED_MODULE_0__, _kupmios_js__WEBPACK_IMPORTED_MODULE_1__, _emulator_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_blockfrost_js__WEBPACK_IMPORTED_MODULE_0__, _kupmios_js__WEBPACK_IMPORTED_MODULE_1__, _emulator_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _blockfrost_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _blockfrost_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _kupmios_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _kupmios_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _emulator_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _emulator_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3Byb3ZpZGVyL21vZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0g7QUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3Byb3ZpZGVyL21vZC5qcz8yNjgxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Jsb2NrZnJvc3QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2t1cG1pb3MuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VtdWxhdG9yLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/provider/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/types/global.js":
/*!************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/types/global.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3R5cGVzL2dsb2JhbC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkLWNhcmRhbm8vZXNtL3NyYy90eXBlcy9nbG9iYWwuanM/YzNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/types/global.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/types/mod.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/types/mod.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/lucid-cardano/esm/src/types/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _types_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global.js */ \"./node_modules/lucid-cardano/esm/src/types/global.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _global_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _global_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3R5cGVzL21vZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkI7QUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3R5cGVzL21vZC5qcz85MjQyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3R5cGVzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbG9iYWwuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/types/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/types/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/types/types.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3R5cGVzL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3R5cGVzL3R5cGVzLmpzPzk4ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/types/types.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/utils/cost_model.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/utils/cost_model.js ***!
  \****************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PROTOCOL_PARAMETERS_DEFAULT\": function() { return /* binding */ PROTOCOL_PARAMETERS_DEFAULT; },\n/* harmony export */   \"createCostModels\": function() { return /* binding */ createCostModels; }\n/* harmony export */ });\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_0__]);\n_core_mod_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction createCostModels(costModels) {\n    const costmdls = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Costmdls[\"new\"]();\n    // add plutus v1\n    const costmdlV1 = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.CostModel[\"new\"]();\n    Object.values(costModels.PlutusV1).forEach((cost, index) => {\n        costmdlV1.set(index, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Int[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(cost.toString())));\n    });\n    costmdls.insert(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Language.new_plutus_v1(), costmdlV1);\n    // add plutus v2\n    const costmdlV2 = _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.CostModel.new_plutus_v2();\n    Object.values(costModels.PlutusV2 || []).forEach((cost, index) => {\n        costmdlV2.set(index, _core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Int[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.BigNum.from_str(cost.toString())));\n    });\n    costmdls.insert(_core_mod_js__WEBPACK_IMPORTED_MODULE_0__.C.Language.new_plutus_v2(), costmdlV2);\n    return costmdls;\n}\nconst PROTOCOL_PARAMETERS_DEFAULT = {\n    minFeeA: 44,\n    minFeeB: 155381,\n    maxTxSize: 16384,\n    maxValSize: 5000,\n    keyDeposit: 2000000n,\n    poolDeposit: 500000000n,\n    priceMem: 0.0577,\n    priceStep: 0.0000721,\n    maxTxExMem: 14000000n,\n    maxTxExSteps: 10000000000n,\n    coinsPerUtxoByte: 4310n,\n    collateralPercentage: 150,\n    maxCollateralInputs: 3,\n    costModels: {\n        PlutusV1: {\n            \"addInteger-cpu-arguments-intercept\": 205665,\n            \"addInteger-cpu-arguments-slope\": 812,\n            \"addInteger-memory-arguments-intercept\": 1,\n            \"addInteger-memory-arguments-slope\": 1,\n            \"appendByteString-cpu-arguments-intercept\": 1000,\n            \"appendByteString-cpu-arguments-slope\": 571,\n            \"appendByteString-memory-arguments-intercept\": 0,\n            \"appendByteString-memory-arguments-slope\": 1,\n            \"appendString-cpu-arguments-intercept\": 1000,\n            \"appendString-cpu-arguments-slope\": 24177,\n            \"appendString-memory-arguments-intercept\": 4,\n            \"appendString-memory-arguments-slope\": 1,\n            \"bData-cpu-arguments\": 1000,\n            \"bData-memory-arguments\": 32,\n            \"blake2b_256-cpu-arguments-intercept\": 117366,\n            \"blake2b_256-cpu-arguments-slope\": 10475,\n            \"blake2b_256-memory-arguments\": 4,\n            \"cekApplyCost-exBudgetCPU\": 23000,\n            \"cekApplyCost-exBudgetMemory\": 100,\n            \"cekBuiltinCost-exBudgetCPU\": 23000,\n            \"cekBuiltinCost-exBudgetMemory\": 100,\n            \"cekConstCost-exBudgetCPU\": 23000,\n            \"cekConstCost-exBudgetMemory\": 100,\n            \"cekDelayCost-exBudgetCPU\": 23000,\n            \"cekDelayCost-exBudgetMemory\": 100,\n            \"cekForceCost-exBudgetCPU\": 23000,\n            \"cekForceCost-exBudgetMemory\": 100,\n            \"cekLamCost-exBudgetCPU\": 23000,\n            \"cekLamCost-exBudgetMemory\": 100,\n            \"cekStartupCost-exBudgetCPU\": 100,\n            \"cekStartupCost-exBudgetMemory\": 100,\n            \"cekVarCost-exBudgetCPU\": 23000,\n            \"cekVarCost-exBudgetMemory\": 100,\n            \"chooseData-cpu-arguments\": 19537,\n            \"chooseData-memory-arguments\": 32,\n            \"chooseList-cpu-arguments\": 175354,\n            \"chooseList-memory-arguments\": 32,\n            \"chooseUnit-cpu-arguments\": 46417,\n            \"chooseUnit-memory-arguments\": 4,\n            \"consByteString-cpu-arguments-intercept\": 221973,\n            \"consByteString-cpu-arguments-slope\": 511,\n            \"consByteString-memory-arguments-intercept\": 0,\n            \"consByteString-memory-arguments-slope\": 1,\n            \"constrData-cpu-arguments\": 89141,\n            \"constrData-memory-arguments\": 32,\n            \"decodeUtf8-cpu-arguments-intercept\": 497525,\n            \"decodeUtf8-cpu-arguments-slope\": 14068,\n            \"decodeUtf8-memory-arguments-intercept\": 4,\n            \"decodeUtf8-memory-arguments-slope\": 2,\n            \"divideInteger-cpu-arguments-constant\": 196500,\n            \"divideInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"divideInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"divideInteger-memory-arguments-intercept\": 0,\n            \"divideInteger-memory-arguments-minimum\": 1,\n            \"divideInteger-memory-arguments-slope\": 1,\n            \"encodeUtf8-cpu-arguments-intercept\": 1000,\n            \"encodeUtf8-cpu-arguments-slope\": 28662,\n            \"encodeUtf8-memory-arguments-intercept\": 4,\n            \"encodeUtf8-memory-arguments-slope\": 2,\n            \"equalsByteString-cpu-arguments-constant\": 245000,\n            \"equalsByteString-cpu-arguments-intercept\": 216773,\n            \"equalsByteString-cpu-arguments-slope\": 62,\n            \"equalsByteString-memory-arguments\": 1,\n            \"equalsData-cpu-arguments-intercept\": 1060367,\n            \"equalsData-cpu-arguments-slope\": 12586,\n            \"equalsData-memory-arguments\": 1,\n            \"equalsInteger-cpu-arguments-intercept\": 208512,\n            \"equalsInteger-cpu-arguments-slope\": 421,\n            \"equalsInteger-memory-arguments\": 1,\n            \"equalsString-cpu-arguments-constant\": 187000,\n            \"equalsString-cpu-arguments-intercept\": 1000,\n            \"equalsString-cpu-arguments-slope\": 52998,\n            \"equalsString-memory-arguments\": 1,\n            \"fstPair-cpu-arguments\": 80436,\n            \"fstPair-memory-arguments\": 32,\n            \"headList-cpu-arguments\": 43249,\n            \"headList-memory-arguments\": 32,\n            \"iData-cpu-arguments\": 1000,\n            \"iData-memory-arguments\": 32,\n            \"ifThenElse-cpu-arguments\": 80556,\n            \"ifThenElse-memory-arguments\": 1,\n            \"indexByteString-cpu-arguments\": 57667,\n            \"indexByteString-memory-arguments\": 4,\n            \"lengthOfByteString-cpu-arguments\": 1000,\n            \"lengthOfByteString-memory-arguments\": 10,\n            \"lessThanByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanByteString-cpu-arguments-slope\": 156,\n            \"lessThanByteString-memory-arguments\": 1,\n            \"lessThanEqualsByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanEqualsByteString-cpu-arguments-slope\": 156,\n            \"lessThanEqualsByteString-memory-arguments\": 1,\n            \"lessThanEqualsInteger-cpu-arguments-intercept\": 204924,\n            \"lessThanEqualsInteger-cpu-arguments-slope\": 473,\n            \"lessThanEqualsInteger-memory-arguments\": 1,\n            \"lessThanInteger-cpu-arguments-intercept\": 208896,\n            \"lessThanInteger-cpu-arguments-slope\": 511,\n            \"lessThanInteger-memory-arguments\": 1,\n            \"listData-cpu-arguments\": 52467,\n            \"listData-memory-arguments\": 32,\n            \"mapData-cpu-arguments\": 64832,\n            \"mapData-memory-arguments\": 32,\n            \"mkCons-cpu-arguments\": 65493,\n            \"mkCons-memory-arguments\": 32,\n            \"mkNilData-cpu-arguments\": 22558,\n            \"mkNilData-memory-arguments\": 32,\n            \"mkNilPairData-cpu-arguments\": 16563,\n            \"mkNilPairData-memory-arguments\": 32,\n            \"mkPairData-cpu-arguments\": 76511,\n            \"mkPairData-memory-arguments\": 32,\n            \"modInteger-cpu-arguments-constant\": 196500,\n            \"modInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"modInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"modInteger-memory-arguments-intercept\": 0,\n            \"modInteger-memory-arguments-minimum\": 1,\n            \"modInteger-memory-arguments-slope\": 1,\n            \"multiplyInteger-cpu-arguments-intercept\": 69522,\n            \"multiplyInteger-cpu-arguments-slope\": 11687,\n            \"multiplyInteger-memory-arguments-intercept\": 0,\n            \"multiplyInteger-memory-arguments-slope\": 1,\n            \"nullList-cpu-arguments\": 60091,\n            \"nullList-memory-arguments\": 32,\n            \"quotientInteger-cpu-arguments-constant\": 196500,\n            \"quotientInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"quotientInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"quotientInteger-memory-arguments-intercept\": 0,\n            \"quotientInteger-memory-arguments-minimum\": 1,\n            \"quotientInteger-memory-arguments-slope\": 1,\n            \"remainderInteger-cpu-arguments-constant\": 196500,\n            \"remainderInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"remainderInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"remainderInteger-memory-arguments-intercept\": 0,\n            \"remainderInteger-memory-arguments-minimum\": 1,\n            \"remainderInteger-memory-arguments-slope\": 1,\n            \"sha2_256-cpu-arguments-intercept\": 806990,\n            \"sha2_256-cpu-arguments-slope\": 30482,\n            \"sha2_256-memory-arguments\": 4,\n            \"sha3_256-cpu-arguments-intercept\": 1927926,\n            \"sha3_256-cpu-arguments-slope\": 82523,\n            \"sha3_256-memory-arguments\": 4,\n            \"sliceByteString-cpu-arguments-intercept\": 265318,\n            \"sliceByteString-cpu-arguments-slope\": 0,\n            \"sliceByteString-memory-arguments-intercept\": 4,\n            \"sliceByteString-memory-arguments-slope\": 0,\n            \"sndPair-cpu-arguments\": 85931,\n            \"sndPair-memory-arguments\": 32,\n            \"subtractInteger-cpu-arguments-intercept\": 205665,\n            \"subtractInteger-cpu-arguments-slope\": 812,\n            \"subtractInteger-memory-arguments-intercept\": 1,\n            \"subtractInteger-memory-arguments-slope\": 1,\n            \"tailList-cpu-arguments\": 41182,\n            \"tailList-memory-arguments\": 32,\n            \"trace-cpu-arguments\": 212342,\n            \"trace-memory-arguments\": 32,\n            \"unBData-cpu-arguments\": 31220,\n            \"unBData-memory-arguments\": 32,\n            \"unConstrData-cpu-arguments\": 32696,\n            \"unConstrData-memory-arguments\": 32,\n            \"unIData-cpu-arguments\": 43357,\n            \"unIData-memory-arguments\": 32,\n            \"unListData-cpu-arguments\": 32247,\n            \"unListData-memory-arguments\": 32,\n            \"unMapData-cpu-arguments\": 38314,\n            \"unMapData-memory-arguments\": 32,\n            \"verifyEd25519Signature-cpu-arguments-intercept\": 9462713,\n            \"verifyEd25519Signature-cpu-arguments-slope\": 1021,\n            \"verifyEd25519Signature-memory-arguments\": 10,\n        },\n        PlutusV2: {\n            \"addInteger-cpu-arguments-intercept\": 205665,\n            \"addInteger-cpu-arguments-slope\": 812,\n            \"addInteger-memory-arguments-intercept\": 1,\n            \"addInteger-memory-arguments-slope\": 1,\n            \"appendByteString-cpu-arguments-intercept\": 1000,\n            \"appendByteString-cpu-arguments-slope\": 571,\n            \"appendByteString-memory-arguments-intercept\": 0,\n            \"appendByteString-memory-arguments-slope\": 1,\n            \"appendString-cpu-arguments-intercept\": 1000,\n            \"appendString-cpu-arguments-slope\": 24177,\n            \"appendString-memory-arguments-intercept\": 4,\n            \"appendString-memory-arguments-slope\": 1,\n            \"bData-cpu-arguments\": 1000,\n            \"bData-memory-arguments\": 32,\n            \"blake2b_256-cpu-arguments-intercept\": 117366,\n            \"blake2b_256-cpu-arguments-slope\": 10475,\n            \"blake2b_256-memory-arguments\": 4,\n            \"cekApplyCost-exBudgetCPU\": 23000,\n            \"cekApplyCost-exBudgetMemory\": 100,\n            \"cekBuiltinCost-exBudgetCPU\": 23000,\n            \"cekBuiltinCost-exBudgetMemory\": 100,\n            \"cekConstCost-exBudgetCPU\": 23000,\n            \"cekConstCost-exBudgetMemory\": 100,\n            \"cekDelayCost-exBudgetCPU\": 23000,\n            \"cekDelayCost-exBudgetMemory\": 100,\n            \"cekForceCost-exBudgetCPU\": 23000,\n            \"cekForceCost-exBudgetMemory\": 100,\n            \"cekLamCost-exBudgetCPU\": 23000,\n            \"cekLamCost-exBudgetMemory\": 100,\n            \"cekStartupCost-exBudgetCPU\": 100,\n            \"cekStartupCost-exBudgetMemory\": 100,\n            \"cekVarCost-exBudgetCPU\": 23000,\n            \"cekVarCost-exBudgetMemory\": 100,\n            \"chooseData-cpu-arguments\": 19537,\n            \"chooseData-memory-arguments\": 32,\n            \"chooseList-cpu-arguments\": 175354,\n            \"chooseList-memory-arguments\": 32,\n            \"chooseUnit-cpu-arguments\": 46417,\n            \"chooseUnit-memory-arguments\": 4,\n            \"consByteString-cpu-arguments-intercept\": 221973,\n            \"consByteString-cpu-arguments-slope\": 511,\n            \"consByteString-memory-arguments-intercept\": 0,\n            \"consByteString-memory-arguments-slope\": 1,\n            \"constrData-cpu-arguments\": 89141,\n            \"constrData-memory-arguments\": 32,\n            \"decodeUtf8-cpu-arguments-intercept\": 497525,\n            \"decodeUtf8-cpu-arguments-slope\": 14068,\n            \"decodeUtf8-memory-arguments-intercept\": 4,\n            \"decodeUtf8-memory-arguments-slope\": 2,\n            \"divideInteger-cpu-arguments-constant\": 196500,\n            \"divideInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"divideInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"divideInteger-memory-arguments-intercept\": 0,\n            \"divideInteger-memory-arguments-minimum\": 1,\n            \"divideInteger-memory-arguments-slope\": 1,\n            \"encodeUtf8-cpu-arguments-intercept\": 1000,\n            \"encodeUtf8-cpu-arguments-slope\": 28662,\n            \"encodeUtf8-memory-arguments-intercept\": 4,\n            \"encodeUtf8-memory-arguments-slope\": 2,\n            \"equalsByteString-cpu-arguments-constant\": 245000,\n            \"equalsByteString-cpu-arguments-intercept\": 216773,\n            \"equalsByteString-cpu-arguments-slope\": 62,\n            \"equalsByteString-memory-arguments\": 1,\n            \"equalsData-cpu-arguments-intercept\": 1060367,\n            \"equalsData-cpu-arguments-slope\": 12586,\n            \"equalsData-memory-arguments\": 1,\n            \"equalsInteger-cpu-arguments-intercept\": 208512,\n            \"equalsInteger-cpu-arguments-slope\": 421,\n            \"equalsInteger-memory-arguments\": 1,\n            \"equalsString-cpu-arguments-constant\": 187000,\n            \"equalsString-cpu-arguments-intercept\": 1000,\n            \"equalsString-cpu-arguments-slope\": 52998,\n            \"equalsString-memory-arguments\": 1,\n            \"fstPair-cpu-arguments\": 80436,\n            \"fstPair-memory-arguments\": 32,\n            \"headList-cpu-arguments\": 43249,\n            \"headList-memory-arguments\": 32,\n            \"iData-cpu-arguments\": 1000,\n            \"iData-memory-arguments\": 32,\n            \"ifThenElse-cpu-arguments\": 80556,\n            \"ifThenElse-memory-arguments\": 1,\n            \"indexByteString-cpu-arguments\": 57667,\n            \"indexByteString-memory-arguments\": 4,\n            \"lengthOfByteString-cpu-arguments\": 1000,\n            \"lengthOfByteString-memory-arguments\": 10,\n            \"lessThanByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanByteString-cpu-arguments-slope\": 156,\n            \"lessThanByteString-memory-arguments\": 1,\n            \"lessThanEqualsByteString-cpu-arguments-intercept\": 197145,\n            \"lessThanEqualsByteString-cpu-arguments-slope\": 156,\n            \"lessThanEqualsByteString-memory-arguments\": 1,\n            \"lessThanEqualsInteger-cpu-arguments-intercept\": 204924,\n            \"lessThanEqualsInteger-cpu-arguments-slope\": 473,\n            \"lessThanEqualsInteger-memory-arguments\": 1,\n            \"lessThanInteger-cpu-arguments-intercept\": 208896,\n            \"lessThanInteger-cpu-arguments-slope\": 511,\n            \"lessThanInteger-memory-arguments\": 1,\n            \"listData-cpu-arguments\": 52467,\n            \"listData-memory-arguments\": 32,\n            \"mapData-cpu-arguments\": 64832,\n            \"mapData-memory-arguments\": 32,\n            \"mkCons-cpu-arguments\": 65493,\n            \"mkCons-memory-arguments\": 32,\n            \"mkNilData-cpu-arguments\": 22558,\n            \"mkNilData-memory-arguments\": 32,\n            \"mkNilPairData-cpu-arguments\": 16563,\n            \"mkNilPairData-memory-arguments\": 32,\n            \"mkPairData-cpu-arguments\": 76511,\n            \"mkPairData-memory-arguments\": 32,\n            \"modInteger-cpu-arguments-constant\": 196500,\n            \"modInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"modInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"modInteger-memory-arguments-intercept\": 0,\n            \"modInteger-memory-arguments-minimum\": 1,\n            \"modInteger-memory-arguments-slope\": 1,\n            \"multiplyInteger-cpu-arguments-intercept\": 69522,\n            \"multiplyInteger-cpu-arguments-slope\": 11687,\n            \"multiplyInteger-memory-arguments-intercept\": 0,\n            \"multiplyInteger-memory-arguments-slope\": 1,\n            \"nullList-cpu-arguments\": 60091,\n            \"nullList-memory-arguments\": 32,\n            \"quotientInteger-cpu-arguments-constant\": 196500,\n            \"quotientInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"quotientInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"quotientInteger-memory-arguments-intercept\": 0,\n            \"quotientInteger-memory-arguments-minimum\": 1,\n            \"quotientInteger-memory-arguments-slope\": 1,\n            \"remainderInteger-cpu-arguments-constant\": 196500,\n            \"remainderInteger-cpu-arguments-model-arguments-intercept\": 453240,\n            \"remainderInteger-cpu-arguments-model-arguments-slope\": 220,\n            \"remainderInteger-memory-arguments-intercept\": 0,\n            \"remainderInteger-memory-arguments-minimum\": 1,\n            \"remainderInteger-memory-arguments-slope\": 1,\n            \"serialiseData-cpu-arguments-intercept\": 1159724,\n            \"serialiseData-cpu-arguments-slope\": 392670,\n            \"serialiseData-memory-arguments-intercept\": 0,\n            \"serialiseData-memory-arguments-slope\": 2,\n            \"sha2_256-cpu-arguments-intercept\": 806990,\n            \"sha2_256-cpu-arguments-slope\": 30482,\n            \"sha2_256-memory-arguments\": 4,\n            \"sha3_256-cpu-arguments-intercept\": 1927926,\n            \"sha3_256-cpu-arguments-slope\": 82523,\n            \"sha3_256-memory-arguments\": 4,\n            \"sliceByteString-cpu-arguments-intercept\": 265318,\n            \"sliceByteString-cpu-arguments-slope\": 0,\n            \"sliceByteString-memory-arguments-intercept\": 4,\n            \"sliceByteString-memory-arguments-slope\": 0,\n            \"sndPair-cpu-arguments\": 85931,\n            \"sndPair-memory-arguments\": 32,\n            \"subtractInteger-cpu-arguments-intercept\": 205665,\n            \"subtractInteger-cpu-arguments-slope\": 812,\n            \"subtractInteger-memory-arguments-intercept\": 1,\n            \"subtractInteger-memory-arguments-slope\": 1,\n            \"tailList-cpu-arguments\": 41182,\n            \"tailList-memory-arguments\": 32,\n            \"trace-cpu-arguments\": 212342,\n            \"trace-memory-arguments\": 32,\n            \"unBData-cpu-arguments\": 31220,\n            \"unBData-memory-arguments\": 32,\n            \"unConstrData-cpu-arguments\": 32696,\n            \"unConstrData-memory-arguments\": 32,\n            \"unIData-cpu-arguments\": 43357,\n            \"unIData-memory-arguments\": 32,\n            \"unListData-cpu-arguments\": 32247,\n            \"unListData-memory-arguments\": 32,\n            \"unMapData-cpu-arguments\": 38314,\n            \"unMapData-memory-arguments\": 32,\n            \"verifyEcdsaSecp256k1Signature-cpu-arguments\": 20000000000,\n            \"verifyEcdsaSecp256k1Signature-memory-arguments\": 20000000000,\n            \"verifyEd25519Signature-cpu-arguments-intercept\": 9462713,\n            \"verifyEd25519Signature-cpu-arguments-slope\": 1021,\n            \"verifyEd25519Signature-memory-arguments\": 10,\n            \"verifySchnorrSecp256k1Signature-cpu-arguments-intercept\": 20000000000,\n            \"verifySchnorrSecp256k1Signature-cpu-arguments-slope\": 0,\n            \"verifySchnorrSecp256k1Signature-memory-arguments\": 20000000000,\n        },\n    },\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/utils/cost_model.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/utils/merkle_tree.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/utils/merkle_tree.js ***!
  \*****************************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MerkleTree\": function() { return /* binding */ MerkleTree; },\n/* harmony export */   \"combineHash\": function() { return /* binding */ combineHash; },\n/* harmony export */   \"concat\": function() { return /* reexport safe */ _deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__.concat; },\n/* harmony export */   \"equals\": function() { return /* reexport safe */ _deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__.equals; },\n/* harmony export */   \"sha256\": function() { return /* binding */ sha256; }\n/* harmony export */ });\n/* harmony import */ var _deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps/deno.land/std@0.148.0/bytes/mod.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/std@0.148.0/bytes/mod.js\");\n/* harmony import */ var _deps_deno_land_std_0_153_0_hash_sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../deps/deno.land/std@0.153.0/hash/sha256.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/std@0.153.0/hash/sha256.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/lucid-cardano/esm/src/utils/utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_js__WEBPACK_IMPORTED_MODULE_2__]);\n_utils_js__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// Haskell implementation: https://github.com/input-output-hk/hydra-poc/blob/master/plutus-merkle-tree/src/Plutus/MerkleTree.hs\n\n\n\nclass MerkleTree {\n    /** Construct Merkle tree from data, which get hashed with sha256 */\n    constructor(data) {\n        Object.defineProperty(this, \"root\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.root = MerkleTree.buildRecursively(data.map((d) => sha256(d)));\n    }\n    /** Construct Merkle tree from sha256 hashes */\n    static fromHashes(hashes) {\n        return new this(hashes);\n    }\n    static buildRecursively(hashes) {\n        if (hashes.length <= 0)\n            return null;\n        if (hashes.length === 1) {\n            return {\n                node: hashes[0],\n                left: null,\n                right: null,\n            };\n        }\n        const cutoff = Math.floor(hashes.length / 2);\n        const [left, right] = [hashes.slice(0, cutoff), hashes.slice(cutoff)];\n        const lnode = this.buildRecursively(left);\n        const rnode = this.buildRecursively(right);\n        if (lnode === null || rnode === null)\n            return null;\n        return {\n            node: combineHash(lnode.node, rnode.node),\n            left: lnode,\n            right: rnode,\n        };\n    }\n    rootHash() {\n        if (this.root === null)\n            throw new Error(\"Merkle tree root hash not found.\");\n        return this.root.node;\n    }\n    getProof(data) {\n        const hash = sha256(data);\n        const proof = [];\n        const searchRecursively = (tree) => {\n            if (tree && (0,_deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__.equals)(tree.node, hash))\n                return true;\n            if (tree?.right) {\n                if (searchRecursively(tree.left)) {\n                    proof.push({ right: tree.right.node });\n                    return true;\n                }\n            }\n            if (tree?.left) {\n                if (searchRecursively(tree.right)) {\n                    proof.push({ left: tree.left.node });\n                    return true;\n                }\n            }\n        };\n        searchRecursively(this.root);\n        return proof;\n    }\n    size() {\n        const searchRecursively = (tree) => {\n            if (tree === null)\n                return 0;\n            return 1 + searchRecursively(tree.left) + searchRecursively(tree.right);\n        };\n        return searchRecursively(this.root);\n    }\n    static verify(data, rootHash, proof) {\n        const hash = sha256(data);\n        const searchRecursively = (rootHash2, proof) => {\n            if (proof.length <= 0)\n                return (0,_deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__.equals)(rootHash, rootHash2);\n            const [h, t] = [proof[0], proof.slice(1)];\n            if (h.left) {\n                return searchRecursively(combineHash(h.left, rootHash2), t);\n            }\n            if (h.right) {\n                return searchRecursively(combineHash(rootHash2, h.right), t);\n            }\n            return false;\n        };\n        return searchRecursively(hash, proof);\n    }\n    toString() {\n        // deno-lint-ignore no-explicit-any\n        const searchRecursively = (tree) => {\n            if (tree === null)\n                return null;\n            return {\n                node: (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(tree.node),\n                left: searchRecursively(tree.left),\n                right: searchRecursively(tree.right),\n            };\n        };\n        return JSON.stringify(searchRecursively(this.root), null, 2);\n    }\n}\n\nfunction sha256(data) {\n    return new Uint8Array(new _deps_deno_land_std_0_153_0_hash_sha256_js__WEBPACK_IMPORTED_MODULE_1__.Sha256().update(data).arrayBuffer());\n}\nfunction combineHash(hash1, hash2) {\n    return sha256((0,_deps_deno_land_std_0_148_0_bytes_mod_js__WEBPACK_IMPORTED_MODULE_0__.concat)(hash1, hash2));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3V0aWxzL21lcmtsZV90cmVlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDK0U7QUFDTjtBQUN0QztBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdGQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx3QkFBd0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxzQkFBc0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnREFBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQjtBQUNuQjtBQUNQLDhCQUE4Qiw4RUFBTTtBQUNwQztBQUNPO0FBQ1Asa0JBQWtCLGdGQUFNO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZC1jYXJkYW5vL2VzbS9zcmMvdXRpbHMvbWVya2xlX3RyZWUuanM/NTM4YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBIYXNrZWxsIGltcGxlbWVudGF0aW9uOiBodHRwczovL2dpdGh1Yi5jb20vaW5wdXQtb3V0cHV0LWhrL2h5ZHJhLXBvYy9ibG9iL21hc3Rlci9wbHV0dXMtbWVya2xlLXRyZWUvc3JjL1BsdXR1cy9NZXJrbGVUcmVlLmhzXG5pbXBvcnQgeyBjb25jYXQsIGVxdWFscyB9IGZyb20gXCIuLi8uLi9kZXBzL2Rlbm8ubGFuZC9zdGRAMC4xNDguMC9ieXRlcy9tb2QuanNcIjtcbmltcG9ydCB7IFNoYTI1NiB9IGZyb20gXCIuLi8uLi9kZXBzL2Rlbm8ubGFuZC9zdGRAMC4xNTMuMC9oYXNoL3NoYTI1Ni5qc1wiO1xuaW1wb3J0IHsgdG9IZXggfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGNsYXNzIE1lcmtsZVRyZWUge1xuICAgIC8qKiBDb25zdHJ1Y3QgTWVya2xlIHRyZWUgZnJvbSBkYXRhLCB3aGljaCBnZXQgaGFzaGVkIHdpdGggc2hhMjU2ICovXG4gICAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyb290XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucm9vdCA9IE1lcmtsZVRyZWUuYnVpbGRSZWN1cnNpdmVseShkYXRhLm1hcCgoZCkgPT4gc2hhMjU2KGQpKSk7XG4gICAgfVxuICAgIC8qKiBDb25zdHJ1Y3QgTWVya2xlIHRyZWUgZnJvbSBzaGEyNTYgaGFzaGVzICovXG4gICAgc3RhdGljIGZyb21IYXNoZXMoaGFzaGVzKSB7XG4gICAgICAgIHJldHVybiBuZXcgdGhpcyhoYXNoZXMpO1xuICAgIH1cbiAgICBzdGF0aWMgYnVpbGRSZWN1cnNpdmVseShoYXNoZXMpIHtcbiAgICAgICAgaWYgKGhhc2hlcy5sZW5ndGggPD0gMClcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoaGFzaGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBub2RlOiBoYXNoZXNbMF0sXG4gICAgICAgICAgICAgICAgbGVmdDogbnVsbCxcbiAgICAgICAgICAgICAgICByaWdodDogbnVsbCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3V0b2ZmID0gTWF0aC5mbG9vcihoYXNoZXMubGVuZ3RoIC8gMik7XG4gICAgICAgIGNvbnN0IFtsZWZ0LCByaWdodF0gPSBbaGFzaGVzLnNsaWNlKDAsIGN1dG9mZiksIGhhc2hlcy5zbGljZShjdXRvZmYpXTtcbiAgICAgICAgY29uc3QgbG5vZGUgPSB0aGlzLmJ1aWxkUmVjdXJzaXZlbHkobGVmdCk7XG4gICAgICAgIGNvbnN0IHJub2RlID0gdGhpcy5idWlsZFJlY3Vyc2l2ZWx5KHJpZ2h0KTtcbiAgICAgICAgaWYgKGxub2RlID09PSBudWxsIHx8IHJub2RlID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBub2RlOiBjb21iaW5lSGFzaChsbm9kZS5ub2RlLCBybm9kZS5ub2RlKSxcbiAgICAgICAgICAgIGxlZnQ6IGxub2RlLFxuICAgICAgICAgICAgcmlnaHQ6IHJub2RlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByb290SGFzaCgpIHtcbiAgICAgICAgaWYgKHRoaXMucm9vdCA9PT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1lcmtsZSB0cmVlIHJvb3QgaGFzaCBub3QgZm91bmQuXCIpO1xuICAgICAgICByZXR1cm4gdGhpcy5yb290Lm5vZGU7XG4gICAgfVxuICAgIGdldFByb29mKGRhdGEpIHtcbiAgICAgICAgY29uc3QgaGFzaCA9IHNoYTI1NihkYXRhKTtcbiAgICAgICAgY29uc3QgcHJvb2YgPSBbXTtcbiAgICAgICAgY29uc3Qgc2VhcmNoUmVjdXJzaXZlbHkgPSAodHJlZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHRyZWUgJiYgZXF1YWxzKHRyZWUubm9kZSwgaGFzaCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBpZiAodHJlZT8ucmlnaHQpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VhcmNoUmVjdXJzaXZlbHkodHJlZS5sZWZ0KSkge1xuICAgICAgICAgICAgICAgICAgICBwcm9vZi5wdXNoKHsgcmlnaHQ6IHRyZWUucmlnaHQubm9kZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRyZWU/LmxlZnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VhcmNoUmVjdXJzaXZlbHkodHJlZS5yaWdodCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvb2YucHVzaCh7IGxlZnQ6IHRyZWUubGVmdC5ub2RlIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHNlYXJjaFJlY3Vyc2l2ZWx5KHRoaXMucm9vdCk7XG4gICAgICAgIHJldHVybiBwcm9vZjtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgY29uc3Qgc2VhcmNoUmVjdXJzaXZlbHkgPSAodHJlZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHRyZWUgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICByZXR1cm4gMSArIHNlYXJjaFJlY3Vyc2l2ZWx5KHRyZWUubGVmdCkgKyBzZWFyY2hSZWN1cnNpdmVseSh0cmVlLnJpZ2h0KTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHNlYXJjaFJlY3Vyc2l2ZWx5KHRoaXMucm9vdCk7XG4gICAgfVxuICAgIHN0YXRpYyB2ZXJpZnkoZGF0YSwgcm9vdEhhc2gsIHByb29mKSB7XG4gICAgICAgIGNvbnN0IGhhc2ggPSBzaGEyNTYoZGF0YSk7XG4gICAgICAgIGNvbnN0IHNlYXJjaFJlY3Vyc2l2ZWx5ID0gKHJvb3RIYXNoMiwgcHJvb2YpID0+IHtcbiAgICAgICAgICAgIGlmIChwcm9vZi5sZW5ndGggPD0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gZXF1YWxzKHJvb3RIYXNoLCByb290SGFzaDIpO1xuICAgICAgICAgICAgY29uc3QgW2gsIHRdID0gW3Byb29mWzBdLCBwcm9vZi5zbGljZSgxKV07XG4gICAgICAgICAgICBpZiAoaC5sZWZ0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlYXJjaFJlY3Vyc2l2ZWx5KGNvbWJpbmVIYXNoKGgubGVmdCwgcm9vdEhhc2gyKSwgdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaC5yaWdodCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWFyY2hSZWN1cnNpdmVseShjb21iaW5lSGFzaChyb290SGFzaDIsIGgucmlnaHQpLCB0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHNlYXJjaFJlY3Vyc2l2ZWx5KGhhc2gsIHByb29mKTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gICAgICAgIGNvbnN0IHNlYXJjaFJlY3Vyc2l2ZWx5ID0gKHRyZWUpID0+IHtcbiAgICAgICAgICAgIGlmICh0cmVlID09PSBudWxsKVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBub2RlOiB0b0hleCh0cmVlLm5vZGUpLFxuICAgICAgICAgICAgICAgIGxlZnQ6IHNlYXJjaFJlY3Vyc2l2ZWx5KHRyZWUubGVmdCksXG4gICAgICAgICAgICAgICAgcmlnaHQ6IHNlYXJjaFJlY3Vyc2l2ZWx5KHRyZWUucmlnaHQpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNlYXJjaFJlY3Vyc2l2ZWx5KHRoaXMucm9vdCksIG51bGwsIDIpO1xuICAgIH1cbn1cbmV4cG9ydCB7IGNvbmNhdCwgZXF1YWxzIH07XG5leHBvcnQgZnVuY3Rpb24gc2hhMjU2KGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobmV3IFNoYTI1NigpLnVwZGF0ZShkYXRhKS5hcnJheUJ1ZmZlcigpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lSGFzaChoYXNoMSwgaGFzaDIpIHtcbiAgICByZXR1cm4gc2hhMjU2KGNvbmNhdChoYXNoMSwgaGFzaDIpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/utils/merkle_tree.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/utils/mod.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/utils/mod.js ***!
  \*********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cost_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cost_model.js */ \"./node_modules/lucid-cardano/esm/src/utils/cost_model.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/lucid-cardano/esm/src/utils/utils.js\");\n/* harmony import */ var _merkle_tree_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merkle_tree.js */ \"./node_modules/lucid-cardano/esm/src/utils/merkle_tree.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_cost_model_js__WEBPACK_IMPORTED_MODULE_0__, _utils_js__WEBPACK_IMPORTED_MODULE_1__, _merkle_tree_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_cost_model_js__WEBPACK_IMPORTED_MODULE_0__, _utils_js__WEBPACK_IMPORTED_MODULE_1__, _merkle_tree_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _cost_model_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _cost_model_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _utils_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _utils_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _merkle_tree_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _merkle_tree_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3V0aWxzL21vZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0w7QUFDTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWQtY2FyZGFuby9lc20vc3JjL3V0aWxzL21vZC5qcz80NzAyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Nvc3RfbW9kZWwuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZXJrbGVfdHJlZS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/utils/mod.js\n"));

/***/ }),

/***/ "./node_modules/lucid-cardano/esm/src/utils/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucid-cardano/esm/src/utils/utils.js ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Utils\": function() { return /* binding */ Utils; },\n/* harmony export */   \"applyParamsToScript\": function() { return /* binding */ applyParamsToScript; },\n/* harmony export */   \"assetsToValue\": function() { return /* binding */ assetsToValue; },\n/* harmony export */   \"coreToUtxo\": function() { return /* binding */ coreToUtxo; },\n/* harmony export */   \"fromHex\": function() { return /* binding */ fromHex; },\n/* harmony export */   \"fromLabel\": function() { return /* binding */ fromLabel; },\n/* harmony export */   \"fromScriptRef\": function() { return /* binding */ fromScriptRef; },\n/* harmony export */   \"fromText\": function() { return /* binding */ fromText; },\n/* harmony export */   \"fromUnit\": function() { return /* binding */ fromUnit; },\n/* harmony export */   \"generatePrivateKey\": function() { return /* binding */ generatePrivateKey; },\n/* harmony export */   \"generateSeedPhrase\": function() { return /* binding */ generateSeedPhrase; },\n/* harmony export */   \"getAddressDetails\": function() { return /* binding */ getAddressDetails; },\n/* harmony export */   \"nativeScriptFromJson\": function() { return /* binding */ nativeScriptFromJson; },\n/* harmony export */   \"networkToId\": function() { return /* binding */ networkToId; },\n/* harmony export */   \"paymentCredentialOf\": function() { return /* binding */ paymentCredentialOf; },\n/* harmony export */   \"stakeCredentialOf\": function() { return /* binding */ stakeCredentialOf; },\n/* harmony export */   \"toHex\": function() { return /* binding */ toHex; },\n/* harmony export */   \"toLabel\": function() { return /* binding */ toLabel; },\n/* harmony export */   \"toPublicKey\": function() { return /* binding */ toPublicKey; },\n/* harmony export */   \"toScriptRef\": function() { return /* binding */ toScriptRef; },\n/* harmony export */   \"toText\": function() { return /* binding */ toText; },\n/* harmony export */   \"toUnit\": function() { return /* binding */ toUnit; },\n/* harmony export */   \"utxoToCore\": function() { return /* binding */ utxoToCore; },\n/* harmony export */   \"valueToAssets\": function() { return /* binding */ valueToAssets; }\n/* harmony export */ });\n/* harmony import */ var _deps_deno_land_std_0_100_0_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps/deno.land/std@0.100.0/encoding/hex.js */ \"./node_modules/lucid-cardano/esm/deps/deno.land/std@0.100.0/encoding/hex.js\");\n/* harmony import */ var _core_mod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/mod.js */ \"./node_modules/lucid-cardano/esm/src/core/mod.js\");\n/* harmony import */ var _misc_bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../misc/bip39.js */ \"./node_modules/lucid-cardano/esm/src/misc/bip39.js\");\n/* harmony import */ var _misc_crc8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../misc/crc8.js */ \"./node_modules/lucid-cardano/esm/src/misc/crc8.js\");\n/* harmony import */ var _plutus_time_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../plutus/time.js */ \"./node_modules/lucid-cardano/esm/src/plutus/time.js\");\n/* harmony import */ var _plutus_data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../plutus/data.js */ \"./node_modules/lucid-cardano/esm/src/plutus/data.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_core_mod_js__WEBPACK_IMPORTED_MODULE_1__, _misc_bip39_js__WEBPACK_IMPORTED_MODULE_2__, _plutus_data_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_core_mod_js__WEBPACK_IMPORTED_MODULE_1__, _misc_bip39_js__WEBPACK_IMPORTED_MODULE_2__, _plutus_data_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nclass Utils {\n    constructor(lucid) {\n        Object.defineProperty(this, \"lucid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lucid = lucid;\n    }\n    validatorToAddress(validator, stakeCredential) {\n        const validatorHash = this.validatorToScriptHash(validator);\n        if (stakeCredential) {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BaseAddress[\"new\"](networkToId(this.lucid.network), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(validatorHash)), stakeCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(stakeCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n        else {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.EnterpriseAddress[\"new\"](networkToId(this.lucid.network), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(validatorHash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n    }\n    credentialToAddress(paymentCredential, stakeCredential) {\n        if (stakeCredential) {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BaseAddress[\"new\"](networkToId(this.lucid.network), paymentCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Ed25519KeyHash.from_hex(paymentCredential.hash))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(paymentCredential.hash)), stakeCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(stakeCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n        else {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.EnterpriseAddress[\"new\"](networkToId(this.lucid.network), paymentCredential.type === \"Key\"\n                ? _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Ed25519KeyHash.from_hex(paymentCredential.hash))\n                : _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(paymentCredential.hash)))\n                .to_address()\n                .to_bech32(undefined);\n        }\n    }\n    validatorToRewardAddress(validator) {\n        const validatorHash = this.validatorToScriptHash(validator);\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.RewardAddress[\"new\"](networkToId(this.lucid.network), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(validatorHash)))\n            .to_address()\n            .to_bech32(undefined);\n    }\n    credentialToRewardAddress(stakeCredential) {\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.RewardAddress[\"new\"](networkToId(this.lucid.network), stakeCredential.type === \"Key\"\n            ? _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_keyhash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Ed25519KeyHash.from_hex(stakeCredential.hash))\n            : _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.StakeCredential.from_scripthash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_hex(stakeCredential.hash)))\n            .to_address()\n            .to_bech32(undefined);\n    }\n    validatorToScriptHash(validator) {\n        switch (validator.type) {\n            case \"Native\":\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.NativeScript.from_bytes(fromHex(validator.script))\n                    .hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHashNamespace.NativeScript)\n                    .to_hex();\n            case \"PlutusV1\":\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusScript.from_bytes(fromHex(validator.script))\n                    .hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHashNamespace.PlutusV1)\n                    .to_hex();\n            case \"PlutusV2\":\n                return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusScript.from_bytes(fromHex(validator.script))\n                    .hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHashNamespace.PlutusV2)\n                    .to_hex();\n            default:\n                throw new Error(\"No variant matched\");\n        }\n    }\n    mintingPolicyToId(mintingPolicy) {\n        return this.validatorToScriptHash(mintingPolicy);\n    }\n    datumToHash(datum) {\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.hash_plutus_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.from_bytes(fromHex(datum))).to_hex();\n    }\n    scriptHashToCredential(scriptHash) {\n        return {\n            type: \"Script\",\n            hash: scriptHash,\n        };\n    }\n    keyHashToCredential(keyHash) {\n        return {\n            type: \"Key\",\n            hash: keyHash,\n        };\n    }\n    generatePrivateKey() {\n        return generatePrivateKey();\n    }\n    generateSeedPhrase() {\n        return generateSeedPhrase();\n    }\n    unixTimeToSlot(unixTime) {\n        return (0,_plutus_time_js__WEBPACK_IMPORTED_MODULE_4__.unixTimeToEnclosingSlot)(unixTime, _plutus_time_js__WEBPACK_IMPORTED_MODULE_4__.SLOT_CONFIG_NETWORK[this.lucid.network]);\n    }\n    slotToUnixTime(slot) {\n        return (0,_plutus_time_js__WEBPACK_IMPORTED_MODULE_4__.slotToBeginUnixTime)(slot, _plutus_time_js__WEBPACK_IMPORTED_MODULE_4__.SLOT_CONFIG_NETWORK[this.lucid.network]);\n    }\n    /** Address can be in Bech32 or Hex. */\n    getAddressDetails(address) {\n        return getAddressDetails(address);\n    }\n    /**\n     * Convert a native script from Json to the Hex representation.\n     * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md\n     */\n    nativeScriptFromJson(nativeScript) {\n        return nativeScriptFromJson(nativeScript);\n    }\n    paymentCredentialOf(address) {\n        return paymentCredentialOf(address);\n    }\n    stakeCredentialOf(rewardAddress) {\n        return stakeCredentialOf(rewardAddress);\n    }\n}\nfunction addressFromHexOrBech32(address) {\n    try {\n        return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Address.from_bytes(fromHex(address));\n    }\n    catch (_e) {\n        try {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Address.from_bech32(address);\n        }\n        catch (_e) {\n            throw new Error(\"Could not deserialize address.\");\n        }\n    }\n}\n/** Address can be in Bech32 or Hex. */\nfunction getAddressDetails(address) {\n    // Base Address\n    try {\n        const parsedAddress = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BaseAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        const stakeCredential = parsedAddress.stake_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.stake_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.stake_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Base\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n            stakeCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Enterprise Address\n    try {\n        const parsedAddress = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.EnterpriseAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Enterprise\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Pointer Address\n    try {\n        const parsedAddress = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PointerAddress.from_address(addressFromHexOrBech32(address));\n        const paymentCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Pointer\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            paymentCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    // Reward Address\n    try {\n        const parsedAddress = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.RewardAddress.from_address(addressFromHexOrBech32(address));\n        const stakeCredential = parsedAddress.payment_cred().kind() === 0\n            ? {\n                type: \"Key\",\n                hash: toHex(parsedAddress.payment_cred().to_keyhash().to_bytes()),\n            }\n            : {\n                type: \"Script\",\n                hash: toHex(parsedAddress.payment_cred().to_scripthash().to_bytes()),\n            };\n        return {\n            type: \"Reward\",\n            networkId: parsedAddress.to_address().network_id(),\n            address: {\n                bech32: parsedAddress.to_address().to_bech32(undefined),\n                hex: toHex(parsedAddress.to_address().to_bytes()),\n            },\n            stakeCredential,\n        };\n    }\n    catch (_e) { /* pass */ }\n    throw new Error(\"No address type matched for: \" + address);\n}\nfunction paymentCredentialOf(address) {\n    const { paymentCredential } = getAddressDetails(address);\n    if (!paymentCredential) {\n        throw new Error(\"The specified address does not contain a payment credential.\");\n    }\n    return paymentCredential;\n}\nfunction stakeCredentialOf(rewardAddress) {\n    const { stakeCredential } = getAddressDetails(rewardAddress);\n    if (!stakeCredential) {\n        throw new Error(\"The specified address does not contain a stake credential.\");\n    }\n    return stakeCredential;\n}\nfunction generatePrivateKey() {\n    return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PrivateKey.generate_ed25519().to_bech32();\n}\nfunction generateSeedPhrase() {\n    return (0,_misc_bip39_js__WEBPACK_IMPORTED_MODULE_2__.generateMnemonic)(256);\n}\nfunction valueToAssets(value) {\n    const assets = {};\n    assets[\"lovelace\"] = BigInt(value.coin().to_str());\n    const ma = value.multiasset();\n    if (ma) {\n        const multiAssets = ma.keys();\n        for (let j = 0; j < multiAssets.len(); j++) {\n            const policy = multiAssets.get(j);\n            const policyAssets = ma.get(policy);\n            const assetNames = policyAssets.keys();\n            for (let k = 0; k < assetNames.len(); k++) {\n                const policyAsset = assetNames.get(k);\n                const quantity = policyAssets.get(policyAsset);\n                const unit = toHex(policy.to_bytes()) + toHex(policyAsset.name());\n                assets[unit] = BigInt(quantity.to_str());\n            }\n        }\n    }\n    return assets;\n}\nfunction assetsToValue(assets) {\n    const multiAsset = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.MultiAsset[\"new\"]();\n    const lovelace = assets[\"lovelace\"];\n    const units = Object.keys(assets);\n    const policies = Array.from(new Set(units\n        .filter((unit) => unit !== \"lovelace\")\n        .map((unit) => unit.slice(0, 56))));\n    policies.forEach((policy) => {\n        const policyUnits = units.filter((unit) => unit.slice(0, 56) === policy);\n        const assetsValue = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Assets[\"new\"]();\n        policyUnits.forEach((unit) => {\n            assetsValue.insert(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.AssetName[\"new\"](fromHex(unit.slice(56))), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BigNum.from_str(assets[unit].toString()));\n        });\n        multiAsset.insert(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptHash.from_bytes(fromHex(policy)), assetsValue);\n    });\n    const value = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Value[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BigNum.from_str(lovelace ? lovelace.toString() : \"0\"));\n    if (units.length > 1 || !lovelace)\n        value.set_multiasset(multiAsset);\n    return value;\n}\nfunction fromScriptRef(scriptRef) {\n    const kind = scriptRef.get().kind();\n    switch (kind) {\n        case 0:\n            return {\n                type: \"Native\",\n                script: toHex(scriptRef.get().as_native().to_bytes()),\n            };\n        case 1:\n            return {\n                type: \"PlutusV1\",\n                script: toHex(scriptRef.get().as_plutus_v1().to_bytes()),\n            };\n        case 2:\n            return {\n                type: \"PlutusV2\",\n                script: toHex(scriptRef.get().as_plutus_v2().to_bytes()),\n            };\n        default:\n            throw new Error(\"No variant matched.\");\n    }\n}\nfunction toScriptRef(script) {\n    switch (script.type) {\n        case \"Native\":\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptRef[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Script.new_native(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.NativeScript.from_bytes(fromHex(script.script))));\n        case \"PlutusV1\":\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptRef[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Script.new_plutus_v1(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusScript.from_bytes(fromHex(script.script))));\n        case \"PlutusV2\":\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptRef[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Script.new_plutus_v2(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusScript.from_bytes(fromHex(script.script))));\n        default:\n            throw new Error(\"No variant matched.\");\n    }\n}\nfunction utxoToCore(utxo) {\n    const address = (() => {\n        try {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Address.from_bech32(utxo.address);\n        }\n        catch (_e) {\n            return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ByronAddress.from_base58(utxo.address).to_address();\n        }\n    })();\n    const output = _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.TransactionOutput[\"new\"](address, assetsToValue(utxo.assets));\n    if (utxo.datumHash) {\n        output.set_datum(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Datum.new_data_hash(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.DataHash.from_bytes(fromHex(utxo.datumHash))));\n    }\n    // inline datum\n    if (!utxo.datumHash && utxo.datum) {\n        output.set_datum(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Datum.new_data(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.Data[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusData.from_bytes(fromHex(utxo.datum)))));\n    }\n    if (utxo.scriptRef) {\n        output.set_script_ref(toScriptRef(utxo.scriptRef));\n    }\n    return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.TransactionUnspentOutput[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.TransactionInput[\"new\"](_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.TransactionHash.from_bytes(fromHex(utxo.txHash)), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.BigNum.from_str(utxo.outputIndex.toString())), output);\n}\nfunction coreToUtxo(coreUtxo) {\n    return {\n        txHash: toHex(coreUtxo.input().transaction_id().to_bytes()),\n        outputIndex: parseInt(coreUtxo.input().index().to_str()),\n        assets: valueToAssets(coreUtxo.output().amount()),\n        address: coreUtxo.output().address().as_byron()\n            ? coreUtxo.output().address().as_byron()?.to_base58()\n            : coreUtxo.output().address().to_bech32(undefined),\n        datumHash: coreUtxo.output()?.datum()?.as_data_hash()?.to_hex(),\n        datum: coreUtxo.output()?.datum()?.as_data() &&\n            toHex(coreUtxo.output().datum().as_data().get().to_bytes()),\n        scriptRef: coreUtxo.output()?.script_ref() &&\n            fromScriptRef(coreUtxo.output().script_ref()),\n    };\n}\nfunction networkToId(network) {\n    switch (network) {\n        case \"Preview\":\n            return 0;\n        case \"Preprod\":\n            return 0;\n        case \"Custom\":\n            return 0;\n        case \"Mainnet\":\n            return 1;\n        default:\n            throw new Error(\"Network not found\");\n    }\n}\nfunction fromHex(hex) {\n    return (0,_deps_deno_land_std_0_100_0_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.decodeString)(hex);\n}\nfunction toHex(bytes) {\n    return (0,_deps_deno_land_std_0_100_0_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.encodeToString)(bytes);\n}\n/** Convert a Hex encoded string to a Utf-8 encoded string. */\nfunction toText(hex) {\n    return new TextDecoder().decode((0,_deps_deno_land_std_0_100_0_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.decode)(new TextEncoder().encode(hex)));\n}\n/** Convert a Utf-8 encoded string to a Hex encoded string. */\nfunction fromText(text) {\n    return toHex(new TextEncoder().encode(text));\n}\nfunction toPublicKey(privateKey) {\n    return _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PrivateKey.from_bech32(privateKey).to_public().to_bech32();\n}\n/** Padded number in Hex. */\nfunction checksum(num) {\n    return (0,_misc_crc8_js__WEBPACK_IMPORTED_MODULE_3__.crc8)(fromHex(num)).toString(16).padStart(2, \"0\");\n}\nfunction toLabel(num) {\n    if (num < 0 || num > 65535) {\n        throw new Error(`Label ${num} out of range: min label 1 - max label 65535.`);\n    }\n    const numHex = num.toString(16).padStart(4, \"0\");\n    return \"0\" + numHex + checksum(numHex) + \"0\";\n}\nfunction fromLabel(label) {\n    if (label.length !== 8 || !(label[0] === \"0\" && label[7] === \"0\")) {\n        return null;\n    }\n    const numHex = label.slice(1, 5);\n    const num = parseInt(numHex, 16);\n    const check = label.slice(5, 7);\n    return check === checksum(numHex) ? num : null;\n}\n/**\n * @param name Hex encoded\n */\nfunction toUnit(policyId, name, label) {\n    const hexLabel = Number.isInteger(label) ? toLabel(label) : \"\";\n    const n = name ? name : \"\";\n    if ((n + hexLabel).length > 64) {\n        throw new Error(\"Asset name size exceeds 32 bytes.\");\n    }\n    if (policyId.length !== 56) {\n        throw new Error(`Policy id invalid: ${policyId}.`);\n    }\n    return policyId + hexLabel + n;\n}\n/**\n * Splits unit into policy id, asset name (entire asset name), name (asset name without label) and label if applicable.\n * name will be returned in Hex.\n */\nfunction fromUnit(unit) {\n    const policyId = unit.slice(0, 56);\n    const assetName = unit.slice(56) || null;\n    const label = fromLabel(unit.slice(56, 64));\n    const name = (() => {\n        const hexName = Number.isInteger(label) ? unit.slice(64) : unit.slice(56);\n        return hexName || null;\n    })();\n    return { policyId, assetName, name, label };\n}\n/**\n * Convert a native script from Json to the Hex representation.\n * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md\n */\nfunction nativeScriptFromJson(nativeScript) {\n    return {\n        type: \"Native\",\n        script: toHex(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.encode_json_str_to_native_script(JSON.stringify(nativeScript), \"\", _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.ScriptSchema.Node).to_bytes()),\n    };\n}\nfunction applyParamsToScript(plutusScript, params, shape) {\n    const p = (shape ? _plutus_data_js__WEBPACK_IMPORTED_MODULE_5__.Data.castTo(params, shape) : params);\n    return toHex(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.apply_params_to_plutus_script(_core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusList.from_bytes(fromHex(_plutus_data_js__WEBPACK_IMPORTED_MODULE_5__.Data.to(p))), _core_mod_js__WEBPACK_IMPORTED_MODULE_1__.C.PlutusScript.from_bytes(fromHex(plutusScript))).to_bytes());\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lucid-cardano/esm/src/utils/utils.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fnathan%2FDesktop%2Fexplorer%2Fsrc%2Fpages%2Ftoken%2F%5Bpolicy%5D.js&page=%2Ftoken%2F%5Bpolicy%5D!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);