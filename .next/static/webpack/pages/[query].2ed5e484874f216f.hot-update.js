"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[query]",{

/***/ "./pages/searchbar.js":
/*!****************************!*\
  !*** ./pages/searchbar.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SearchBar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _s = $RefreshSig$();\nconst { useRouter  } = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\nconst { useState  } = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n// search bar component\n//  contains a form which takes user input and redirects them to the appropriate page\nfunction SearchBar(props) {\n    _s();\n    // react hook used to store user inputed strings\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    // next/router, a next.js feature that can redirect users to specific pages.\n    const router = useRouter();\n    // ** this method takes a string inputted by the user redirects them to the appropriate page\n    // base addresses are routed to a 'wallet' page along with the indentifying stake address\n    // \n    // @param  -- event triggered by form when text is inputted into the search form\n    // when event is triggered, the inputted string gets set to the react hook above called 'searchQuery'\n    // this value can then be used to get the inputted string from the user.\n    const handleSearch = async (event)=>{\n        event.preventDefault();\n        // handle base addresses -- containing stake key\n        // doesnt include enterprise addresses\n        if (searchQuery.startsWith(\"add\")) {\n            // fetch stake address from blockfrost API\n            let stakeAddress = await getStakeFromAddress(searchQuery);\n            // redirect user to wallet page with wallet identifying stake address\n            if (stakeAddress != null) {\n                router.push(\"/\".concat(stakeAddress));\n            } else {\n                console.log(\"not a valid address, not stake address found\");\n            }\n        } else if (searchQuery.startsWith(\"stake\") || searchQuery.startsWith(\"$\")) {\n            // handles must contain atleast 2 chars e.g. '$a'\n            if (searchQuery.length > 1) {\n                // route to wallet page with handle or stake address\n                // stake address is fetched from handle on wallet page\n                router.push(\"/\".concat(searchQuery));\n            }\n        } else {\n            // if neither of above, inputted text may be 'asset ID'\n            // then route to token page with 'assetID' and stake address if wallet is connected.\n            if (props.stake != null) {\n                router.push(\"/\".concat(searchQuery, \"/?stake=\") + props.stake);\n            } else {\n                router.push(\"/\".concat(searchQuery));\n            }\n        }\n    };\n    // this method fetches the stake address for any given base address.\n    // it uses a Blockfrost API which returns data for specific addresses.\n    // @param - a base address, containing the stake key for its wallet.\n    // @return a stake address, an account address which can be used to fetch data for its corresponding wallet\n    async function getStakeFromAddress(address) {\n        try {\n            // fetch data relating to address\n            const req = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/addresses/\" + address, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\",\n                    \"cache-control\": \"max-age=31536000\"\n                }\n            });\n            // JSON returned contains stake address for given base address.\n            const res = await req.json();\n            if (res.stake_address != null) {\n                return res.stake_address;\n            } else {\n                return null;\n            }\n        } catch (error) {\n            // handle error\n            return null;\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        className: \"searchForm\",\n        onSubmit: handleSearch,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                className: \"search-input\",\n                placeholder: \"Search for an address or a specific token...\",\n                value: searchQuery,\n                onChange: (event)=>setSearchQuery(event.target.value)\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/pages/searchbar.js\",\n                lineNumber: 90,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                type: \"submit\",\n                className: \"search-button\",\n                children: \"Search\"\n            }, void 0, false, {\n                fileName: \"/Users/nathan/Desktop/explorer/pages/searchbar.js\",\n                lineNumber: 91,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nathan/Desktop/explorer/pages/searchbar.js\",\n        lineNumber: 89,\n        columnNumber: 9\n    }, this);\n}\n_s(SearchBar, \"4sm5Xy4sGA6QIGrHn8tQ9Lk+vI8=\", false, function() {\n    return [\n        useRouter\n    ];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/searchbar.js\n"));

/***/ })

});