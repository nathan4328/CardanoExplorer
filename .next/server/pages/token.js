"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/token";
exports.ids = ["pages/token"];
exports.modules = {

/***/ "./src/pages/token.js":
/*!****************************!*\
  !*** ./src/pages/token.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Token)\n/* harmony export */ });\nclass Token {\n    constructor(asset_name, policy_id, quantity){\n        this.asset_name = asset_name;\n        this.policy_id = policy_id;\n        this.quantity = quantity;\n    }\n    async getMetadata() {\n        try {\n            const data = await fetch(\"https://cardano-mainnet.blockfrost.io/api/v0/assets/\" + this.policy_id + this.asset_name, {\n                headers: {\n                    project_id: \"mainnetoW61YYSiOoLSaNQ6dzTrkAG4azXVIrvh\"\n                }\n            });\n            this.metadata = await data.json();\n            if (this.metadata.metadata != null) {\n                return this.metadata.metadata;\n            } else if (this.metadata.onchain_metadata != null) {\n                return this.metadata.onchain_metadata;\n            } else {\n                return \"no metadata found\";\n            }\n        } catch (error) {\n            console.log(error);\n            return \"none\";\n        }\n    }\n    getIpfsFromMetadata() {\n        const keys = Object.keys(this.metadata);\n        const values = Object.values(this.metadata);\n        let ipfs = \"\";\n        for(let i = 0; i < keys.length; i++){\n            if (keys[i] == \"image\") {\n                ipfs = values[i];\n            }\n            if (keys[i] == \"logo\") {\n                ipfs = \"data:image/png;base64,\" + values[i];\n            }\n        }\n        try {\n            if (Array.isArray(ipfs)) {\n                let newipfs = \"\";\n                for (const element of ipfs){\n                    newipfs = newipfs + element;\n                }\n                if (newipfs.startsWith(\"ba\")) {\n                    newipfs = \"http://dweb.link/ipfs/\" + ipfs;\n                    newipfs = newipfs.replace(/,/g, \"\");\n                }\n                return newipfs;\n            }\n            if (ipfs.startsWith(\"ipfs://\")) {\n                ipfs = ipfs.slice(7);\n                if (ipfs.startsWith(\"ipfs/\")) {\n                    ipfs = ipfs.slice(5);\n                }\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            }\n            if (ipfs.startsWith(\"ipfs/\")) {\n                ipfs = ipfs.slice(5);\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            }\n            if (ipfs.startsWith(\"Qm\")) {\n                ipfs = \"http://dweb.link/ipfs/\" + ipfs;\n            }\n        } catch  {\n            return \"none\";\n        }\n        return ipfs;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvdG9rZW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLE1BQU1BO0lBRWpCQyxZQUFZQyxVQUFVLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxDQUFDO1FBQ3hDLElBQUksQ0FBQ0YsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO0lBQ3BCO0lBRUEsTUFBTUMsY0FBYTtRQUNqQixJQUFHO1lBQ0QsTUFBTUMsT0FBTyxNQUFNQyxNQUFNLHlEQUF1RCxJQUFJLENBQUNKLFNBQVMsR0FBQyxJQUFJLENBQUNELFVBQVUsRUFDOUc7Z0JBQUNNLFNBQVE7b0JBQUNDLFlBQVk7Z0JBQXlDO1lBQUM7WUFHaEUsSUFBSSxDQUFDQyxRQUFRLEdBQUcsTUFBTUosS0FBS0ssSUFBSTtZQUMvQixJQUFHLElBQUksQ0FBQ0QsUUFBUSxDQUFDQSxRQUFRLElBQUksSUFBSSxFQUFDO2dCQUNoQyxPQUFPLElBQUksQ0FBQ0EsUUFBUSxDQUFDQSxRQUFRO1lBQy9CLE9BQ0ssSUFBRyxJQUFJLENBQUNBLFFBQVEsQ0FBQ0UsZ0JBQWdCLElBQUksSUFBSSxFQUFDO2dCQUM3QyxPQUFPLElBQUksQ0FBQ0YsUUFBUSxDQUFDRSxnQkFBZ0I7WUFDdkMsT0FDSTtnQkFDRixPQUFPO1lBQ1QsQ0FBQztRQUNILEVBQUMsT0FBTUMsT0FBTTtZQUNYQyxRQUFRQyxHQUFHLENBQUNGO1lBQ1osT0FBTztRQUNUO0lBRUY7SUFFQUcsc0JBQXFCO1FBQ25CLE1BQU1DLE9BQU9DLE9BQU9ELElBQUksQ0FBQyxJQUFJLENBQUNQLFFBQVE7UUFDdEMsTUFBTVMsU0FBU0QsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQ1QsUUFBUTtRQUMxQyxJQUFJVSxPQUFPO1FBQ1gsSUFBSSxJQUFJQyxJQUFFLEdBQUVBLElBQUVKLEtBQUtLLE1BQU0sRUFBQ0QsSUFBSTtZQUc1QixJQUFHSixJQUFJLENBQUNJLEVBQUUsSUFBSSxTQUFRO2dCQUNwQkQsT0FBT0QsTUFBTSxDQUFDRSxFQUFFO1lBQ2xCLENBQUM7WUFFRCxJQUFHSixJQUFJLENBQUNJLEVBQUUsSUFBSSxRQUFPO2dCQUNuQkQsT0FBTywyQkFBeUJELE1BQU0sQ0FBQ0UsRUFBRTtZQUMzQyxDQUFDO1FBQ0g7UUFDQSxJQUFHO1lBQ0QsSUFBR0UsTUFBTUMsT0FBTyxDQUFDSixPQUFNO2dCQUNyQixJQUFJSyxVQUFVO2dCQUNkLEtBQUksTUFBTUMsV0FBV04sS0FBSztvQkFDeEJLLFVBQVVBLFVBQVVDO2dCQUN0QjtnQkFDQSxJQUFHRCxRQUFRRSxVQUFVLENBQUMsT0FBTTtvQkFDMUJGLFVBQVUsMkJBQXlCTDtvQkFDbkNLLFVBQVVBLFFBQVFHLE9BQU8sQ0FBQyxNQUFNO2dCQUNsQyxDQUFDO2dCQUNELE9BQU9IO1lBQ1QsQ0FBQztZQUNELElBQUdMLEtBQUtPLFVBQVUsQ0FBQyxZQUFXO2dCQUM1QlAsT0FBT0EsS0FBS1MsS0FBSyxDQUFDO2dCQUNsQixJQUFHVCxLQUFLTyxVQUFVLENBQUMsVUFBUztvQkFDMUJQLE9BQU9BLEtBQUtTLEtBQUssQ0FBQztnQkFDcEIsQ0FBQztnQkFDRFQsT0FBTywyQkFBeUJBO1lBQ2xDLENBQUM7WUFDRCxJQUFHQSxLQUFLTyxVQUFVLENBQUMsVUFBUztnQkFDMUJQLE9BQU9BLEtBQUtTLEtBQUssQ0FBQztnQkFDbEJULE9BQU8sMkJBQXlCQTtZQUNsQyxDQUFDO1lBQ0QsSUFBR0EsS0FBS08sVUFBVSxDQUFDLE9BQU07Z0JBQ3ZCUCxPQUFPLDJCQUF5QkE7WUFDbEMsQ0FBQztRQUNILEVBQUMsT0FBSztZQUNKLE9BQU87UUFDVDtRQUNBLE9BQU9BO0lBRVQ7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhwbG9yZXIvLi9zcmMvcGFnZXMvdG9rZW4uanM/YzI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBUb2tlbntcblxuICAgIGNvbnN0cnVjdG9yKGFzc2V0X25hbWUsIHBvbGljeV9pZCwgcXVhbnRpdHkpe1xuICAgICAgICB0aGlzLmFzc2V0X25hbWUgPSBhc3NldF9uYW1lO1xuICAgICAgICB0aGlzLnBvbGljeV9pZCA9IHBvbGljeV9pZDtcbiAgICAgICAgdGhpcy5xdWFudGl0eSA9IHF1YW50aXR5OyBcbiAgICB9XG5cbiAgICBhc3luYyBnZXRNZXRhZGF0YSgpe1xuICAgICAgdHJ5e1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vY2FyZGFuby1tYWlubmV0LmJsb2NrZnJvc3QuaW8vYXBpL3YwL2Fzc2V0cy8nK3RoaXMucG9saWN5X2lkK3RoaXMuYXNzZXRfbmFtZSxcbiAgICAgICAge2hlYWRlcnM6e3Byb2plY3RfaWQ6ICdtYWlubmV0b1c2MVlZU2lPb0xTYU5RNmR6VHJrQUc0YXpYVklydmgnfX0pO1xuXG5cbiAgICAgICAgdGhpcy5tZXRhZGF0YSA9IGF3YWl0IGRhdGEuanNvbigpO1xuICAgICAgICBpZih0aGlzLm1ldGFkYXRhLm1ldGFkYXRhICE9IG51bGwpe1xuICAgICAgICAgIHJldHVybiB0aGlzLm1ldGFkYXRhLm1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYodGhpcy5tZXRhZGF0YS5vbmNoYWluX21ldGFkYXRhICE9IG51bGwpe1xuICAgICAgICAgIHJldHVybiB0aGlzLm1ldGFkYXRhLm9uY2hhaW5fbWV0YWRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICByZXR1cm4gJ25vIG1ldGFkYXRhIGZvdW5kJztcbiAgICAgICAgfVxuICAgICAgfWNhdGNoKGVycm9yKXtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICByZXR1cm4gJ25vbmUnO1xuICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBnZXRJcGZzRnJvbU1ldGFkYXRhKCl7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5tZXRhZGF0YSk7XG4gICAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMubWV0YWRhdGEpO1xuICAgICAgbGV0IGlwZnMgPSBcIlwiO1xuICAgICAgZm9yKGxldCBpPTA7aTxrZXlzLmxlbmd0aDtpKyspe1xuXG5cbiAgICAgICAgaWYoa2V5c1tpXSA9PSBcImltYWdlXCIpe1xuICAgICAgICAgIGlwZnMgPSB2YWx1ZXNbaV07XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaWYoa2V5c1tpXSA9PSBcImxvZ29cIil7XG4gICAgICAgICAgaXBmcyA9IFwiZGF0YTppbWFnZS9wbmc7YmFzZTY0LFwiK3ZhbHVlc1tpXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0cnl7XG4gICAgICAgIGlmKEFycmF5LmlzQXJyYXkoaXBmcykpe1xuICAgICAgICAgIGxldCBuZXdpcGZzID0gXCJcIjtcbiAgICAgICAgICBmb3IoY29uc3QgZWxlbWVudCBvZiBpcGZzKXtcbiAgICAgICAgICAgIG5ld2lwZnMgPSBuZXdpcGZzICsgZWxlbWVudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYobmV3aXBmcy5zdGFydHNXaXRoKCdiYScpKXtcbiAgICAgICAgICAgIG5ld2lwZnMgPSBcImh0dHA6Ly9kd2ViLmxpbmsvaXBmcy9cIitpcGZzO1xuICAgICAgICAgICAgbmV3aXBmcyA9IG5ld2lwZnMucmVwbGFjZSgvLC9nLCAnJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBuZXdpcGZzO1xuICAgICAgICB9XG4gICAgICAgIGlmKGlwZnMuc3RhcnRzV2l0aCgnaXBmczovLycpKXtcbiAgICAgICAgICBpcGZzID0gaXBmcy5zbGljZSg3KTtcbiAgICAgICAgICBpZihpcGZzLnN0YXJ0c1dpdGgoJ2lwZnMvJykpe1xuICAgICAgICAgICAgaXBmcyA9IGlwZnMuc2xpY2UoNSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlwZnMgPSBcImh0dHA6Ly9kd2ViLmxpbmsvaXBmcy9cIitpcGZzO1xuICAgICAgICB9XG4gICAgICAgIGlmKGlwZnMuc3RhcnRzV2l0aCgnaXBmcy8nKSl7XG4gICAgICAgICAgaXBmcyA9IGlwZnMuc2xpY2UoNSk7XG4gICAgICAgICAgaXBmcyA9IFwiaHR0cDovL2R3ZWIubGluay9pcGZzL1wiK2lwZnM7XG4gICAgICAgIH1cbiAgICAgICAgaWYoaXBmcy5zdGFydHNXaXRoKCdRbScpKXtcbiAgICAgICAgICBpcGZzID0gXCJodHRwOi8vZHdlYi5saW5rL2lwZnMvXCIraXBmcztcbiAgICAgICAgfVxuICAgICAgfWNhdGNoe1xuICAgICAgICByZXR1cm4gJ25vbmUnO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGlwZnM7XG4gICAgXG4gICAgfVxufVxuXG5cblxuIl0sIm5hbWVzIjpbIlRva2VuIiwiY29uc3RydWN0b3IiLCJhc3NldF9uYW1lIiwicG9saWN5X2lkIiwicXVhbnRpdHkiLCJnZXRNZXRhZGF0YSIsImRhdGEiLCJmZXRjaCIsImhlYWRlcnMiLCJwcm9qZWN0X2lkIiwibWV0YWRhdGEiLCJqc29uIiwib25jaGFpbl9tZXRhZGF0YSIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdldElwZnNGcm9tTWV0YWRhdGEiLCJrZXlzIiwiT2JqZWN0IiwidmFsdWVzIiwiaXBmcyIsImkiLCJsZW5ndGgiLCJBcnJheSIsImlzQXJyYXkiLCJuZXdpcGZzIiwiZWxlbWVudCIsInN0YXJ0c1dpdGgiLCJyZXBsYWNlIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/token.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/token.js"));
module.exports = __webpack_exports__;

})();